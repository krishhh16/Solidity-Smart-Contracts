{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x18e223717d9fd7c71e60c3fc3209ff49ee774365b6294039e2f6c17b8250c7a6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c4a8457a84ddb1e753c8634876065f5d12691fac78675dcc7a405f511827015b\",\"dweb:/ipfs/QmRagGCM8bZXGjCwxt8tmNf79yb1SuCqNfiDr8WvakEPxo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x18e223717d9fd7c71e60c3fc3209ff49ee774365b6294039e2f6c17b8250c7a6","urls":["bzz-raw://c4a8457a84ddb1e753c8634876065f5d12691fac78675dcc7a405f511827015b","dweb:/ipfs/QmRagGCM8bZXGjCwxt8tmNf79yb1SuCqNfiDr8WvakEPxo"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":16202,"exportedSymbols":{"Vm":[16201],"VmSafe":[15552]},"nodeType":"SourceUnit","src":"117:94988:16","nodes":[{"id":12238,"nodeType":"PragmaDirective","src":"117:31:16","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12239,"nodeType":"PragmaDirective","src":"149:33:16","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":15552,"nodeType":"ContractDefinition","src":"409:78634:16","nodes":[{"id":12246,"nodeType":"EnumDefinition","src":"529:533:16","nodes":[],"canonicalName":"VmSafe.CallerMode","members":[{"id":12241,"name":"None","nameLocation":"610:4:16","nodeType":"EnumValue","src":"610:4:16"},{"id":12242,"name":"Broadcast","nameLocation":"714:9:16","nodeType":"EnumValue","src":"714:9:16"},{"id":12243,"name":"RecurrentBroadcast","nameLocation":"829:18:16","nodeType":"EnumValue","src":"829:18:16"},{"id":12244,"name":"Prank","nameLocation":"939:5:16","nodeType":"EnumValue","src":"939:5:16"},{"id":12245,"name":"RecurrentPrank","nameLocation":"1042:14:16","nodeType":"EnumValue","src":"1042:14:16"}],"name":"CallerMode","nameLocation":"534:10:16"},{"id":12258,"nodeType":"EnumDefinition","src":"1118:791:16","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","members":[{"id":12247,"name":"Call","nameLocation":"1186:4:16","nodeType":"EnumValue","src":"1186:4:16"},{"id":12248,"name":"DelegateCall","nameLocation":"1252:12:16","nodeType":"EnumValue","src":"1252:12:16"},{"id":12249,"name":"CallCode","nameLocation":"1322:8:16","nodeType":"EnumValue","src":"1322:8:16"},{"id":12250,"name":"StaticCall","nameLocation":"1390:10:16","nodeType":"EnumValue","src":"1390:10:16"},{"id":12251,"name":"Create","nameLocation":"1446:6:16","nodeType":"EnumValue","src":"1446:6:16"},{"id":12252,"name":"SelfDestruct","nameLocation":"1505:12:16","nodeType":"EnumValue","src":"1505:12:16"},{"id":12253,"name":"Resume","nameLocation":"1644:6:16","nodeType":"EnumValue","src":"1644:6:16"},{"id":12254,"name":"Balance","nameLocation":"1703:7:16","nodeType":"EnumValue","src":"1703:7:16"},{"id":12255,"name":"Extcodesize","nameLocation":"1764:11:16","nodeType":"EnumValue","src":"1764:11:16"},{"id":12256,"name":"Extcodehash","nameLocation":"1829:11:16","nodeType":"EnumValue","src":"1829:11:16"},{"id":12257,"name":"Extcodecopy","nameLocation":"1892:11:16","nodeType":"EnumValue","src":"1892:11:16"}],"name":"AccountAccessKind","nameLocation":"1123:17:16"},{"id":12268,"nodeType":"EnumDefinition","src":"1949:683:16","nodes":[],"canonicalName":"VmSafe.ForgeContext","members":[{"id":12259,"name":"TestGroup","nameLocation":"2047:9:16","nodeType":"EnumValue","src":"2047:9:16"},{"id":12260,"name":"Test","nameLocation":"2109:4:16","nodeType":"EnumValue","src":"2109:4:16"},{"id":12261,"name":"Coverage","nameLocation":"2170:8:16","nodeType":"EnumValue","src":"2170:8:16"},{"id":12262,"name":"Snapshot","nameLocation":"2235:8:16","nodeType":"EnumValue","src":"2235:8:16"},{"id":12263,"name":"ScriptGroup","nameLocation":"2327:11:16","nodeType":"EnumValue","src":"2327:11:16"},{"id":12264,"name":"ScriptDryRun","nameLocation":"2393:12:16","nodeType":"EnumValue","src":"2393:12:16"},{"id":12265,"name":"ScriptBroadcast","nameLocation":"2472:15:16","nodeType":"EnumValue","src":"2472:15:16"},{"id":12266,"name":"ScriptResume","nameLocation":"2551:12:16","nodeType":"EnumValue","src":"2551:12:16"},{"id":12267,"name":"Unknown","nameLocation":"2619:7:16","nodeType":"EnumValue","src":"2619:7:16"}],"name":"ForgeContext","nameLocation":"1954:12:16"},{"id":12276,"nodeType":"StructDefinition","src":"2694:237:16","nodes":[],"canonicalName":"VmSafe.Log","members":[{"constant":false,"id":12271,"mutability":"mutable","name":"topics","nameLocation":"2792:6:16","nodeType":"VariableDeclaration","scope":12276,"src":"2782:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12270,"nodeType":"ArrayTypeName","src":"2782:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12273,"mutability":"mutable","name":"data","nameLocation":"2850:4:16","nodeType":"VariableDeclaration","scope":12276,"src":"2844:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12272,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12275,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:16","nodeType":"VariableDeclaration","scope":12276,"src":"2909:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12274,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:16","scope":15552,"visibility":"public"},{"id":12281,"nodeType":"StructDefinition","src":"3000:119:16","nodes":[],"canonicalName":"VmSafe.Rpc","members":[{"constant":false,"id":12278,"mutability":"mutable","name":"key","nameLocation":"3065:3:16","nodeType":"VariableDeclaration","scope":12281,"src":"3058:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12277,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12280,"mutability":"mutable","name":"url","nameLocation":"3109:3:16","nodeType":"VariableDeclaration","scope":12281,"src":"3102:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12279,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:16","scope":15552,"visibility":"public"},{"id":12301,"nodeType":"StructDefinition","src":"3179:615:16","nodes":[],"canonicalName":"VmSafe.EthGetLogs","members":[{"constant":false,"id":12283,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:16","nodeType":"VariableDeclaration","scope":12301,"src":"3252:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12282,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12286,"mutability":"mutable","name":"topics","nameLocation":"3354:6:16","nodeType":"VariableDeclaration","scope":12301,"src":"3344:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12285,"nodeType":"ArrayTypeName","src":"3344:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12288,"mutability":"mutable","name":"data","nameLocation":"3412:4:16","nodeType":"VariableDeclaration","scope":12301,"src":"3406:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12287,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12290,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:16","nodeType":"VariableDeclaration","scope":12301,"src":"3453:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12292,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:16","nodeType":"VariableDeclaration","scope":12301,"src":"3509:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12291,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12294,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:16","nodeType":"VariableDeclaration","scope":12301,"src":"3570:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12296,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:16","nodeType":"VariableDeclaration","scope":12301,"src":"3650:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12295,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12298,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:16","nodeType":"VariableDeclaration","scope":12301,"src":"3709:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12300,"mutability":"mutable","name":"removed","nameLocation":"3780:7:16","nodeType":"VariableDeclaration","scope":12301,"src":"3775:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12299,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:16","scope":15552,"visibility":"public"},{"id":12312,"nodeType":"StructDefinition","src":"3870:334:16","nodes":[],"canonicalName":"VmSafe.DirEntry","members":[{"constant":false,"id":12303,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:16","nodeType":"VariableDeclaration","scope":12312,"src":"3934:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12302,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12305,"mutability":"mutable","name":"path","nameLocation":"4004:4:16","nodeType":"VariableDeclaration","scope":12312,"src":"3997:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12304,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12307,"mutability":"mutable","name":"depth","nameLocation":"4060:5:16","nodeType":"VariableDeclaration","scope":12312,"src":"4053:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12306,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12309,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:16","nodeType":"VariableDeclaration","scope":12312,"src":"4120:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12308,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12311,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:16","nodeType":"VariableDeclaration","scope":12312,"src":"4183:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12310,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:16","scope":15552,"visibility":"public"},{"id":12327,"nodeType":"StructDefinition","src":"4434:599:16","nodes":[],"canonicalName":"VmSafe.FsMetadata","members":[{"constant":false,"id":12314,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:16","nodeType":"VariableDeclaration","scope":12327,"src":"4515:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12313,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12316,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:16","nodeType":"VariableDeclaration","scope":12327,"src":"4586:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12315,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12318,"mutability":"mutable","name":"length","nameLocation":"4683:6:16","nodeType":"VariableDeclaration","scope":12327,"src":"4675:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12320,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:16","nodeType":"VariableDeclaration","scope":12327,"src":"4769:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12319,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12322,"mutability":"mutable","name":"modified","nameLocation":"4863:8:16","nodeType":"VariableDeclaration","scope":12327,"src":"4855:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12324,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:16","nodeType":"VariableDeclaration","scope":12327,"src":"4931:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12323,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12326,"mutability":"mutable","name":"created","nameLocation":"5019:7:16","nodeType":"VariableDeclaration","scope":12327,"src":"5011:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12325,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:16","scope":15552,"visibility":"public"},{"id":12336,"nodeType":"StructDefinition","src":"5087:277:16","nodes":[],"canonicalName":"VmSafe.Wallet","members":[{"constant":false,"id":12329,"mutability":"mutable","name":"addr","nameLocation":"5152:4:16","nodeType":"VariableDeclaration","scope":12336,"src":"5144:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12328,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12331,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:16","nodeType":"VariableDeclaration","scope":12336,"src":"5206:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12333,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:16","nodeType":"VariableDeclaration","scope":12336,"src":"5274:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12335,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:16","nodeType":"VariableDeclaration","scope":12336,"src":"5339:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12334,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:16","scope":15552,"visibility":"public"},{"id":12343,"nodeType":"StructDefinition","src":"5409:213:16","nodes":[],"canonicalName":"VmSafe.FfiResult","members":[{"constant":false,"id":12338,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:16","nodeType":"VariableDeclaration","scope":12343,"src":"5474:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":12337,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":12340,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:16","nodeType":"VariableDeclaration","scope":12343,"src":"5551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12339,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12342,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:16","nodeType":"VariableDeclaration","scope":12343,"src":"5603:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12341,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:16","scope":15552,"visibility":"public"},{"id":12348,"nodeType":"StructDefinition","src":"5671:184:16","nodes":[],"canonicalName":"VmSafe.ChainInfo","members":[{"constant":false,"id":12345,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:16","nodeType":"VariableDeclaration","scope":12348,"src":"5764:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12344,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12347,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:16","nodeType":"VariableDeclaration","scope":12348,"src":"5833:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12346,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:16","scope":15552,"visibility":"public"},{"id":12379,"nodeType":"StructDefinition","src":"5916:1837:16","nodes":[],"canonicalName":"VmSafe.AccountAccess","members":[{"constant":false,"id":12351,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:16","nodeType":"VariableDeclaration","scope":12379,"src":"5998:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12348_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":12350,"nodeType":"UserDefinedTypeName","pathNode":{"id":12349,"name":"ChainInfo","nameLocations":["5998:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":12348,"src":"5998:9:16"},"referencedDeclaration":12348,"src":"5998:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12348_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":12354,"mutability":"mutable","name":"kind","nameLocation":"6471:4:16","nodeType":"VariableDeclaration","scope":12379,"src":"6453:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12258","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":12353,"nodeType":"UserDefinedTypeName","pathNode":{"id":12352,"name":"AccountAccessKind","nameLocations":["6453:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":12258,"src":"6453:17:16"},"referencedDeclaration":12258,"src":"6453:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12258","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":12356,"mutability":"mutable","name":"account","nameLocation":"6648:7:16","nodeType":"VariableDeclaration","scope":12379,"src":"6640:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12355,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12358,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:16","nodeType":"VariableDeclaration","scope":12379,"src":"6703:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12357,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12360,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:16","nodeType":"VariableDeclaration","scope":12379,"src":"6917:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12359,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12362,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:16","nodeType":"VariableDeclaration","scope":12379,"src":"7000:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12361,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12364,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:16","nodeType":"VariableDeclaration","scope":12379,"src":"7175:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12366,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:16","nodeType":"VariableDeclaration","scope":12379,"src":"7254:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12365,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12368,"mutability":"mutable","name":"value","nameLocation":"7344:5:16","nodeType":"VariableDeclaration","scope":12379,"src":"7336:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12367,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12370,"mutability":"mutable","name":"data","nameLocation":"7418:4:16","nodeType":"VariableDeclaration","scope":12379,"src":"7412:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12369,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12372,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:16","nodeType":"VariableDeclaration","scope":12379,"src":"7508:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12371,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12376,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:16","nodeType":"VariableDeclaration","scope":12379,"src":"7619:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12392_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":12374,"nodeType":"UserDefinedTypeName","pathNode":{"id":12373,"name":"StorageAccess","nameLocations":["7619:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":12392,"src":"7619:13:16"},"referencedDeclaration":12392,"src":"7619:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12392_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12375,"nodeType":"ArrayTypeName","src":"7619:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12392_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":12378,"mutability":"mutable","name":"depth","nameLocation":"7741:5:16","nodeType":"VariableDeclaration","scope":12379,"src":"7734:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12377,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:16","scope":15552,"visibility":"public"},{"id":12392,"nodeType":"StructDefinition","src":"7815:425:16","nodes":[],"canonicalName":"VmSafe.StorageAccess","members":[{"constant":false,"id":12381,"mutability":"mutable","name":"account","nameLocation":"7905:7:16","nodeType":"VariableDeclaration","scope":12392,"src":"7897:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12380,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12383,"mutability":"mutable","name":"slot","nameLocation":"7969:4:16","nodeType":"VariableDeclaration","scope":12392,"src":"7961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12385,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:16","nodeType":"VariableDeclaration","scope":12392,"src":"8021:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12384,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12387,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:16","nodeType":"VariableDeclaration","scope":12392,"src":"8086:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12389,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:16","nodeType":"VariableDeclaration","scope":12392,"src":"8155:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12391,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:16","nodeType":"VariableDeclaration","scope":12392,"src":"8220:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12390,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:16","scope":15552,"visibility":"public"},{"id":12403,"nodeType":"StructDefinition","src":"8291:458:16","nodes":[],"canonicalName":"VmSafe.Gas","members":[{"constant":false,"id":12394,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:16","nodeType":"VariableDeclaration","scope":12403,"src":"8350:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12393,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12396,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:16","nodeType":"VariableDeclaration","scope":12403,"src":"8406:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12395,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12398,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:16","nodeType":"VariableDeclaration","scope":12403,"src":"8587:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12397,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12400,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:16","nodeType":"VariableDeclaration","scope":12403,"src":"8656:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":12399,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":12402,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:16","nodeType":"VariableDeclaration","scope":12403,"src":"8723:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12401,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:16","scope":15552,"visibility":"public"},{"id":12411,"nodeType":"FunctionDefinition","src":"8936:80:16","nodes":[],"documentation":{"id":12404,"nodeType":"StructuredDocumentation","src":"8793:138:16","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8945:10:16","parameters":{"id":12407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12406,"mutability":"mutable","name":"name","nameLocation":"8972:4:16","nodeType":"VariableDeclaration","scope":12411,"src":"8956:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12405,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8955:22:16"},"returnParameters":{"id":12410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12409,"mutability":"mutable","name":"value","nameLocation":"9009:5:16","nodeType":"VariableDeclaration","scope":12411,"src":"9001:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12408,"name":"address","nodeType":"ElementaryTypeName","src":"9001:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9000:15:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12422,"nodeType":"FunctionDefinition","src":"9199:112:16","nodes":[],"documentation":{"id":12412,"nodeType":"StructuredDocumentation","src":"9022:172:16","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9208:10:16","parameters":{"id":12417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12414,"mutability":"mutable","name":"name","nameLocation":"9235:4:16","nodeType":"VariableDeclaration","scope":12422,"src":"9219:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12413,"name":"string","nodeType":"ElementaryTypeName","src":"9219:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12416,"mutability":"mutable","name":"delim","nameLocation":"9257:5:16","nodeType":"VariableDeclaration","scope":12422,"src":"9241:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12415,"name":"string","nodeType":"ElementaryTypeName","src":"9241:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9218:45:16"},"returnParameters":{"id":12421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12420,"mutability":"mutable","name":"value","nameLocation":"9304:5:16","nodeType":"VariableDeclaration","scope":12422,"src":"9287:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12418,"name":"address","nodeType":"ElementaryTypeName","src":"9287:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12419,"nodeType":"ArrayTypeName","src":"9287:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9286:24:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12430,"nodeType":"FunctionDefinition","src":"9457:74:16","nodes":[],"documentation":{"id":12423,"nodeType":"StructuredDocumentation","src":"9317:135:16","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9466:7:16","parameters":{"id":12426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12425,"mutability":"mutable","name":"name","nameLocation":"9490:4:16","nodeType":"VariableDeclaration","scope":12430,"src":"9474:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12424,"name":"string","nodeType":"ElementaryTypeName","src":"9474:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9473:22:16"},"returnParameters":{"id":12429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12428,"mutability":"mutable","name":"value","nameLocation":"9524:5:16","nodeType":"VariableDeclaration","scope":12430,"src":"9519:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12427,"name":"bool","nodeType":"ElementaryTypeName","src":"9519:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9518:12:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12441,"nodeType":"FunctionDefinition","src":"9711:106:16","nodes":[],"documentation":{"id":12431,"nodeType":"StructuredDocumentation","src":"9537:169:16","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9720:7:16","parameters":{"id":12436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12433,"mutability":"mutable","name":"name","nameLocation":"9744:4:16","nodeType":"VariableDeclaration","scope":12441,"src":"9728:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12432,"name":"string","nodeType":"ElementaryTypeName","src":"9728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12435,"mutability":"mutable","name":"delim","nameLocation":"9766:5:16","nodeType":"VariableDeclaration","scope":12441,"src":"9750:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12434,"name":"string","nodeType":"ElementaryTypeName","src":"9750:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9727:45:16"},"returnParameters":{"id":12440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12439,"mutability":"mutable","name":"value","nameLocation":"9810:5:16","nodeType":"VariableDeclaration","scope":12441,"src":"9796:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12437,"name":"bool","nodeType":"ElementaryTypeName","src":"9796:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12438,"nodeType":"ArrayTypeName","src":"9796:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9795:21:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12449,"nodeType":"FunctionDefinition","src":"9966:80:16","nodes":[],"documentation":{"id":12442,"nodeType":"StructuredDocumentation","src":"9823:138:16","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9975:10:16","parameters":{"id":12445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12444,"mutability":"mutable","name":"name","nameLocation":"10002:4:16","nodeType":"VariableDeclaration","scope":12449,"src":"9986:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12443,"name":"string","nodeType":"ElementaryTypeName","src":"9986:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9985:22:16"},"returnParameters":{"id":12448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12447,"mutability":"mutable","name":"value","nameLocation":"10039:5:16","nodeType":"VariableDeclaration","scope":12449,"src":"10031:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10030:15:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12460,"nodeType":"FunctionDefinition","src":"10229:112:16","nodes":[],"documentation":{"id":12450,"nodeType":"StructuredDocumentation","src":"10052:172:16","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10238:10:16","parameters":{"id":12455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12452,"mutability":"mutable","name":"name","nameLocation":"10265:4:16","nodeType":"VariableDeclaration","scope":12460,"src":"10249:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12451,"name":"string","nodeType":"ElementaryTypeName","src":"10249:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12454,"mutability":"mutable","name":"delim","nameLocation":"10287:5:16","nodeType":"VariableDeclaration","scope":12460,"src":"10271:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12453,"name":"string","nodeType":"ElementaryTypeName","src":"10271:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10248:45:16"},"returnParameters":{"id":12459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12458,"mutability":"mutable","name":"value","nameLocation":"10334:5:16","nodeType":"VariableDeclaration","scope":12460,"src":"10317:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10317:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12457,"nodeType":"ArrayTypeName","src":"10317:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10316:24:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12468,"nodeType":"FunctionDefinition","src":"10488:83:16","nodes":[],"documentation":{"id":12461,"nodeType":"StructuredDocumentation","src":"10347:136:16","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10497:8:16","parameters":{"id":12464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12463,"mutability":"mutable","name":"name","nameLocation":"10522:4:16","nodeType":"VariableDeclaration","scope":12468,"src":"10506:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12462,"name":"string","nodeType":"ElementaryTypeName","src":"10506:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10505:22:16"},"returnParameters":{"id":12467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12466,"mutability":"mutable","name":"value","nameLocation":"10564:5:16","nodeType":"VariableDeclaration","scope":12468,"src":"10551:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12465,"name":"bytes","nodeType":"ElementaryTypeName","src":"10551:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10550:20:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12479,"nodeType":"FunctionDefinition","src":"10752:108:16","nodes":[],"documentation":{"id":12469,"nodeType":"StructuredDocumentation","src":"10577:170:16","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10761:8:16","parameters":{"id":12474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12471,"mutability":"mutable","name":"name","nameLocation":"10786:4:16","nodeType":"VariableDeclaration","scope":12479,"src":"10770:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12470,"name":"string","nodeType":"ElementaryTypeName","src":"10770:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12473,"mutability":"mutable","name":"delim","nameLocation":"10808:5:16","nodeType":"VariableDeclaration","scope":12479,"src":"10792:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12472,"name":"string","nodeType":"ElementaryTypeName","src":"10792:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10769:45:16"},"returnParameters":{"id":12478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12477,"mutability":"mutable","name":"value","nameLocation":"10853:5:16","nodeType":"VariableDeclaration","scope":12479,"src":"10838:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12475,"name":"bytes","nodeType":"ElementaryTypeName","src":"10838:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12476,"nodeType":"ArrayTypeName","src":"10838:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10837:22:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12487,"nodeType":"FunctionDefinition","src":"10962:77:16","nodes":[],"documentation":{"id":12480,"nodeType":"StructuredDocumentation","src":"10866:91:16","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10971:9:16","parameters":{"id":12483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12482,"mutability":"mutable","name":"name","nameLocation":"10997:4:16","nodeType":"VariableDeclaration","scope":12487,"src":"10981:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12481,"name":"string","nodeType":"ElementaryTypeName","src":"10981:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10980:22:16"},"returnParameters":{"id":12486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12485,"mutability":"mutable","name":"result","nameLocation":"11031:6:16","nodeType":"VariableDeclaration","scope":12487,"src":"11026:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12484,"name":"bool","nodeType":"ElementaryTypeName","src":"11026:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11025:13:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12495,"nodeType":"FunctionDefinition","src":"11187:75:16","nodes":[],"documentation":{"id":12488,"nodeType":"StructuredDocumentation","src":"11045:137:16","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11196:6:16","parameters":{"id":12491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12490,"mutability":"mutable","name":"name","nameLocation":"11219:4:16","nodeType":"VariableDeclaration","scope":12495,"src":"11203:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12489,"name":"string","nodeType":"ElementaryTypeName","src":"11203:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11202:22:16"},"returnParameters":{"id":12494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12493,"mutability":"mutable","name":"value","nameLocation":"11255:5:16","nodeType":"VariableDeclaration","scope":12495,"src":"11248:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12492,"name":"int256","nodeType":"ElementaryTypeName","src":"11248:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11247:14:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12506,"nodeType":"FunctionDefinition","src":"11444:107:16","nodes":[],"documentation":{"id":12496,"nodeType":"StructuredDocumentation","src":"11268:171:16","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11453:6:16","parameters":{"id":12501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12498,"mutability":"mutable","name":"name","nameLocation":"11476:4:16","nodeType":"VariableDeclaration","scope":12506,"src":"11460:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12497,"name":"string","nodeType":"ElementaryTypeName","src":"11460:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12500,"mutability":"mutable","name":"delim","nameLocation":"11498:5:16","nodeType":"VariableDeclaration","scope":12506,"src":"11482:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12499,"name":"string","nodeType":"ElementaryTypeName","src":"11482:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11459:45:16"},"returnParameters":{"id":12505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12504,"mutability":"mutable","name":"value","nameLocation":"11544:5:16","nodeType":"VariableDeclaration","scope":12506,"src":"11528:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12502,"name":"int256","nodeType":"ElementaryTypeName","src":"11528:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12503,"nodeType":"ArrayTypeName","src":"11528:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11527:23:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12516,"nodeType":"FunctionDefinition","src":"11742:91:16","nodes":[],"documentation":{"id":12507,"nodeType":"StructuredDocumentation","src":"11557:180:16","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11751:5:16","parameters":{"id":12512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12509,"mutability":"mutable","name":"name","nameLocation":"11773:4:16","nodeType":"VariableDeclaration","scope":12516,"src":"11757:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12508,"name":"string","nodeType":"ElementaryTypeName","src":"11757:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12511,"mutability":"mutable","name":"defaultValue","nameLocation":"11784:12:16","nodeType":"VariableDeclaration","scope":12516,"src":"11779:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12510,"name":"bool","nodeType":"ElementaryTypeName","src":"11779:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11756:41:16"},"returnParameters":{"id":12515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12514,"mutability":"mutable","name":"value","nameLocation":"11826:5:16","nodeType":"VariableDeclaration","scope":12516,"src":"11821:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12513,"name":"bool","nodeType":"ElementaryTypeName","src":"11821:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11820:12:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12526,"nodeType":"FunctionDefinition","src":"12027:97:16","nodes":[],"documentation":{"id":12517,"nodeType":"StructuredDocumentation","src":"11839:183:16","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12036:5:16","parameters":{"id":12522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12519,"mutability":"mutable","name":"name","nameLocation":"12058:4:16","nodeType":"VariableDeclaration","scope":12526,"src":"12042:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12518,"name":"string","nodeType":"ElementaryTypeName","src":"12042:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12521,"mutability":"mutable","name":"defaultValue","nameLocation":"12072:12:16","nodeType":"VariableDeclaration","scope":12526,"src":"12064:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12520,"name":"uint256","nodeType":"ElementaryTypeName","src":"12064:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12041:44:16"},"returnParameters":{"id":12525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12524,"mutability":"mutable","name":"value","nameLocation":"12117:5:16","nodeType":"VariableDeclaration","scope":12526,"src":"12109:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12523,"name":"uint256","nodeType":"ElementaryTypeName","src":"12109:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12108:15:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12540,"nodeType":"FunctionDefinition","src":"12352:164:16","nodes":[],"documentation":{"id":12527,"nodeType":"StructuredDocumentation","src":"12130:217:16","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12361:5:16","parameters":{"id":12535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12529,"mutability":"mutable","name":"name","nameLocation":"12383:4:16","nodeType":"VariableDeclaration","scope":12540,"src":"12367:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12528,"name":"string","nodeType":"ElementaryTypeName","src":"12367:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12531,"mutability":"mutable","name":"delim","nameLocation":"12405:5:16","nodeType":"VariableDeclaration","scope":12540,"src":"12389:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12530,"name":"string","nodeType":"ElementaryTypeName","src":"12389:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12534,"mutability":"mutable","name":"defaultValue","nameLocation":"12431:12:16","nodeType":"VariableDeclaration","scope":12540,"src":"12412:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12532,"name":"address","nodeType":"ElementaryTypeName","src":"12412:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12533,"nodeType":"ArrayTypeName","src":"12412:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12366:78:16"},"returnParameters":{"id":12539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12538,"mutability":"mutable","name":"value","nameLocation":"12509:5:16","nodeType":"VariableDeclaration","scope":12540,"src":"12492:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12536,"name":"address","nodeType":"ElementaryTypeName","src":"12492:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12537,"nodeType":"ArrayTypeName","src":"12492:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12491:24:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12554,"nodeType":"FunctionDefinition","src":"12744:164:16","nodes":[],"documentation":{"id":12541,"nodeType":"StructuredDocumentation","src":"12522:217:16","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12753:5:16","parameters":{"id":12549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12543,"mutability":"mutable","name":"name","nameLocation":"12775:4:16","nodeType":"VariableDeclaration","scope":12554,"src":"12759:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12542,"name":"string","nodeType":"ElementaryTypeName","src":"12759:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12545,"mutability":"mutable","name":"delim","nameLocation":"12797:5:16","nodeType":"VariableDeclaration","scope":12554,"src":"12781:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12544,"name":"string","nodeType":"ElementaryTypeName","src":"12781:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12548,"mutability":"mutable","name":"defaultValue","nameLocation":"12823:12:16","nodeType":"VariableDeclaration","scope":12554,"src":"12804:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12804:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12547,"nodeType":"ArrayTypeName","src":"12804:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12758:78:16"},"returnParameters":{"id":12553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12552,"mutability":"mutable","name":"value","nameLocation":"12901:5:16","nodeType":"VariableDeclaration","scope":12554,"src":"12884:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12884:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12551,"nodeType":"ArrayTypeName","src":"12884:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12883:24:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12568,"nodeType":"FunctionDefinition","src":"13135:162:16","nodes":[],"documentation":{"id":12555,"nodeType":"StructuredDocumentation","src":"12914:216:16","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13144:5:16","parameters":{"id":12563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12557,"mutability":"mutable","name":"name","nameLocation":"13166:4:16","nodeType":"VariableDeclaration","scope":12568,"src":"13150:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12556,"name":"string","nodeType":"ElementaryTypeName","src":"13150:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12559,"mutability":"mutable","name":"delim","nameLocation":"13188:5:16","nodeType":"VariableDeclaration","scope":12568,"src":"13172:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12558,"name":"string","nodeType":"ElementaryTypeName","src":"13172:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12562,"mutability":"mutable","name":"defaultValue","nameLocation":"13213:12:16","nodeType":"VariableDeclaration","scope":12568,"src":"13195:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12560,"name":"string","nodeType":"ElementaryTypeName","src":"13195:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12561,"nodeType":"ArrayTypeName","src":"13195:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13149:77:16"},"returnParameters":{"id":12567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12566,"mutability":"mutable","name":"value","nameLocation":"13290:5:16","nodeType":"VariableDeclaration","scope":12568,"src":"13274:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12564,"name":"string","nodeType":"ElementaryTypeName","src":"13274:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12565,"nodeType":"ArrayTypeName","src":"13274:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13273:23:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12582,"nodeType":"FunctionDefinition","src":"13523:160:16","nodes":[],"documentation":{"id":12569,"nodeType":"StructuredDocumentation","src":"13303:215:16","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13532:5:16","parameters":{"id":12577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12571,"mutability":"mutable","name":"name","nameLocation":"13554:4:16","nodeType":"VariableDeclaration","scope":12582,"src":"13538:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12570,"name":"string","nodeType":"ElementaryTypeName","src":"13538:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12573,"mutability":"mutable","name":"delim","nameLocation":"13576:5:16","nodeType":"VariableDeclaration","scope":12582,"src":"13560:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12572,"name":"string","nodeType":"ElementaryTypeName","src":"13560:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12576,"mutability":"mutable","name":"defaultValue","nameLocation":"13600:12:16","nodeType":"VariableDeclaration","scope":12582,"src":"13583:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12574,"name":"bytes","nodeType":"ElementaryTypeName","src":"13583:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12575,"nodeType":"ArrayTypeName","src":"13583:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13537:76:16"},"returnParameters":{"id":12581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12580,"mutability":"mutable","name":"value","nameLocation":"13676:5:16","nodeType":"VariableDeclaration","scope":12582,"src":"13661:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12578,"name":"bytes","nodeType":"ElementaryTypeName","src":"13661:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12579,"nodeType":"ArrayTypeName","src":"13661:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13660:22:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12592,"nodeType":"FunctionDefinition","src":"13876:95:16","nodes":[],"documentation":{"id":12583,"nodeType":"StructuredDocumentation","src":"13689:182:16","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13885:5:16","parameters":{"id":12588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12585,"mutability":"mutable","name":"name","nameLocation":"13907:4:16","nodeType":"VariableDeclaration","scope":12592,"src":"13891:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12584,"name":"string","nodeType":"ElementaryTypeName","src":"13891:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12587,"mutability":"mutable","name":"defaultValue","nameLocation":"13920:12:16","nodeType":"VariableDeclaration","scope":12592,"src":"13913:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12586,"name":"int256","nodeType":"ElementaryTypeName","src":"13913:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13890:43:16"},"returnParameters":{"id":12591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12590,"mutability":"mutable","name":"value","nameLocation":"13964:5:16","nodeType":"VariableDeclaration","scope":12592,"src":"13957:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12589,"name":"int256","nodeType":"ElementaryTypeName","src":"13957:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13956:14:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12602,"nodeType":"FunctionDefinition","src":"14165:97:16","nodes":[],"documentation":{"id":12593,"nodeType":"StructuredDocumentation","src":"13977:183:16","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14174:5:16","parameters":{"id":12598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12595,"mutability":"mutable","name":"name","nameLocation":"14196:4:16","nodeType":"VariableDeclaration","scope":12602,"src":"14180:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12594,"name":"string","nodeType":"ElementaryTypeName","src":"14180:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12597,"mutability":"mutable","name":"defaultValue","nameLocation":"14210:12:16","nodeType":"VariableDeclaration","scope":12602,"src":"14202:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12596,"name":"address","nodeType":"ElementaryTypeName","src":"14202:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14179:44:16"},"returnParameters":{"id":12601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12600,"mutability":"mutable","name":"value","nameLocation":"14255:5:16","nodeType":"VariableDeclaration","scope":12602,"src":"14247:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12599,"name":"address","nodeType":"ElementaryTypeName","src":"14247:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14246:15:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12612,"nodeType":"FunctionDefinition","src":"14456:97:16","nodes":[],"documentation":{"id":12603,"nodeType":"StructuredDocumentation","src":"14268:183:16","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14465:5:16","parameters":{"id":12608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12605,"mutability":"mutable","name":"name","nameLocation":"14487:4:16","nodeType":"VariableDeclaration","scope":12612,"src":"14471:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12604,"name":"string","nodeType":"ElementaryTypeName","src":"14471:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12607,"mutability":"mutable","name":"defaultValue","nameLocation":"14501:12:16","nodeType":"VariableDeclaration","scope":12612,"src":"14493:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14493:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14470:44:16"},"returnParameters":{"id":12611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12610,"mutability":"mutable","name":"value","nameLocation":"14546:5:16","nodeType":"VariableDeclaration","scope":12612,"src":"14538:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14538:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14537:15:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12622,"nodeType":"FunctionDefinition","src":"14746:111:16","nodes":[],"documentation":{"id":12613,"nodeType":"StructuredDocumentation","src":"14559:182:16","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14755:5:16","parameters":{"id":12618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12615,"mutability":"mutable","name":"name","nameLocation":"14777:4:16","nodeType":"VariableDeclaration","scope":12622,"src":"14761:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12614,"name":"string","nodeType":"ElementaryTypeName","src":"14761:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12617,"mutability":"mutable","name":"defaultValue","nameLocation":"14799:12:16","nodeType":"VariableDeclaration","scope":12622,"src":"14783:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12616,"name":"string","nodeType":"ElementaryTypeName","src":"14783:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14760:52:16"},"returnParameters":{"id":12621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12620,"mutability":"mutable","name":"value","nameLocation":"14850:5:16","nodeType":"VariableDeclaration","scope":12622,"src":"14836:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12619,"name":"string","nodeType":"ElementaryTypeName","src":"14836:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14835:21:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12632,"nodeType":"FunctionDefinition","src":"15049:109:16","nodes":[],"documentation":{"id":12623,"nodeType":"StructuredDocumentation","src":"14863:181:16","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15058:5:16","parameters":{"id":12628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12625,"mutability":"mutable","name":"name","nameLocation":"15080:4:16","nodeType":"VariableDeclaration","scope":12632,"src":"15064:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12624,"name":"string","nodeType":"ElementaryTypeName","src":"15064:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12627,"mutability":"mutable","name":"defaultValue","nameLocation":"15101:12:16","nodeType":"VariableDeclaration","scope":12632,"src":"15086:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12626,"name":"bytes","nodeType":"ElementaryTypeName","src":"15086:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15063:51:16"},"returnParameters":{"id":12631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12630,"mutability":"mutable","name":"value","nameLocation":"15151:5:16","nodeType":"VariableDeclaration","scope":12632,"src":"15138:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12629,"name":"bytes","nodeType":"ElementaryTypeName","src":"15138:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15137:20:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12646,"nodeType":"FunctionDefinition","src":"15383:158:16","nodes":[],"documentation":{"id":12633,"nodeType":"StructuredDocumentation","src":"15164:214:16","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15392:5:16","parameters":{"id":12641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12635,"mutability":"mutable","name":"name","nameLocation":"15414:4:16","nodeType":"VariableDeclaration","scope":12646,"src":"15398:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12634,"name":"string","nodeType":"ElementaryTypeName","src":"15398:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12637,"mutability":"mutable","name":"delim","nameLocation":"15436:5:16","nodeType":"VariableDeclaration","scope":12646,"src":"15420:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12636,"name":"string","nodeType":"ElementaryTypeName","src":"15420:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12640,"mutability":"mutable","name":"defaultValue","nameLocation":"15459:12:16","nodeType":"VariableDeclaration","scope":12646,"src":"15443:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12638,"name":"bool","nodeType":"ElementaryTypeName","src":"15443:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12639,"nodeType":"ArrayTypeName","src":"15443:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15397:75:16"},"returnParameters":{"id":12645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12644,"mutability":"mutable","name":"value","nameLocation":"15534:5:16","nodeType":"VariableDeclaration","scope":12646,"src":"15520:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12642,"name":"bool","nodeType":"ElementaryTypeName","src":"15520:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12643,"nodeType":"ArrayTypeName","src":"15520:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15519:21:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12660,"nodeType":"FunctionDefinition","src":"15769:164:16","nodes":[],"documentation":{"id":12647,"nodeType":"StructuredDocumentation","src":"15547:217:16","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15778:5:16","parameters":{"id":12655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12649,"mutability":"mutable","name":"name","nameLocation":"15800:4:16","nodeType":"VariableDeclaration","scope":12660,"src":"15784:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12648,"name":"string","nodeType":"ElementaryTypeName","src":"15784:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12651,"mutability":"mutable","name":"delim","nameLocation":"15822:5:16","nodeType":"VariableDeclaration","scope":12660,"src":"15806:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12650,"name":"string","nodeType":"ElementaryTypeName","src":"15806:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12654,"mutability":"mutable","name":"defaultValue","nameLocation":"15848:12:16","nodeType":"VariableDeclaration","scope":12660,"src":"15829:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12652,"name":"uint256","nodeType":"ElementaryTypeName","src":"15829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12653,"nodeType":"ArrayTypeName","src":"15829:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15783:78:16"},"returnParameters":{"id":12659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12658,"mutability":"mutable","name":"value","nameLocation":"15926:5:16","nodeType":"VariableDeclaration","scope":12660,"src":"15909:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12656,"name":"uint256","nodeType":"ElementaryTypeName","src":"15909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12657,"nodeType":"ArrayTypeName","src":"15909:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15908:24:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12674,"nodeType":"FunctionDefinition","src":"16160:162:16","nodes":[],"documentation":{"id":12661,"nodeType":"StructuredDocumentation","src":"15939:216:16","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16169:5:16","parameters":{"id":12669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12663,"mutability":"mutable","name":"name","nameLocation":"16191:4:16","nodeType":"VariableDeclaration","scope":12674,"src":"16175:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12662,"name":"string","nodeType":"ElementaryTypeName","src":"16175:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12665,"mutability":"mutable","name":"delim","nameLocation":"16213:5:16","nodeType":"VariableDeclaration","scope":12674,"src":"16197:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12664,"name":"string","nodeType":"ElementaryTypeName","src":"16197:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12668,"mutability":"mutable","name":"defaultValue","nameLocation":"16238:12:16","nodeType":"VariableDeclaration","scope":12674,"src":"16220:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12666,"name":"int256","nodeType":"ElementaryTypeName","src":"16220:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12667,"nodeType":"ArrayTypeName","src":"16220:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16174:77:16"},"returnParameters":{"id":12673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12672,"mutability":"mutable","name":"value","nameLocation":"16315:5:16","nodeType":"VariableDeclaration","scope":12674,"src":"16299:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12670,"name":"int256","nodeType":"ElementaryTypeName","src":"16299:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12671,"nodeType":"ArrayTypeName","src":"16299:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16298:23:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12682,"nodeType":"FunctionDefinition","src":"16470:85:16","nodes":[],"documentation":{"id":12675,"nodeType":"StructuredDocumentation","src":"16328:137:16","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16479:9:16","parameters":{"id":12678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12677,"mutability":"mutable","name":"name","nameLocation":"16505:4:16","nodeType":"VariableDeclaration","scope":12682,"src":"16489:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12676,"name":"string","nodeType":"ElementaryTypeName","src":"16489:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16488:22:16"},"returnParameters":{"id":12681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12680,"mutability":"mutable","name":"value","nameLocation":"16548:5:16","nodeType":"VariableDeclaration","scope":12682,"src":"16534:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12679,"name":"string","nodeType":"ElementaryTypeName","src":"16534:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16533:21:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12693,"nodeType":"FunctionDefinition","src":"16737:110:16","nodes":[],"documentation":{"id":12683,"nodeType":"StructuredDocumentation","src":"16561:171:16","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16746:9:16","parameters":{"id":12688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12685,"mutability":"mutable","name":"name","nameLocation":"16772:4:16","nodeType":"VariableDeclaration","scope":12693,"src":"16756:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12684,"name":"string","nodeType":"ElementaryTypeName","src":"16756:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12687,"mutability":"mutable","name":"delim","nameLocation":"16794:5:16","nodeType":"VariableDeclaration","scope":12693,"src":"16778:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12686,"name":"string","nodeType":"ElementaryTypeName","src":"16778:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16755:45:16"},"returnParameters":{"id":12692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12691,"mutability":"mutable","name":"value","nameLocation":"16840:5:16","nodeType":"VariableDeclaration","scope":12693,"src":"16824:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12689,"name":"string","nodeType":"ElementaryTypeName","src":"16824:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12690,"nodeType":"ArrayTypeName","src":"16824:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16823:23:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12701,"nodeType":"FunctionDefinition","src":"16996:77:16","nodes":[],"documentation":{"id":12694,"nodeType":"StructuredDocumentation","src":"16853:138:16","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17005:7:16","parameters":{"id":12697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12696,"mutability":"mutable","name":"name","nameLocation":"17029:4:16","nodeType":"VariableDeclaration","scope":12701,"src":"17013:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12695,"name":"string","nodeType":"ElementaryTypeName","src":"17013:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17012:22:16"},"returnParameters":{"id":12700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12699,"mutability":"mutable","name":"value","nameLocation":"17066:5:16","nodeType":"VariableDeclaration","scope":12701,"src":"17058:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12698,"name":"uint256","nodeType":"ElementaryTypeName","src":"17058:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17057:15:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12712,"nodeType":"FunctionDefinition","src":"17256:109:16","nodes":[],"documentation":{"id":12702,"nodeType":"StructuredDocumentation","src":"17079:172:16","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17265:7:16","parameters":{"id":12707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12704,"mutability":"mutable","name":"name","nameLocation":"17289:4:16","nodeType":"VariableDeclaration","scope":12712,"src":"17273:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12703,"name":"string","nodeType":"ElementaryTypeName","src":"17273:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12706,"mutability":"mutable","name":"delim","nameLocation":"17311:5:16","nodeType":"VariableDeclaration","scope":12712,"src":"17295:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12705,"name":"string","nodeType":"ElementaryTypeName","src":"17295:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17272:45:16"},"returnParameters":{"id":12711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12710,"mutability":"mutable","name":"value","nameLocation":"17358:5:16","nodeType":"VariableDeclaration","scope":12712,"src":"17341:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12708,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12709,"nodeType":"ArrayTypeName","src":"17341:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17340:24:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12721,"nodeType":"FunctionDefinition","src":"17442:77:16","nodes":[],"documentation":{"id":12713,"nodeType":"StructuredDocumentation","src":"17371:66:16","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17451:9:16","parameters":{"id":12717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12716,"mutability":"mutable","name":"context","nameLocation":"17474:7:16","nodeType":"VariableDeclaration","scope":12721,"src":"17461:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12268","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":12715,"nodeType":"UserDefinedTypeName","pathNode":{"id":12714,"name":"ForgeContext","nameLocations":["17461:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":12268,"src":"17461:12:16"},"referencedDeclaration":12268,"src":"17461:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12268","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17460:22:16"},"returnParameters":{"id":12720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12719,"mutability":"mutable","name":"result","nameLocation":"17511:6:16","nodeType":"VariableDeclaration","scope":12721,"src":"17506:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12718,"name":"bool","nodeType":"ElementaryTypeName","src":"17506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17505:13:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12729,"nodeType":"FunctionDefinition","src":"17561:70:16","nodes":[],"documentation":{"id":12722,"nodeType":"StructuredDocumentation","src":"17525:31:16","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17570:6:16","parameters":{"id":12727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12724,"mutability":"mutable","name":"name","nameLocation":"17593:4:16","nodeType":"VariableDeclaration","scope":12729,"src":"17577:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12723,"name":"string","nodeType":"ElementaryTypeName","src":"17577:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12726,"mutability":"mutable","name":"value","nameLocation":"17615:5:16","nodeType":"VariableDeclaration","scope":12729,"src":"17599:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12725,"name":"string","nodeType":"ElementaryTypeName","src":"17599:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17576:45:16"},"returnParameters":{"id":12728,"nodeType":"ParameterList","parameters":[],"src":"17630:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12741,"nodeType":"FunctionDefinition","src":"17763:109:16","nodes":[],"documentation":{"id":12730,"nodeType":"StructuredDocumentation","src":"17667:91:16","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17772:8:16","parameters":{"id":12733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12732,"mutability":"mutable","name":"target","nameLocation":"17789:6:16","nodeType":"VariableDeclaration","scope":12741,"src":"17781:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12731,"name":"address","nodeType":"ElementaryTypeName","src":"17781:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17780:16:16"},"returnParameters":{"id":12740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12736,"mutability":"mutable","name":"readSlots","nameLocation":"17832:9:16","nodeType":"VariableDeclaration","scope":12741,"src":"17815:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17815:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12735,"nodeType":"ArrayTypeName","src":"17815:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12739,"mutability":"mutable","name":"writeSlots","nameLocation":"17860:10:16","nodeType":"VariableDeclaration","scope":12741,"src":"17843:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17843:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12738,"nodeType":"ArrayTypeName","src":"17843:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17814:57:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12749,"nodeType":"FunctionDefinition","src":"17928:74:16","nodes":[],"documentation":{"id":12742,"nodeType":"StructuredDocumentation","src":"17878:45:16","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17937:4:16","parameters":{"id":12745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12744,"mutability":"mutable","name":"privateKey","nameLocation":"17950:10:16","nodeType":"VariableDeclaration","scope":12749,"src":"17942:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12743,"name":"uint256","nodeType":"ElementaryTypeName","src":"17942:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17941:20:16"},"returnParameters":{"id":12748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12747,"mutability":"mutable","name":"keyAddr","nameLocation":"17993:7:16","nodeType":"VariableDeclaration","scope":12749,"src":"17985:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12746,"name":"address","nodeType":"ElementaryTypeName","src":"17985:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17984:17:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12766,"nodeType":"FunctionDefinition","src":"18065:160:16","nodes":[],"documentation":{"id":12750,"nodeType":"StructuredDocumentation","src":"18008:52:16","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"18074:11:16","parameters":{"id":12760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12752,"mutability":"mutable","name":"fromBlock","nameLocation":"18094:9:16","nodeType":"VariableDeclaration","scope":12766,"src":"18086:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12751,"name":"uint256","nodeType":"ElementaryTypeName","src":"18086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12754,"mutability":"mutable","name":"toBlock","nameLocation":"18113:7:16","nodeType":"VariableDeclaration","scope":12766,"src":"18105:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12753,"name":"uint256","nodeType":"ElementaryTypeName","src":"18105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12756,"mutability":"mutable","name":"target","nameLocation":"18130:6:16","nodeType":"VariableDeclaration","scope":12766,"src":"18122:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12755,"name":"address","nodeType":"ElementaryTypeName","src":"18122:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12759,"mutability":"mutable","name":"topics","nameLocation":"18157:6:16","nodeType":"VariableDeclaration","scope":12766,"src":"18138:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18138:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12758,"nodeType":"ArrayTypeName","src":"18138:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18085:79:16"},"returnParameters":{"id":12765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12764,"mutability":"mutable","name":"logs","nameLocation":"18219:4:16","nodeType":"VariableDeclaration","scope":12766,"src":"18199:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12301_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":12762,"nodeType":"UserDefinedTypeName","pathNode":{"id":12761,"name":"EthGetLogs","nameLocations":["18199:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":12301,"src":"18199:10:16"},"referencedDeclaration":12301,"src":"18199:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12301_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":12763,"nodeType":"ArrayTypeName","src":"18199:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12301_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18198:26:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12772,"nodeType":"FunctionDefinition","src":"18562:70:16","nodes":[],"documentation":{"id":12767,"nodeType":"StructuredDocumentation","src":"18231:326:16","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18571:14:16","parameters":{"id":12768,"nodeType":"ParameterList","parameters":[],"src":"18585:2:16"},"returnParameters":{"id":12771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12770,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18619:11:16","nodeType":"VariableDeclaration","scope":12772,"src":"18611:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12769,"name":"uint256","nodeType":"ElementaryTypeName","src":"18611:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18610:21:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12778,"nodeType":"FunctionDefinition","src":"18947:65:16","nodes":[],"documentation":{"id":12773,"nodeType":"StructuredDocumentation","src":"18638:304:16","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18956:14:16","parameters":{"id":12774,"nodeType":"ParameterList","parameters":[],"src":"18970:2:16"},"returnParameters":{"id":12777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12776,"mutability":"mutable","name":"height","nameLocation":"19004:6:16","nodeType":"VariableDeclaration","scope":12778,"src":"18996:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12775,"name":"uint256","nodeType":"ElementaryTypeName","src":"18996:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18995:16:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12784,"nodeType":"FunctionDefinition","src":"19336:71:16","nodes":[],"documentation":{"id":12779,"nodeType":"StructuredDocumentation","src":"19018:313:16","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19345:17:16","parameters":{"id":12780,"nodeType":"ParameterList","parameters":[],"src":"19362:2:16"},"returnParameters":{"id":12783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12782,"mutability":"mutable","name":"timestamp","nameLocation":"19396:9:16","nodeType":"VariableDeclaration","scope":12784,"src":"19388:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12781,"name":"uint256","nodeType":"ElementaryTypeName","src":"19388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19387:19:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12798,"nodeType":"FunctionDefinition","src":"19500:146:16","nodes":[],"documentation":{"id":12785,"nodeType":"StructuredDocumentation","src":"19413:82:16","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19509:24:16","parameters":{"id":12790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12787,"mutability":"mutable","name":"target","nameLocation":"19542:6:16","nodeType":"VariableDeclaration","scope":12798,"src":"19534:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12786,"name":"address","nodeType":"ElementaryTypeName","src":"19534:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12789,"mutability":"mutable","name":"elementSlot","nameLocation":"19558:11:16","nodeType":"VariableDeclaration","scope":12798,"src":"19550:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19550:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19533:37:16"},"returnParameters":{"id":12797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12792,"mutability":"mutable","name":"found","nameLocation":"19610:5:16","nodeType":"VariableDeclaration","scope":12798,"src":"19605:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12791,"name":"bool","nodeType":"ElementaryTypeName","src":"19605:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12794,"mutability":"mutable","name":"key","nameLocation":"19625:3:16","nodeType":"VariableDeclaration","scope":12798,"src":"19617:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19617:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12796,"mutability":"mutable","name":"parent","nameLocation":"19638:6:16","nodeType":"VariableDeclaration","scope":12798,"src":"19630:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19630:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19604:41:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12808,"nodeType":"FunctionDefinition","src":"19743:97:16","nodes":[],"documentation":{"id":12799,"nodeType":"StructuredDocumentation","src":"19652:86:16","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19752:16:16","parameters":{"id":12804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12801,"mutability":"mutable","name":"target","nameLocation":"19777:6:16","nodeType":"VariableDeclaration","scope":12808,"src":"19769:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12800,"name":"address","nodeType":"ElementaryTypeName","src":"19769:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12803,"mutability":"mutable","name":"mappingSlot","nameLocation":"19793:11:16","nodeType":"VariableDeclaration","scope":12808,"src":"19785:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19785:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19768:37:16"},"returnParameters":{"id":12807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12806,"mutability":"mutable","name":"length","nameLocation":"19832:6:16","nodeType":"VariableDeclaration","scope":12808,"src":"19824:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12805,"name":"uint256","nodeType":"ElementaryTypeName","src":"19824:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19823:16:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12820,"nodeType":"FunctionDefinition","src":"20044:109:16","nodes":[],"documentation":{"id":12809,"nodeType":"StructuredDocumentation","src":"19846:193:16","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"20053:16:16","parameters":{"id":12816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12811,"mutability":"mutable","name":"target","nameLocation":"20078:6:16","nodeType":"VariableDeclaration","scope":12820,"src":"20070:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12810,"name":"address","nodeType":"ElementaryTypeName","src":"20070:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12813,"mutability":"mutable","name":"mappingSlot","nameLocation":"20094:11:16","nodeType":"VariableDeclaration","scope":12820,"src":"20086:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20086:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12815,"mutability":"mutable","name":"idx","nameLocation":"20115:3:16","nodeType":"VariableDeclaration","scope":12820,"src":"20107:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12814,"name":"uint256","nodeType":"ElementaryTypeName","src":"20107:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20069:50:16"},"returnParameters":{"id":12819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12818,"mutability":"mutable","name":"value","nameLocation":"20146:5:16","nodeType":"VariableDeclaration","scope":12820,"src":"20138:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20138:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20137:15:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12828,"nodeType":"FunctionDefinition","src":"20197:72:16","nodes":[],"documentation":{"id":12821,"nodeType":"StructuredDocumentation","src":"20159:33:16","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20206:8:16","parameters":{"id":12824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12823,"mutability":"mutable","name":"account","nameLocation":"20223:7:16","nodeType":"VariableDeclaration","scope":12828,"src":"20215:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12822,"name":"address","nodeType":"ElementaryTypeName","src":"20215:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20214:17:16"},"returnParameters":{"id":12827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12826,"mutability":"mutable","name":"nonce","nameLocation":"20262:5:16","nodeType":"VariableDeclaration","scope":12828,"src":"20255:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12825,"name":"uint64","nodeType":"ElementaryTypeName","src":"20255:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20254:14:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12836,"nodeType":"FunctionDefinition","src":"20311:64:16","nodes":[],"documentation":{"id":12829,"nodeType":"StructuredDocumentation","src":"20275:31:16","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20320:15:16","parameters":{"id":12830,"nodeType":"ParameterList","parameters":[],"src":"20335:2:16"},"returnParameters":{"id":12835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12834,"mutability":"mutable","name":"logs","nameLocation":"20369:4:16","nodeType":"VariableDeclaration","scope":12836,"src":"20356:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12276_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":12832,"nodeType":"UserDefinedTypeName","pathNode":{"id":12831,"name":"Log","nameLocations":["20356:3:16"],"nodeType":"IdentifierPath","referencedDeclaration":12276,"src":"20356:3:16"},"referencedDeclaration":12276,"src":"20356:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12276_storage_ptr","typeString":"struct VmSafe.Log"}},"id":12833,"nodeType":"ArrayTypeName","src":"20356:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12276_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20355:19:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12843,"nodeType":"FunctionDefinition","src":"20425:62:16","nodes":[],"documentation":{"id":12837,"nodeType":"StructuredDocumentation","src":"20381:39:16","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20434:11:16","parameters":{"id":12838,"nodeType":"ParameterList","parameters":[],"src":"20445:2:16"},"returnParameters":{"id":12842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12841,"mutability":"mutable","name":"gas","nameLocation":"20482:3:16","nodeType":"VariableDeclaration","scope":12843,"src":"20471:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12403_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":12840,"nodeType":"UserDefinedTypeName","pathNode":{"id":12839,"name":"Gas","nameLocations":["20471:3:16"],"nodeType":"IdentifierPath","referencedDeclaration":12403,"src":"20471:3:16"},"referencedDeclaration":12403,"src":"20471:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12403_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20470:16:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12853,"nodeType":"FunctionDefinition","src":"20539:81:16","nodes":[],"documentation":{"id":12844,"nodeType":"StructuredDocumentation","src":"20493:41:16","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20548:4:16","parameters":{"id":12849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12846,"mutability":"mutable","name":"target","nameLocation":"20561:6:16","nodeType":"VariableDeclaration","scope":12853,"src":"20553:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12845,"name":"address","nodeType":"ElementaryTypeName","src":"20553:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12848,"mutability":"mutable","name":"slot","nameLocation":"20577:4:16","nodeType":"VariableDeclaration","scope":12853,"src":"20569:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20569:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20552:30:16"},"returnParameters":{"id":12852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12851,"mutability":"mutable","name":"data","nameLocation":"20614:4:16","nodeType":"VariableDeclaration","scope":12853,"src":"20606:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20606:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20605:14:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12857,"nodeType":"FunctionDefinition","src":"20711:37:16","nodes":[],"documentation":{"id":12854,"nodeType":"StructuredDocumentation","src":"20626:80:16","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20720:16:16","parameters":{"id":12855,"nodeType":"ParameterList","parameters":[],"src":"20736:2:16"},"returnParameters":{"id":12856,"nodeType":"ParameterList","parameters":[],"src":"20747:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12861,"nodeType":"FunctionDefinition","src":"20800:27:16","nodes":[],"documentation":{"id":12858,"nodeType":"StructuredDocumentation","src":"20754:41:16","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20809:6:16","parameters":{"id":12859,"nodeType":"ParameterList","parameters":[],"src":"20815:2:16"},"returnParameters":{"id":12860,"nodeType":"ParameterList","parameters":[],"src":"20826:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12865,"nodeType":"FunctionDefinition","src":"20874:31:16","nodes":[],"documentation":{"id":12862,"nodeType":"StructuredDocumentation","src":"20833:36:16","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20883:10:16","parameters":{"id":12863,"nodeType":"ParameterList","parameters":[],"src":"20893:2:16"},"returnParameters":{"id":12864,"nodeType":"ParameterList","parameters":[],"src":"20904:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12869,"nodeType":"FunctionDefinition","src":"20995:38:16","nodes":[],"documentation":{"id":12866,"nodeType":"StructuredDocumentation","src":"20911:79:16","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"21004:17:16","parameters":{"id":12867,"nodeType":"ParameterList","parameters":[],"src":"21021:2:16"},"returnParameters":{"id":12868,"nodeType":"ParameterList","parameters":[],"src":"21032:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12879,"nodeType":"FunctionDefinition","src":"21110:98:16","nodes":[],"documentation":{"id":12870,"nodeType":"StructuredDocumentation","src":"21039:66:16","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21119:3:16","parameters":{"id":12875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12872,"mutability":"mutable","name":"method","nameLocation":"21139:6:16","nodeType":"VariableDeclaration","scope":12879,"src":"21123:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12871,"name":"string","nodeType":"ElementaryTypeName","src":"21123:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12874,"mutability":"mutable","name":"params","nameLocation":"21163:6:16","nodeType":"VariableDeclaration","scope":12879,"src":"21147:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12873,"name":"string","nodeType":"ElementaryTypeName","src":"21147:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21122:48:16"},"returnParameters":{"id":12878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12877,"mutability":"mutable","name":"data","nameLocation":"21202:4:16","nodeType":"VariableDeclaration","scope":12879,"src":"21189:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12876,"name":"bytes","nodeType":"ElementaryTypeName","src":"21189:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21188:19:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12891,"nodeType":"FunctionDefinition","src":"21283:142:16","nodes":[],"documentation":{"id":12880,"nodeType":"StructuredDocumentation","src":"21214:64:16","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21292:3:16","parameters":{"id":12887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12882,"mutability":"mutable","name":"urlOrAlias","nameLocation":"21312:10:16","nodeType":"VariableDeclaration","scope":12891,"src":"21296:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12881,"name":"string","nodeType":"ElementaryTypeName","src":"21296:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12884,"mutability":"mutable","name":"method","nameLocation":"21340:6:16","nodeType":"VariableDeclaration","scope":12891,"src":"21324:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12883,"name":"string","nodeType":"ElementaryTypeName","src":"21324:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12886,"mutability":"mutable","name":"params","nameLocation":"21364:6:16","nodeType":"VariableDeclaration","scope":12891,"src":"21348:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12885,"name":"string","nodeType":"ElementaryTypeName","src":"21348:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21295:76:16"},"returnParameters":{"id":12890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12889,"mutability":"mutable","name":"data","nameLocation":"21419:4:16","nodeType":"VariableDeclaration","scope":12891,"src":"21406:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12888,"name":"bytes","nodeType":"ElementaryTypeName","src":"21406:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21405:19:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12903,"nodeType":"FunctionDefinition","src":"21499:99:16","nodes":[],"documentation":{"id":12892,"nodeType":"StructuredDocumentation","src":"21431:63:16","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21508:8:16","parameters":{"id":12897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12894,"mutability":"mutable","name":"privateKey","nameLocation":"21525:10:16","nodeType":"VariableDeclaration","scope":12903,"src":"21517:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12893,"name":"uint256","nodeType":"ElementaryTypeName","src":"21517:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12896,"mutability":"mutable","name":"digest","nameLocation":"21545:6:16","nodeType":"VariableDeclaration","scope":12903,"src":"21537:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21537:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21516:36:16"},"returnParameters":{"id":12902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12899,"mutability":"mutable","name":"r","nameLocation":"21584:1:16","nodeType":"VariableDeclaration","scope":12903,"src":"21576:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21576:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12901,"mutability":"mutable","name":"s","nameLocation":"21595:1:16","nodeType":"VariableDeclaration","scope":12903,"src":"21587:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21587:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21575:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12917,"nodeType":"FunctionDefinition","src":"21672:104:16","nodes":[],"documentation":{"id":12904,"nodeType":"StructuredDocumentation","src":"21604:63:16","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21681:4:16","parameters":{"id":12909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12906,"mutability":"mutable","name":"privateKey","nameLocation":"21694:10:16","nodeType":"VariableDeclaration","scope":12917,"src":"21686:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12905,"name":"uint256","nodeType":"ElementaryTypeName","src":"21686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12908,"mutability":"mutable","name":"digest","nameLocation":"21714:6:16","nodeType":"VariableDeclaration","scope":12917,"src":"21706:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21706:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21685:36:16"},"returnParameters":{"id":12916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12911,"mutability":"mutable","name":"v","nameLocation":"21751:1:16","nodeType":"VariableDeclaration","scope":12917,"src":"21745:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12910,"name":"uint8","nodeType":"ElementaryTypeName","src":"21745:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12913,"mutability":"mutable","name":"r","nameLocation":"21762:1:16","nodeType":"VariableDeclaration","scope":12917,"src":"21754:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21754:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12915,"mutability":"mutable","name":"s","nameLocation":"21773:1:16","nodeType":"VariableDeclaration","scope":12917,"src":"21765:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21765:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21744:31:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12929,"nodeType":"FunctionDefinition","src":"22215:84:16","nodes":[],"documentation":{"id":12918,"nodeType":"StructuredDocumentation","src":"21782:428:16","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22224:4:16","parameters":{"id":12921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12920,"mutability":"mutable","name":"digest","nameLocation":"22237:6:16","nodeType":"VariableDeclaration","scope":12929,"src":"22229:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22229:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22228:16:16"},"returnParameters":{"id":12928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12923,"mutability":"mutable","name":"v","nameLocation":"22274:1:16","nodeType":"VariableDeclaration","scope":12929,"src":"22268:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12922,"name":"uint8","nodeType":"ElementaryTypeName","src":"22268:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12925,"mutability":"mutable","name":"r","nameLocation":"22285:1:16","nodeType":"VariableDeclaration","scope":12929,"src":"22277:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22277:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12927,"mutability":"mutable","name":"s","nameLocation":"22296:1:16","nodeType":"VariableDeclaration","scope":12929,"src":"22288:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22288:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22267:31:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12943,"nodeType":"FunctionDefinition","src":"22476:100:16","nodes":[],"documentation":{"id":12930,"nodeType":"StructuredDocumentation","src":"22305:166:16","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22485:4:16","parameters":{"id":12935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12932,"mutability":"mutable","name":"signer","nameLocation":"22498:6:16","nodeType":"VariableDeclaration","scope":12943,"src":"22490:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12931,"name":"address","nodeType":"ElementaryTypeName","src":"22490:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12934,"mutability":"mutable","name":"digest","nameLocation":"22514:6:16","nodeType":"VariableDeclaration","scope":12943,"src":"22506:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22506:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22489:32:16"},"returnParameters":{"id":12942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12937,"mutability":"mutable","name":"v","nameLocation":"22551:1:16","nodeType":"VariableDeclaration","scope":12943,"src":"22545:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12936,"name":"uint8","nodeType":"ElementaryTypeName","src":"22545:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12939,"mutability":"mutable","name":"r","nameLocation":"22562:1:16","nodeType":"VariableDeclaration","scope":12943,"src":"22554:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22554:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12941,"mutability":"mutable","name":"s","nameLocation":"22573:1:16","nodeType":"VariableDeclaration","scope":12943,"src":"22565:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22565:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22544:31:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12947,"nodeType":"FunctionDefinition","src":"22644:42:16","nodes":[],"documentation":{"id":12944,"nodeType":"StructuredDocumentation","src":"22582:57:16","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22653:21:16","parameters":{"id":12945,"nodeType":"ParameterList","parameters":[],"src":"22674:2:16"},"returnParameters":{"id":12946,"nodeType":"ParameterList","parameters":[],"src":"22685:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12951,"nodeType":"FunctionDefinition","src":"22830:44:16","nodes":[],"documentation":{"id":12948,"nodeType":"StructuredDocumentation","src":"22692:133:16","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22839:23:16","parameters":{"id":12949,"nodeType":"ParameterList","parameters":[],"src":"22862:2:16"},"returnParameters":{"id":12950,"nodeType":"ParameterList","parameters":[],"src":"22873:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12959,"nodeType":"FunctionDefinition","src":"22982:92:16","nodes":[],"documentation":{"id":12952,"nodeType":"StructuredDocumentation","src":"22880:97:16","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22991:22:16","parameters":{"id":12953,"nodeType":"ParameterList","parameters":[],"src":"23013:2:16"},"returnParameters":{"id":12958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12957,"mutability":"mutable","name":"accountAccesses","nameLocation":"23057:15:16","nodeType":"VariableDeclaration","scope":12959,"src":"23034:38:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12379_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":12955,"nodeType":"UserDefinedTypeName","pathNode":{"id":12954,"name":"AccountAccess","nameLocations":["23034:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":12379,"src":"23034:13:16"},"referencedDeclaration":12379,"src":"23034:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12379_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":12956,"nodeType":"ArrayTypeName","src":"23034:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12379_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"23033:40:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12963,"nodeType":"FunctionDefinition","src":"23170:41:16","nodes":[],"documentation":{"id":12960,"nodeType":"StructuredDocumentation","src":"23080:85:16","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"23179:20:16","parameters":{"id":12961,"nodeType":"ParameterList","parameters":[],"src":"23199:2:16"},"returnParameters":{"id":12962,"nodeType":"ParameterList","parameters":[],"src":"23210:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12969,"nodeType":"FunctionDefinition","src":"23410:50:16","nodes":[],"documentation":{"id":12964,"nodeType":"StructuredDocumentation","src":"23254:151:16","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23419:9:16","parameters":{"id":12967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12966,"mutability":"mutable","name":"path","nameLocation":"23445:4:16","nodeType":"VariableDeclaration","scope":12969,"src":"23429:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12965,"name":"string","nodeType":"ElementaryTypeName","src":"23429:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23428:22:16"},"returnParameters":{"id":12968,"nodeType":"ParameterList","parameters":[],"src":"23459:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12979,"nodeType":"FunctionDefinition","src":"23775:93:16","nodes":[],"documentation":{"id":12970,"nodeType":"StructuredDocumentation","src":"23466:304:16","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23784:8:16","parameters":{"id":12975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12972,"mutability":"mutable","name":"from","nameLocation":"23809:4:16","nodeType":"VariableDeclaration","scope":12979,"src":"23793:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12971,"name":"string","nodeType":"ElementaryTypeName","src":"23793:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12974,"mutability":"mutable","name":"to","nameLocation":"23831:2:16","nodeType":"VariableDeclaration","scope":12979,"src":"23815:18:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12973,"name":"string","nodeType":"ElementaryTypeName","src":"23815:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23792:42:16"},"returnParameters":{"id":12978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12977,"mutability":"mutable","name":"copied","nameLocation":"23860:6:16","nodeType":"VariableDeclaration","scope":12979,"src":"23853:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12976,"name":"uint64","nodeType":"ElementaryTypeName","src":"23853:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23852:15:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12987,"nodeType":"FunctionDefinition","src":"24273:66:16","nodes":[],"documentation":{"id":12980,"nodeType":"StructuredDocumentation","src":"23874:394:16","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"24282:9:16","parameters":{"id":12985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12982,"mutability":"mutable","name":"path","nameLocation":"24308:4:16","nodeType":"VariableDeclaration","scope":12987,"src":"24292:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12981,"name":"string","nodeType":"ElementaryTypeName","src":"24292:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12984,"mutability":"mutable","name":"recursive","nameLocation":"24319:9:16","nodeType":"VariableDeclaration","scope":12987,"src":"24314:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12983,"name":"bool","nodeType":"ElementaryTypeName","src":"24314:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24291:38:16"},"returnParameters":{"id":12986,"nodeType":"ParameterList","parameters":[],"src":"24338:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12995,"nodeType":"FunctionDefinition","src":"24569:93:16","nodes":[],"documentation":{"id":12988,"nodeType":"StructuredDocumentation","src":"24345:219:16","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"24578:10:16","parameters":{"id":12991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12990,"mutability":"mutable","name":"artifactPath","nameLocation":"24605:12:16","nodeType":"VariableDeclaration","scope":12995,"src":"24589:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12989,"name":"string","nodeType":"ElementaryTypeName","src":"24589:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24588:30:16"},"returnParameters":{"id":12994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12993,"mutability":"mutable","name":"deployedAddress","nameLocation":"24645:15:16","nodeType":"VariableDeclaration","scope":12995,"src":"24637:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12992,"name":"address","nodeType":"ElementaryTypeName","src":"24637:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24636:25:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13005,"nodeType":"FunctionDefinition","src":"24955:141:16","nodes":[],"documentation":{"id":12996,"nodeType":"StructuredDocumentation","src":"24668:282:16","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionaly accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"24964:10:16","parameters":{"id":13001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12998,"mutability":"mutable","name":"artifactPath","nameLocation":"24991:12:16","nodeType":"VariableDeclaration","scope":13005,"src":"24975:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12997,"name":"string","nodeType":"ElementaryTypeName","src":"24975:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13000,"mutability":"mutable","name":"constructorArgs","nameLocation":"25020:15:16","nodeType":"VariableDeclaration","scope":13005,"src":"25005:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12999,"name":"bytes","nodeType":"ElementaryTypeName","src":"25005:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24974:62:16"},"returnParameters":{"id":13004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13003,"mutability":"mutable","name":"deployedAddress","nameLocation":"25079:15:16","nodeType":"VariableDeclaration","scope":13005,"src":"25071:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13002,"name":"address","nodeType":"ElementaryTypeName","src":"25071:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25070:25:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13013,"nodeType":"FunctionDefinition","src":"25191:69:16","nodes":[],"documentation":{"id":13006,"nodeType":"StructuredDocumentation","src":"25102:84:16","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"25200:6:16","parameters":{"id":13009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13008,"mutability":"mutable","name":"path","nameLocation":"25223:4:16","nodeType":"VariableDeclaration","scope":13013,"src":"25207:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13007,"name":"string","nodeType":"ElementaryTypeName","src":"25207:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25206:22:16"},"returnParameters":{"id":13012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13011,"mutability":"mutable","name":"result","nameLocation":"25252:6:16","nodeType":"VariableDeclaration","scope":13013,"src":"25247:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13010,"name":"bool","nodeType":"ElementaryTypeName","src":"25247:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25246:13:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13022,"nodeType":"FunctionDefinition","src":"25325:84:16","nodes":[],"documentation":{"id":13014,"nodeType":"StructuredDocumentation","src":"25266:54:16","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"25334:3:16","parameters":{"id":13018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13017,"mutability":"mutable","name":"commandInput","nameLocation":"25356:12:16","nodeType":"VariableDeclaration","scope":13022,"src":"25338:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13015,"name":"string","nodeType":"ElementaryTypeName","src":"25338:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13016,"nodeType":"ArrayTypeName","src":"25338:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"25337:32:16"},"returnParameters":{"id":13021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13020,"mutability":"mutable","name":"result","nameLocation":"25401:6:16","nodeType":"VariableDeclaration","scope":13022,"src":"25388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13019,"name":"bytes","nodeType":"ElementaryTypeName","src":"25388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25387:21:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13031,"nodeType":"FunctionDefinition","src":"25508:93:16","nodes":[],"documentation":{"id":13023,"nodeType":"StructuredDocumentation","src":"25415:88:16","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"25517:10:16","parameters":{"id":13026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13025,"mutability":"mutable","name":"path","nameLocation":"25544:4:16","nodeType":"VariableDeclaration","scope":13031,"src":"25528:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13024,"name":"string","nodeType":"ElementaryTypeName","src":"25528:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25527:22:16"},"returnParameters":{"id":13030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13029,"mutability":"mutable","name":"metadata","nameLocation":"25591:8:16","nodeType":"VariableDeclaration","scope":13031,"src":"25573:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12327_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":13028,"nodeType":"UserDefinedTypeName","pathNode":{"id":13027,"name":"FsMetadata","nameLocations":["25573:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":12327,"src":"25573:10:16"},"referencedDeclaration":12327,"src":"25573:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12327_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"25572:28:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13039,"nodeType":"FunctionDefinition","src":"25839:101:16","nodes":[],"documentation":{"id":13032,"nodeType":"StructuredDocumentation","src":"25607:227:16","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"25848:7:16","parameters":{"id":13035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13034,"mutability":"mutable","name":"artifactPath","nameLocation":"25872:12:16","nodeType":"VariableDeclaration","scope":13039,"src":"25856:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13033,"name":"string","nodeType":"ElementaryTypeName","src":"25856:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25855:30:16"},"returnParameters":{"id":13038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13037,"mutability":"mutable","name":"creationBytecode","nameLocation":"25922:16:16","nodeType":"VariableDeclaration","scope":13039,"src":"25909:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13036,"name":"bytes","nodeType":"ElementaryTypeName","src":"25909:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25908:31:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13047,"nodeType":"FunctionDefinition","src":"26178:108:16","nodes":[],"documentation":{"id":13040,"nodeType":"StructuredDocumentation","src":"25946:227:16","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"26187:15:16","parameters":{"id":13043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13042,"mutability":"mutable","name":"artifactPath","nameLocation":"26219:12:16","nodeType":"VariableDeclaration","scope":13047,"src":"26203:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13041,"name":"string","nodeType":"ElementaryTypeName","src":"26203:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26202:30:16"},"returnParameters":{"id":13046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13045,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"26269:15:16","nodeType":"VariableDeclaration","scope":13047,"src":"26256:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13044,"name":"bytes","nodeType":"ElementaryTypeName","src":"26256:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26255:30:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13055,"nodeType":"FunctionDefinition","src":"26392:68:16","nodes":[],"documentation":{"id":13048,"nodeType":"StructuredDocumentation","src":"26292:95:16","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"26401:5:16","parameters":{"id":13051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13050,"mutability":"mutable","name":"path","nameLocation":"26423:4:16","nodeType":"VariableDeclaration","scope":13055,"src":"26407:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13049,"name":"string","nodeType":"ElementaryTypeName","src":"26407:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26406:22:16"},"returnParameters":{"id":13054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13053,"mutability":"mutable","name":"result","nameLocation":"26452:6:16","nodeType":"VariableDeclaration","scope":13055,"src":"26447:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13052,"name":"bool","nodeType":"ElementaryTypeName","src":"26447:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26446:13:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13063,"nodeType":"FunctionDefinition","src":"26569:69:16","nodes":[],"documentation":{"id":13056,"nodeType":"StructuredDocumentation","src":"26466:98:16","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"26578:6:16","parameters":{"id":13059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13058,"mutability":"mutable","name":"path","nameLocation":"26601:4:16","nodeType":"VariableDeclaration","scope":13063,"src":"26585:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13057,"name":"string","nodeType":"ElementaryTypeName","src":"26585:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26584:22:16"},"returnParameters":{"id":13062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13061,"mutability":"mutable","name":"result","nameLocation":"26630:6:16","nodeType":"VariableDeclaration","scope":13063,"src":"26625:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13060,"name":"bool","nodeType":"ElementaryTypeName","src":"26625:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26624:13:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13069,"nodeType":"FunctionDefinition","src":"26694:66:16","nodes":[],"documentation":{"id":13064,"nodeType":"StructuredDocumentation","src":"26644:45:16","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"26703:11:16","parameters":{"id":13065,"nodeType":"ParameterList","parameters":[],"src":"26714:2:16"},"returnParameters":{"id":13068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13067,"mutability":"mutable","name":"path","nameLocation":"26754:4:16","nodeType":"VariableDeclaration","scope":13069,"src":"26740:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13066,"name":"string","nodeType":"ElementaryTypeName","src":"26740:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26739:20:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13077,"nodeType":"FunctionDefinition","src":"26827:83:16","nodes":[],"documentation":{"id":13070,"nodeType":"StructuredDocumentation","src":"26766:56:16","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"26836:6:16","parameters":{"id":13073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13072,"mutability":"mutable","name":"promptText","nameLocation":"26859:10:16","nodeType":"VariableDeclaration","scope":13077,"src":"26843:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13071,"name":"string","nodeType":"ElementaryTypeName","src":"26843:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26842:28:16"},"returnParameters":{"id":13076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13075,"mutability":"mutable","name":"input","nameLocation":"26903:5:16","nodeType":"VariableDeclaration","scope":13077,"src":"26889:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13074,"name":"string","nodeType":"ElementaryTypeName","src":"26889:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26888:21:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13085,"nodeType":"FunctionDefinition","src":"26973:78:16","nodes":[],"documentation":{"id":13078,"nodeType":"StructuredDocumentation","src":"26916:52:16","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"26982:13:16","parameters":{"id":13081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13080,"mutability":"mutable","name":"promptText","nameLocation":"27012:10:16","nodeType":"VariableDeclaration","scope":13085,"src":"26996:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13079,"name":"string","nodeType":"ElementaryTypeName","src":"26996:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26995:28:16"},"returnParameters":{"id":13084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13085,"src":"27042:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13082,"name":"address","nodeType":"ElementaryTypeName","src":"27042:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27041:9:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13093,"nodeType":"FunctionDefinition","src":"27125:89:16","nodes":[],"documentation":{"id":13086,"nodeType":"StructuredDocumentation","src":"27057:63:16","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"27134:12:16","parameters":{"id":13089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13088,"mutability":"mutable","name":"promptText","nameLocation":"27163:10:16","nodeType":"VariableDeclaration","scope":13093,"src":"27147:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13087,"name":"string","nodeType":"ElementaryTypeName","src":"27147:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27146:28:16"},"returnParameters":{"id":13092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13091,"mutability":"mutable","name":"input","nameLocation":"27207:5:16","nodeType":"VariableDeclaration","scope":13093,"src":"27193:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13090,"name":"string","nodeType":"ElementaryTypeName","src":"27193:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27192:21:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13101,"nodeType":"FunctionDefinition","src":"27294:81:16","nodes":[],"documentation":{"id":13094,"nodeType":"StructuredDocumentation","src":"27220:69:16","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"27303:16:16","parameters":{"id":13097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13096,"mutability":"mutable","name":"promptText","nameLocation":"27336:10:16","nodeType":"VariableDeclaration","scope":13101,"src":"27320:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13095,"name":"string","nodeType":"ElementaryTypeName","src":"27320:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27319:28:16"},"returnParameters":{"id":13100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13101,"src":"27366:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13098,"name":"uint256","nodeType":"ElementaryTypeName","src":"27366:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27365:9:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13109,"nodeType":"FunctionDefinition","src":"27435:75:16","nodes":[],"documentation":{"id":13102,"nodeType":"StructuredDocumentation","src":"27381:49:16","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"27444:10:16","parameters":{"id":13105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13104,"mutability":"mutable","name":"promptText","nameLocation":"27471:10:16","nodeType":"VariableDeclaration","scope":13109,"src":"27455:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13103,"name":"string","nodeType":"ElementaryTypeName","src":"27455:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27454:28:16"},"returnParameters":{"id":13108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13109,"src":"27501:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13106,"name":"uint256","nodeType":"ElementaryTypeName","src":"27501:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27500:9:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13119,"nodeType":"FunctionDefinition","src":"27758:89:16","nodes":[],"documentation":{"id":13110,"nodeType":"StructuredDocumentation","src":"27516:237:16","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27767:7:16","parameters":{"id":13113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13112,"mutability":"mutable","name":"path","nameLocation":"27791:4:16","nodeType":"VariableDeclaration","scope":13119,"src":"27775:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13111,"name":"string","nodeType":"ElementaryTypeName","src":"27775:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27774:22:16"},"returnParameters":{"id":13118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13117,"mutability":"mutable","name":"entries","nameLocation":"27838:7:16","nodeType":"VariableDeclaration","scope":13119,"src":"27820:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12312_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13115,"nodeType":"UserDefinedTypeName","pathNode":{"id":13114,"name":"DirEntry","nameLocations":["27820:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":12312,"src":"27820:8:16"},"referencedDeclaration":12312,"src":"27820:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12312_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13116,"nodeType":"ArrayTypeName","src":"27820:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12312_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27819:27:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13131,"nodeType":"FunctionDefinition","src":"27884:106:16","nodes":[],"documentation":{"id":13120,"nodeType":"StructuredDocumentation","src":"27853:26:16","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27893:7:16","parameters":{"id":13125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13122,"mutability":"mutable","name":"path","nameLocation":"27917:4:16","nodeType":"VariableDeclaration","scope":13131,"src":"27901:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13121,"name":"string","nodeType":"ElementaryTypeName","src":"27901:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13124,"mutability":"mutable","name":"maxDepth","nameLocation":"27930:8:16","nodeType":"VariableDeclaration","scope":13131,"src":"27923:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13123,"name":"uint64","nodeType":"ElementaryTypeName","src":"27923:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27900:39:16"},"returnParameters":{"id":13130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13129,"mutability":"mutable","name":"entries","nameLocation":"27981:7:16","nodeType":"VariableDeclaration","scope":13131,"src":"27963:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12312_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13127,"nodeType":"UserDefinedTypeName","pathNode":{"id":13126,"name":"DirEntry","nameLocations":["27963:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":12312,"src":"27963:8:16"},"referencedDeclaration":12312,"src":"27963:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12312_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13128,"nodeType":"ArrayTypeName","src":"27963:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12312_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27962:27:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13145,"nodeType":"FunctionDefinition","src":"28027:148:16","nodes":[],"documentation":{"id":13132,"nodeType":"StructuredDocumentation","src":"27996:26:16","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"28036:7:16","parameters":{"id":13139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13134,"mutability":"mutable","name":"path","nameLocation":"28060:4:16","nodeType":"VariableDeclaration","scope":13145,"src":"28044:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13133,"name":"string","nodeType":"ElementaryTypeName","src":"28044:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13136,"mutability":"mutable","name":"maxDepth","nameLocation":"28073:8:16","nodeType":"VariableDeclaration","scope":13145,"src":"28066:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13135,"name":"uint64","nodeType":"ElementaryTypeName","src":"28066:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13138,"mutability":"mutable","name":"followLinks","nameLocation":"28088:11:16","nodeType":"VariableDeclaration","scope":13145,"src":"28083:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13137,"name":"bool","nodeType":"ElementaryTypeName","src":"28083:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28043:57:16"},"returnParameters":{"id":13144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13143,"mutability":"mutable","name":"entries","nameLocation":"28166:7:16","nodeType":"VariableDeclaration","scope":13145,"src":"28148:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12312_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13141,"nodeType":"UserDefinedTypeName","pathNode":{"id":13140,"name":"DirEntry","nameLocations":["28148:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":12312,"src":"28148:8:16"},"referencedDeclaration":12312,"src":"28148:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12312_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13142,"nodeType":"ArrayTypeName","src":"28148:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12312_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"28147:27:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13153,"nodeType":"FunctionDefinition","src":"28273:83:16","nodes":[],"documentation":{"id":13146,"nodeType":"StructuredDocumentation","src":"28181:87:16","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"28282:8:16","parameters":{"id":13149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13148,"mutability":"mutable","name":"path","nameLocation":"28307:4:16","nodeType":"VariableDeclaration","scope":13153,"src":"28291:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13147,"name":"string","nodeType":"ElementaryTypeName","src":"28291:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28290:22:16"},"returnParameters":{"id":13152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13151,"mutability":"mutable","name":"data","nameLocation":"28350:4:16","nodeType":"VariableDeclaration","scope":13153,"src":"28336:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13150,"name":"string","nodeType":"ElementaryTypeName","src":"28336:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28335:20:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13161,"nodeType":"FunctionDefinition","src":"28454:88:16","nodes":[],"documentation":{"id":13154,"nodeType":"StructuredDocumentation","src":"28362:87:16","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"28463:14:16","parameters":{"id":13157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13156,"mutability":"mutable","name":"path","nameLocation":"28494:4:16","nodeType":"VariableDeclaration","scope":13161,"src":"28478:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13155,"name":"string","nodeType":"ElementaryTypeName","src":"28478:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28477:22:16"},"returnParameters":{"id":13160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13159,"mutability":"mutable","name":"data","nameLocation":"28536:4:16","nodeType":"VariableDeclaration","scope":13161,"src":"28523:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13158,"name":"bytes","nodeType":"ElementaryTypeName","src":"28523:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28522:19:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13169,"nodeType":"FunctionDefinition","src":"28591:83:16","nodes":[],"documentation":{"id":13162,"nodeType":"StructuredDocumentation","src":"28548:38:16","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"28600:8:16","parameters":{"id":13165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13164,"mutability":"mutable","name":"path","nameLocation":"28625:4:16","nodeType":"VariableDeclaration","scope":13169,"src":"28609:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13163,"name":"string","nodeType":"ElementaryTypeName","src":"28609:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28608:22:16"},"returnParameters":{"id":13168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13167,"mutability":"mutable","name":"line","nameLocation":"28668:4:16","nodeType":"VariableDeclaration","scope":13169,"src":"28654:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13166,"name":"string","nodeType":"ElementaryTypeName","src":"28654:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28653:20:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13177,"nodeType":"FunctionDefinition","src":"28933:93:16","nodes":[],"documentation":{"id":13170,"nodeType":"StructuredDocumentation","src":"28680:248:16","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"28942:8:16","parameters":{"id":13173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13172,"mutability":"mutable","name":"linkPath","nameLocation":"28967:8:16","nodeType":"VariableDeclaration","scope":13177,"src":"28951:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13171,"name":"string","nodeType":"ElementaryTypeName","src":"28951:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28950:26:16"},"returnParameters":{"id":13176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13175,"mutability":"mutable","name":"targetPath","nameLocation":"29014:10:16","nodeType":"VariableDeclaration","scope":13177,"src":"29000:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13174,"name":"string","nodeType":"ElementaryTypeName","src":"29000:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28999:26:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13185,"nodeType":"FunctionDefinition","src":"29416:66:16","nodes":[],"documentation":{"id":13178,"nodeType":"StructuredDocumentation","src":"29032:379:16","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"29425:9:16","parameters":{"id":13183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13180,"mutability":"mutable","name":"path","nameLocation":"29451:4:16","nodeType":"VariableDeclaration","scope":13185,"src":"29435:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13179,"name":"string","nodeType":"ElementaryTypeName","src":"29435:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13182,"mutability":"mutable","name":"recursive","nameLocation":"29462:9:16","nodeType":"VariableDeclaration","scope":13185,"src":"29457:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13181,"name":"bool","nodeType":"ElementaryTypeName","src":"29457:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29434:38:16"},"returnParameters":{"id":13184,"nodeType":"ParameterList","parameters":[],"src":"29481:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13191,"nodeType":"FunctionDefinition","src":"29815:51:16","nodes":[],"documentation":{"id":13186,"nodeType":"StructuredDocumentation","src":"29488:322:16","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"29824:10:16","parameters":{"id":13189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13188,"mutability":"mutable","name":"path","nameLocation":"29851:4:16","nodeType":"VariableDeclaration","scope":13191,"src":"29835:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13187,"name":"string","nodeType":"ElementaryTypeName","src":"29835:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29834:22:16"},"returnParameters":{"id":13190,"nodeType":"ParameterList","parameters":[],"src":"29865:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13201,"nodeType":"FunctionDefinition","src":"29973:91:16","nodes":[],"documentation":{"id":13192,"nodeType":"StructuredDocumentation","src":"29872:96:16","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"29982:6:16","parameters":{"id":13196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13195,"mutability":"mutable","name":"commandInput","nameLocation":"30007:12:16","nodeType":"VariableDeclaration","scope":13201,"src":"29989:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13193,"name":"string","nodeType":"ElementaryTypeName","src":"29989:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13194,"nodeType":"ArrayTypeName","src":"29989:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29988:32:16"},"returnParameters":{"id":13200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13199,"mutability":"mutable","name":"result","nameLocation":"30056:6:16","nodeType":"VariableDeclaration","scope":13201,"src":"30039:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12343_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":13198,"nodeType":"UserDefinedTypeName","pathNode":{"id":13197,"name":"FfiResult","nameLocations":["30039:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":12343,"src":"30039:9:16"},"referencedDeclaration":12343,"src":"30039:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12343_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"30038:25:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13207,"nodeType":"FunctionDefinition","src":"30129:60:16","nodes":[],"documentation":{"id":13202,"nodeType":"StructuredDocumentation","src":"30070:54:16","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"30138:8:16","parameters":{"id":13203,"nodeType":"ParameterList","parameters":[],"src":"30146:2:16"},"returnParameters":{"id":13206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13205,"mutability":"mutable","name":"milliseconds","nameLocation":"30175:12:16","nodeType":"VariableDeclaration","scope":13207,"src":"30167:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13204,"name":"uint256","nodeType":"ElementaryTypeName","src":"30167:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30166:22:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13215,"nodeType":"FunctionDefinition","src":"30358:72:16","nodes":[],"documentation":{"id":13208,"nodeType":"StructuredDocumentation","src":"30195:158:16","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"30367:9:16","parameters":{"id":13213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13210,"mutability":"mutable","name":"path","nameLocation":"30393:4:16","nodeType":"VariableDeclaration","scope":13215,"src":"30377:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13209,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13212,"mutability":"mutable","name":"data","nameLocation":"30415:4:16","nodeType":"VariableDeclaration","scope":13215,"src":"30399:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13211,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:44:16"},"returnParameters":{"id":13214,"nodeType":"ParameterList","parameters":[],"src":"30429:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13223,"nodeType":"FunctionDefinition","src":"30608:77:16","nodes":[],"documentation":{"id":13216,"nodeType":"StructuredDocumentation","src":"30436:167:16","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"30617:15:16","parameters":{"id":13221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13218,"mutability":"mutable","name":"path","nameLocation":"30649:4:16","nodeType":"VariableDeclaration","scope":13223,"src":"30633:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13217,"name":"string","nodeType":"ElementaryTypeName","src":"30633:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13220,"mutability":"mutable","name":"data","nameLocation":"30670:4:16","nodeType":"VariableDeclaration","scope":13223,"src":"30655:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13219,"name":"bytes","nodeType":"ElementaryTypeName","src":"30655:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30632:43:16"},"returnParameters":{"id":13222,"nodeType":"ParameterList","parameters":[],"src":"30684:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13231,"nodeType":"FunctionDefinition","src":"30806:72:16","nodes":[],"documentation":{"id":13224,"nodeType":"StructuredDocumentation","src":"30691:110:16","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"30815:9:16","parameters":{"id":13229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13226,"mutability":"mutable","name":"path","nameLocation":"30841:4:16","nodeType":"VariableDeclaration","scope":13231,"src":"30825:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13225,"name":"string","nodeType":"ElementaryTypeName","src":"30825:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13228,"mutability":"mutable","name":"data","nameLocation":"30863:4:16","nodeType":"VariableDeclaration","scope":13231,"src":"30847:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13227,"name":"string","nodeType":"ElementaryTypeName","src":"30847:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30824:44:16"},"returnParameters":{"id":13230,"nodeType":"ParameterList","parameters":[],"src":"30877:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13241,"nodeType":"FunctionDefinition","src":"31071:91:16","nodes":[],"documentation":{"id":13232,"nodeType":"StructuredDocumentation","src":"30915:151:16","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"31080:9:16","parameters":{"id":13237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13234,"mutability":"mutable","name":"json","nameLocation":"31106:4:16","nodeType":"VariableDeclaration","scope":13241,"src":"31090:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13233,"name":"string","nodeType":"ElementaryTypeName","src":"31090:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13236,"mutability":"mutable","name":"key","nameLocation":"31128:3:16","nodeType":"VariableDeclaration","scope":13241,"src":"31112:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13235,"name":"string","nodeType":"ElementaryTypeName","src":"31112:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31089:43:16"},"returnParameters":{"id":13240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13241,"src":"31156:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13238,"name":"bool","nodeType":"ElementaryTypeName","src":"31156:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31155:6:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13251,"nodeType":"FunctionDefinition","src":"31217:95:16","nodes":[],"documentation":{"id":13242,"nodeType":"StructuredDocumentation","src":"31168:44:16","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"31226:13:16","parameters":{"id":13247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13244,"mutability":"mutable","name":"json","nameLocation":"31256:4:16","nodeType":"VariableDeclaration","scope":13251,"src":"31240:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13243,"name":"string","nodeType":"ElementaryTypeName","src":"31240:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13246,"mutability":"mutable","name":"key","nameLocation":"31278:3:16","nodeType":"VariableDeclaration","scope":13251,"src":"31262:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13245,"name":"string","nodeType":"ElementaryTypeName","src":"31262:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31239:43:16"},"returnParameters":{"id":13250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13251,"src":"31306:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13248,"name":"bool","nodeType":"ElementaryTypeName","src":"31306:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31305:6:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13261,"nodeType":"FunctionDefinition","src":"31393:101:16","nodes":[],"documentation":{"id":13252,"nodeType":"StructuredDocumentation","src":"31318:70:16","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"31402:16:16","parameters":{"id":13257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13254,"mutability":"mutable","name":"json","nameLocation":"31435:4:16","nodeType":"VariableDeclaration","scope":13261,"src":"31419:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13253,"name":"string","nodeType":"ElementaryTypeName","src":"31419:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13256,"mutability":"mutable","name":"key","nameLocation":"31457:3:16","nodeType":"VariableDeclaration","scope":13261,"src":"31441:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13255,"name":"string","nodeType":"ElementaryTypeName","src":"31441:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31418:43:16"},"returnParameters":{"id":13260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13261,"src":"31485:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13258,"name":"address","nodeType":"ElementaryTypeName","src":"31485:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31484:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13272,"nodeType":"FunctionDefinition","src":"31577:139:16","nodes":[],"documentation":{"id":13262,"nodeType":"StructuredDocumentation","src":"31500:72:16","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"31586:21:16","parameters":{"id":13267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13264,"mutability":"mutable","name":"json","nameLocation":"31624:4:16","nodeType":"VariableDeclaration","scope":13272,"src":"31608:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13263,"name":"string","nodeType":"ElementaryTypeName","src":"31608:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13266,"mutability":"mutable","name":"key","nameLocation":"31646:3:16","nodeType":"VariableDeclaration","scope":13272,"src":"31630:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13265,"name":"string","nodeType":"ElementaryTypeName","src":"31630:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31607:43:16"},"returnParameters":{"id":13271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13272,"src":"31698:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13268,"name":"address","nodeType":"ElementaryTypeName","src":"31698:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13269,"nodeType":"ArrayTypeName","src":"31698:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"31697:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13282,"nodeType":"FunctionDefinition","src":"31794:95:16","nodes":[],"documentation":{"id":13273,"nodeType":"StructuredDocumentation","src":"31722:67:16","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"31803:13:16","parameters":{"id":13278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13275,"mutability":"mutable","name":"json","nameLocation":"31833:4:16","nodeType":"VariableDeclaration","scope":13282,"src":"31817:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13274,"name":"string","nodeType":"ElementaryTypeName","src":"31817:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13277,"mutability":"mutable","name":"key","nameLocation":"31855:3:16","nodeType":"VariableDeclaration","scope":13282,"src":"31839:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13276,"name":"string","nodeType":"ElementaryTypeName","src":"31839:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31816:43:16"},"returnParameters":{"id":13281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13282,"src":"31883:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13279,"name":"bool","nodeType":"ElementaryTypeName","src":"31883:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31882:6:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13293,"nodeType":"FunctionDefinition","src":"31969:109:16","nodes":[],"documentation":{"id":13283,"nodeType":"StructuredDocumentation","src":"31895:69:16","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"31978:18:16","parameters":{"id":13288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13285,"mutability":"mutable","name":"json","nameLocation":"32013:4:16","nodeType":"VariableDeclaration","scope":13293,"src":"31997:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13284,"name":"string","nodeType":"ElementaryTypeName","src":"31997:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13287,"mutability":"mutable","name":"key","nameLocation":"32035:3:16","nodeType":"VariableDeclaration","scope":13293,"src":"32019:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13286,"name":"string","nodeType":"ElementaryTypeName","src":"32019:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31996:43:16"},"returnParameters":{"id":13292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13293,"src":"32063:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13289,"name":"bool","nodeType":"ElementaryTypeName","src":"32063:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13290,"nodeType":"ArrayTypeName","src":"32063:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"32062:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13303,"nodeType":"FunctionDefinition","src":"32157:104:16","nodes":[],"documentation":{"id":13294,"nodeType":"StructuredDocumentation","src":"32084:68:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"32166:14:16","parameters":{"id":13299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13296,"mutability":"mutable","name":"json","nameLocation":"32197:4:16","nodeType":"VariableDeclaration","scope":13303,"src":"32181:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13295,"name":"string","nodeType":"ElementaryTypeName","src":"32181:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13298,"mutability":"mutable","name":"key","nameLocation":"32219:3:16","nodeType":"VariableDeclaration","scope":13303,"src":"32203:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13297,"name":"string","nodeType":"ElementaryTypeName","src":"32203:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32180:43:16"},"returnParameters":{"id":13302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13303,"src":"32247:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13300,"name":"bytes","nodeType":"ElementaryTypeName","src":"32247:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32246:14:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13313,"nodeType":"FunctionDefinition","src":"32342:101:16","nodes":[],"documentation":{"id":13304,"nodeType":"StructuredDocumentation","src":"32267:70:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"32351:16:16","parameters":{"id":13309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13306,"mutability":"mutable","name":"json","nameLocation":"32384:4:16","nodeType":"VariableDeclaration","scope":13313,"src":"32368:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13305,"name":"string","nodeType":"ElementaryTypeName","src":"32368:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13308,"mutability":"mutable","name":"key","nameLocation":"32406:3:16","nodeType":"VariableDeclaration","scope":13313,"src":"32390:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13307,"name":"string","nodeType":"ElementaryTypeName","src":"32390:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32367:43:16"},"returnParameters":{"id":13312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13313,"src":"32434:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32434:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"32433:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13324,"nodeType":"FunctionDefinition","src":"32526:139:16","nodes":[],"documentation":{"id":13314,"nodeType":"StructuredDocumentation","src":"32449:72:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"32535:21:16","parameters":{"id":13319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13316,"mutability":"mutable","name":"json","nameLocation":"32573:4:16","nodeType":"VariableDeclaration","scope":13324,"src":"32557:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13315,"name":"string","nodeType":"ElementaryTypeName","src":"32557:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13318,"mutability":"mutable","name":"key","nameLocation":"32595:3:16","nodeType":"VariableDeclaration","scope":13324,"src":"32579:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13317,"name":"string","nodeType":"ElementaryTypeName","src":"32579:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32556:43:16"},"returnParameters":{"id":13323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13324,"src":"32647:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32647:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13321,"nodeType":"ArrayTypeName","src":"32647:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"32646:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13335,"nodeType":"FunctionDefinition","src":"32746:111:16","nodes":[],"documentation":{"id":13325,"nodeType":"StructuredDocumentation","src":"32671:70:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"32755:19:16","parameters":{"id":13330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13327,"mutability":"mutable","name":"json","nameLocation":"32791:4:16","nodeType":"VariableDeclaration","scope":13335,"src":"32775:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13326,"name":"string","nodeType":"ElementaryTypeName","src":"32775:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13329,"mutability":"mutable","name":"key","nameLocation":"32813:3:16","nodeType":"VariableDeclaration","scope":13335,"src":"32797:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13328,"name":"string","nodeType":"ElementaryTypeName","src":"32797:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32774:43:16"},"returnParameters":{"id":13334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13335,"src":"32841:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13331,"name":"bytes","nodeType":"ElementaryTypeName","src":"32841:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13332,"nodeType":"ArrayTypeName","src":"32841:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"32840:16:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13345,"nodeType":"FunctionDefinition","src":"32937:96:16","nodes":[],"documentation":{"id":13336,"nodeType":"StructuredDocumentation","src":"32863:69:16","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"32946:12:16","parameters":{"id":13341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13338,"mutability":"mutable","name":"json","nameLocation":"32975:4:16","nodeType":"VariableDeclaration","scope":13345,"src":"32959:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13337,"name":"string","nodeType":"ElementaryTypeName","src":"32959:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13340,"mutability":"mutable","name":"key","nameLocation":"32997:3:16","nodeType":"VariableDeclaration","scope":13345,"src":"32981:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13339,"name":"string","nodeType":"ElementaryTypeName","src":"32981:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32958:43:16"},"returnParameters":{"id":13344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13345,"src":"33025:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13342,"name":"int256","nodeType":"ElementaryTypeName","src":"33025:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33024:8:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13356,"nodeType":"FunctionDefinition","src":"33115:110:16","nodes":[],"documentation":{"id":13346,"nodeType":"StructuredDocumentation","src":"33039:71:16","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"33124:17:16","parameters":{"id":13351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13348,"mutability":"mutable","name":"json","nameLocation":"33158:4:16","nodeType":"VariableDeclaration","scope":13356,"src":"33142:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13347,"name":"string","nodeType":"ElementaryTypeName","src":"33142:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13350,"mutability":"mutable","name":"key","nameLocation":"33180:3:16","nodeType":"VariableDeclaration","scope":13356,"src":"33164:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13349,"name":"string","nodeType":"ElementaryTypeName","src":"33164:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33141:43:16"},"returnParameters":{"id":13355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13356,"src":"33208:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13352,"name":"int256","nodeType":"ElementaryTypeName","src":"33208:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13353,"nodeType":"ArrayTypeName","src":"33208:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33207:17:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13367,"nodeType":"FunctionDefinition","src":"33290:111:16","nodes":[],"documentation":{"id":13357,"nodeType":"StructuredDocumentation","src":"33231:54:16","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"33299:13:16","parameters":{"id":13362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13359,"mutability":"mutable","name":"json","nameLocation":"33329:4:16","nodeType":"VariableDeclaration","scope":13367,"src":"33313:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13358,"name":"string","nodeType":"ElementaryTypeName","src":"33313:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13361,"mutability":"mutable","name":"key","nameLocation":"33351:3:16","nodeType":"VariableDeclaration","scope":13367,"src":"33335:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13360,"name":"string","nodeType":"ElementaryTypeName","src":"33335:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33312:43:16"},"returnParameters":{"id":13366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13365,"mutability":"mutable","name":"keys","nameLocation":"33395:4:16","nodeType":"VariableDeclaration","scope":13367,"src":"33379:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13363,"name":"string","nodeType":"ElementaryTypeName","src":"33379:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13364,"nodeType":"ArrayTypeName","src":"33379:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"33378:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13377,"nodeType":"FunctionDefinition","src":"33481:106:16","nodes":[],"documentation":{"id":13368,"nodeType":"StructuredDocumentation","src":"33407:69:16","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"33490:15:16","parameters":{"id":13373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13370,"mutability":"mutable","name":"json","nameLocation":"33522:4:16","nodeType":"VariableDeclaration","scope":13377,"src":"33506:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13369,"name":"string","nodeType":"ElementaryTypeName","src":"33506:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13372,"mutability":"mutable","name":"key","nameLocation":"33544:3:16","nodeType":"VariableDeclaration","scope":13377,"src":"33528:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13371,"name":"string","nodeType":"ElementaryTypeName","src":"33528:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33505:43:16"},"returnParameters":{"id":13376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13377,"src":"33572:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13374,"name":"string","nodeType":"ElementaryTypeName","src":"33572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33571:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13388,"nodeType":"FunctionDefinition","src":"33669:113:16","nodes":[],"documentation":{"id":13378,"nodeType":"StructuredDocumentation","src":"33593:71:16","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"33678:20:16","parameters":{"id":13383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13380,"mutability":"mutable","name":"json","nameLocation":"33715:4:16","nodeType":"VariableDeclaration","scope":13388,"src":"33699:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13379,"name":"string","nodeType":"ElementaryTypeName","src":"33699:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13382,"mutability":"mutable","name":"key","nameLocation":"33737:3:16","nodeType":"VariableDeclaration","scope":13388,"src":"33721:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13381,"name":"string","nodeType":"ElementaryTypeName","src":"33721:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33698:43:16"},"returnParameters":{"id":13387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13388,"src":"33765:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13384,"name":"string","nodeType":"ElementaryTypeName","src":"33765:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13385,"nodeType":"ArrayTypeName","src":"33765:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"33764:17:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13400,"nodeType":"FunctionDefinition","src":"33899:165:16","nodes":[],"documentation":{"id":13389,"nodeType":"StructuredDocumentation","src":"33788:106:16","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"33908:18:16","parameters":{"id":13396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13391,"mutability":"mutable","name":"json","nameLocation":"33943:4:16","nodeType":"VariableDeclaration","scope":13400,"src":"33927:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13390,"name":"string","nodeType":"ElementaryTypeName","src":"33927:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13393,"mutability":"mutable","name":"key","nameLocation":"33965:3:16","nodeType":"VariableDeclaration","scope":13400,"src":"33949:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13392,"name":"string","nodeType":"ElementaryTypeName","src":"33949:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13395,"mutability":"mutable","name":"typeDescription","nameLocation":"33986:15:16","nodeType":"VariableDeclaration","scope":13400,"src":"33970:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13394,"name":"string","nodeType":"ElementaryTypeName","src":"33970:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33926:76:16"},"returnParameters":{"id":13399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13400,"src":"34050:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13397,"name":"bytes","nodeType":"ElementaryTypeName","src":"34050:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34049:14:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13410,"nodeType":"FunctionDefinition","src":"34166:139:16","nodes":[],"documentation":{"id":13401,"nodeType":"StructuredDocumentation","src":"34070:91:16","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"34175:13:16","parameters":{"id":13406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13403,"mutability":"mutable","name":"json","nameLocation":"34205:4:16","nodeType":"VariableDeclaration","scope":13410,"src":"34189:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13402,"name":"string","nodeType":"ElementaryTypeName","src":"34189:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13405,"mutability":"mutable","name":"typeDescription","nameLocation":"34227:15:16","nodeType":"VariableDeclaration","scope":13410,"src":"34211:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13404,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34188:55:16"},"returnParameters":{"id":13409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13410,"src":"34291:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13407,"name":"bytes","nodeType":"ElementaryTypeName","src":"34291:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34290:14:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13422,"nodeType":"FunctionDefinition","src":"34416:160:16","nodes":[],"documentation":{"id":13411,"nodeType":"StructuredDocumentation","src":"34311:100:16","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"34425:13:16","parameters":{"id":13418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13413,"mutability":"mutable","name":"json","nameLocation":"34455:4:16","nodeType":"VariableDeclaration","scope":13422,"src":"34439:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13412,"name":"string","nodeType":"ElementaryTypeName","src":"34439:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13415,"mutability":"mutable","name":"key","nameLocation":"34477:3:16","nodeType":"VariableDeclaration","scope":13422,"src":"34461:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13414,"name":"string","nodeType":"ElementaryTypeName","src":"34461:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13417,"mutability":"mutable","name":"typeDescription","nameLocation":"34498:15:16","nodeType":"VariableDeclaration","scope":13422,"src":"34482:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13416,"name":"string","nodeType":"ElementaryTypeName","src":"34482:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34438:76:16"},"returnParameters":{"id":13421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13422,"src":"34562:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13419,"name":"bytes","nodeType":"ElementaryTypeName","src":"34562:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34561:14:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13432,"nodeType":"FunctionDefinition","src":"34657:98:16","nodes":[],"documentation":{"id":13423,"nodeType":"StructuredDocumentation","src":"34582:70:16","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"34666:13:16","parameters":{"id":13428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13425,"mutability":"mutable","name":"json","nameLocation":"34696:4:16","nodeType":"VariableDeclaration","scope":13432,"src":"34680:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13424,"name":"string","nodeType":"ElementaryTypeName","src":"34680:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13427,"mutability":"mutable","name":"key","nameLocation":"34718:3:16","nodeType":"VariableDeclaration","scope":13432,"src":"34702:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13426,"name":"string","nodeType":"ElementaryTypeName","src":"34702:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34679:43:16"},"returnParameters":{"id":13431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13432,"src":"34746:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13429,"name":"uint256","nodeType":"ElementaryTypeName","src":"34746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34745:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13443,"nodeType":"FunctionDefinition","src":"34838:112:16","nodes":[],"documentation":{"id":13433,"nodeType":"StructuredDocumentation","src":"34761:72:16","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"34847:18:16","parameters":{"id":13438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13435,"mutability":"mutable","name":"json","nameLocation":"34882:4:16","nodeType":"VariableDeclaration","scope":13443,"src":"34866:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13434,"name":"string","nodeType":"ElementaryTypeName","src":"34866:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13437,"mutability":"mutable","name":"key","nameLocation":"34904:3:16","nodeType":"VariableDeclaration","scope":13443,"src":"34888:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13436,"name":"string","nodeType":"ElementaryTypeName","src":"34888:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34865:43:16"},"returnParameters":{"id":13442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13443,"src":"34932:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13439,"name":"uint256","nodeType":"ElementaryTypeName","src":"34932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13440,"nodeType":"ArrayTypeName","src":"34932:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"34931:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13451,"nodeType":"FunctionDefinition","src":"34991:93:16","nodes":[],"documentation":{"id":13444,"nodeType":"StructuredDocumentation","src":"34956:30:16","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"35000:9:16","parameters":{"id":13447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13446,"mutability":"mutable","name":"json","nameLocation":"35026:4:16","nodeType":"VariableDeclaration","scope":13451,"src":"35010:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13445,"name":"string","nodeType":"ElementaryTypeName","src":"35010:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35009:22:16"},"returnParameters":{"id":13450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13449,"mutability":"mutable","name":"abiEncodedData","nameLocation":"35068:14:16","nodeType":"VariableDeclaration","scope":13451,"src":"35055:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13448,"name":"bytes","nodeType":"ElementaryTypeName","src":"35055:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35054:29:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13461,"nodeType":"FunctionDefinition","src":"35134:114:16","nodes":[],"documentation":{"id":13452,"nodeType":"StructuredDocumentation","src":"35090:39:16","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"35143:9:16","parameters":{"id":13457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13454,"mutability":"mutable","name":"json","nameLocation":"35169:4:16","nodeType":"VariableDeclaration","scope":13461,"src":"35153:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13453,"name":"string","nodeType":"ElementaryTypeName","src":"35153:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13456,"mutability":"mutable","name":"key","nameLocation":"35191:3:16","nodeType":"VariableDeclaration","scope":13461,"src":"35175:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13455,"name":"string","nodeType":"ElementaryTypeName","src":"35175:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35152:43:16"},"returnParameters":{"id":13460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13459,"mutability":"mutable","name":"abiEncodedData","nameLocation":"35232:14:16","nodeType":"VariableDeclaration","scope":13461,"src":"35219:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13458,"name":"bytes","nodeType":"ElementaryTypeName","src":"35219:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35218:29:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13473,"nodeType":"FunctionDefinition","src":"35283:148:16","nodes":[],"documentation":{"id":13462,"nodeType":"StructuredDocumentation","src":"35254:24:16","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"35292:16:16","parameters":{"id":13469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13464,"mutability":"mutable","name":"objectKey","nameLocation":"35325:9:16","nodeType":"VariableDeclaration","scope":13473,"src":"35309:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13463,"name":"string","nodeType":"ElementaryTypeName","src":"35309:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13466,"mutability":"mutable","name":"valueKey","nameLocation":"35352:8:16","nodeType":"VariableDeclaration","scope":13473,"src":"35336:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13465,"name":"string","nodeType":"ElementaryTypeName","src":"35336:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13468,"mutability":"mutable","name":"value","nameLocation":"35370:5:16","nodeType":"VariableDeclaration","scope":13473,"src":"35362:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13467,"name":"address","nodeType":"ElementaryTypeName","src":"35362:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35308:68:16"},"returnParameters":{"id":13472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13471,"mutability":"mutable","name":"json","nameLocation":"35425:4:16","nodeType":"VariableDeclaration","scope":13473,"src":"35411:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13470,"name":"string","nodeType":"ElementaryTypeName","src":"35411:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35410:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13486,"nodeType":"FunctionDefinition","src":"35466:160:16","nodes":[],"documentation":{"id":13474,"nodeType":"StructuredDocumentation","src":"35437:24:16","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"35475:16:16","parameters":{"id":13482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13476,"mutability":"mutable","name":"objectKey","nameLocation":"35508:9:16","nodeType":"VariableDeclaration","scope":13486,"src":"35492:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13475,"name":"string","nodeType":"ElementaryTypeName","src":"35492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13478,"mutability":"mutable","name":"valueKey","nameLocation":"35535:8:16","nodeType":"VariableDeclaration","scope":13486,"src":"35519:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13477,"name":"string","nodeType":"ElementaryTypeName","src":"35519:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13481,"mutability":"mutable","name":"values","nameLocation":"35564:6:16","nodeType":"VariableDeclaration","scope":13486,"src":"35545:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13479,"name":"address","nodeType":"ElementaryTypeName","src":"35545:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13480,"nodeType":"ArrayTypeName","src":"35545:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"35491:80:16"},"returnParameters":{"id":13485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13484,"mutability":"mutable","name":"json","nameLocation":"35620:4:16","nodeType":"VariableDeclaration","scope":13486,"src":"35606:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13483,"name":"string","nodeType":"ElementaryTypeName","src":"35606:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35605:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13498,"nodeType":"FunctionDefinition","src":"35661:142:16","nodes":[],"documentation":{"id":13487,"nodeType":"StructuredDocumentation","src":"35632:24:16","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"35670:13:16","parameters":{"id":13494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13489,"mutability":"mutable","name":"objectKey","nameLocation":"35700:9:16","nodeType":"VariableDeclaration","scope":13498,"src":"35684:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13488,"name":"string","nodeType":"ElementaryTypeName","src":"35684:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13491,"mutability":"mutable","name":"valueKey","nameLocation":"35727:8:16","nodeType":"VariableDeclaration","scope":13498,"src":"35711:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13490,"name":"string","nodeType":"ElementaryTypeName","src":"35711:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13493,"mutability":"mutable","name":"value","nameLocation":"35742:5:16","nodeType":"VariableDeclaration","scope":13498,"src":"35737:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13492,"name":"bool","nodeType":"ElementaryTypeName","src":"35737:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35683:65:16"},"returnParameters":{"id":13497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13496,"mutability":"mutable","name":"json","nameLocation":"35797:4:16","nodeType":"VariableDeclaration","scope":13498,"src":"35783:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13495,"name":"string","nodeType":"ElementaryTypeName","src":"35783:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35782:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13511,"nodeType":"FunctionDefinition","src":"35838:154:16","nodes":[],"documentation":{"id":13499,"nodeType":"StructuredDocumentation","src":"35809:24:16","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"35847:13:16","parameters":{"id":13507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13501,"mutability":"mutable","name":"objectKey","nameLocation":"35877:9:16","nodeType":"VariableDeclaration","scope":13511,"src":"35861:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13500,"name":"string","nodeType":"ElementaryTypeName","src":"35861:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13503,"mutability":"mutable","name":"valueKey","nameLocation":"35904:8:16","nodeType":"VariableDeclaration","scope":13511,"src":"35888:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13502,"name":"string","nodeType":"ElementaryTypeName","src":"35888:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13506,"mutability":"mutable","name":"values","nameLocation":"35930:6:16","nodeType":"VariableDeclaration","scope":13511,"src":"35914:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13504,"name":"bool","nodeType":"ElementaryTypeName","src":"35914:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13505,"nodeType":"ArrayTypeName","src":"35914:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"35860:77:16"},"returnParameters":{"id":13510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13509,"mutability":"mutable","name":"json","nameLocation":"35986:4:16","nodeType":"VariableDeclaration","scope":13511,"src":"35972:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13508,"name":"string","nodeType":"ElementaryTypeName","src":"35972:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35971:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13523,"nodeType":"FunctionDefinition","src":"36027:148:16","nodes":[],"documentation":{"id":13512,"nodeType":"StructuredDocumentation","src":"35998:24:16","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"36036:16:16","parameters":{"id":13519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13514,"mutability":"mutable","name":"objectKey","nameLocation":"36069:9:16","nodeType":"VariableDeclaration","scope":13523,"src":"36053:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13513,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13516,"mutability":"mutable","name":"valueKey","nameLocation":"36096:8:16","nodeType":"VariableDeclaration","scope":13523,"src":"36080:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13515,"name":"string","nodeType":"ElementaryTypeName","src":"36080:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13518,"mutability":"mutable","name":"value","nameLocation":"36114:5:16","nodeType":"VariableDeclaration","scope":13523,"src":"36106:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36106:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36052:68:16"},"returnParameters":{"id":13522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13521,"mutability":"mutable","name":"json","nameLocation":"36169:4:16","nodeType":"VariableDeclaration","scope":13523,"src":"36155:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13520,"name":"string","nodeType":"ElementaryTypeName","src":"36155:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36154:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13536,"nodeType":"FunctionDefinition","src":"36210:160:16","nodes":[],"documentation":{"id":13524,"nodeType":"StructuredDocumentation","src":"36181:24:16","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"36219:16:16","parameters":{"id":13532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13526,"mutability":"mutable","name":"objectKey","nameLocation":"36252:9:16","nodeType":"VariableDeclaration","scope":13536,"src":"36236:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13525,"name":"string","nodeType":"ElementaryTypeName","src":"36236:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13528,"mutability":"mutable","name":"valueKey","nameLocation":"36279:8:16","nodeType":"VariableDeclaration","scope":13536,"src":"36263:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13527,"name":"string","nodeType":"ElementaryTypeName","src":"36263:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13531,"mutability":"mutable","name":"values","nameLocation":"36308:6:16","nodeType":"VariableDeclaration","scope":13536,"src":"36289:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36289:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13530,"nodeType":"ArrayTypeName","src":"36289:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"36235:80:16"},"returnParameters":{"id":13535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13534,"mutability":"mutable","name":"json","nameLocation":"36364:4:16","nodeType":"VariableDeclaration","scope":13536,"src":"36350:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13533,"name":"string","nodeType":"ElementaryTypeName","src":"36350:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36349:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13548,"nodeType":"FunctionDefinition","src":"36405:153:16","nodes":[],"documentation":{"id":13537,"nodeType":"StructuredDocumentation","src":"36376:24:16","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"36414:14:16","parameters":{"id":13544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13539,"mutability":"mutable","name":"objectKey","nameLocation":"36445:9:16","nodeType":"VariableDeclaration","scope":13548,"src":"36429:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13538,"name":"string","nodeType":"ElementaryTypeName","src":"36429:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13541,"mutability":"mutable","name":"valueKey","nameLocation":"36472:8:16","nodeType":"VariableDeclaration","scope":13548,"src":"36456:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13540,"name":"string","nodeType":"ElementaryTypeName","src":"36456:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13543,"mutability":"mutable","name":"value","nameLocation":"36497:5:16","nodeType":"VariableDeclaration","scope":13548,"src":"36482:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13542,"name":"bytes","nodeType":"ElementaryTypeName","src":"36482:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36428:75:16"},"returnParameters":{"id":13547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13546,"mutability":"mutable","name":"json","nameLocation":"36552:4:16","nodeType":"VariableDeclaration","scope":13548,"src":"36538:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13545,"name":"string","nodeType":"ElementaryTypeName","src":"36538:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36537:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13561,"nodeType":"FunctionDefinition","src":"36593:156:16","nodes":[],"documentation":{"id":13549,"nodeType":"StructuredDocumentation","src":"36564:24:16","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"36602:14:16","parameters":{"id":13557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13551,"mutability":"mutable","name":"objectKey","nameLocation":"36633:9:16","nodeType":"VariableDeclaration","scope":13561,"src":"36617:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13550,"name":"string","nodeType":"ElementaryTypeName","src":"36617:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13553,"mutability":"mutable","name":"valueKey","nameLocation":"36660:8:16","nodeType":"VariableDeclaration","scope":13561,"src":"36644:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"36644:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13556,"mutability":"mutable","name":"values","nameLocation":"36687:6:16","nodeType":"VariableDeclaration","scope":13561,"src":"36670:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13554,"name":"bytes","nodeType":"ElementaryTypeName","src":"36670:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13555,"nodeType":"ArrayTypeName","src":"36670:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"36616:78:16"},"returnParameters":{"id":13560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13559,"mutability":"mutable","name":"json","nameLocation":"36743:4:16","nodeType":"VariableDeclaration","scope":13561,"src":"36729:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13558,"name":"string","nodeType":"ElementaryTypeName","src":"36729:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36728:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13573,"nodeType":"FunctionDefinition","src":"36784:143:16","nodes":[],"documentation":{"id":13562,"nodeType":"StructuredDocumentation","src":"36755:24:16","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"36793:12:16","parameters":{"id":13569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13564,"mutability":"mutable","name":"objectKey","nameLocation":"36822:9:16","nodeType":"VariableDeclaration","scope":13573,"src":"36806:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13563,"name":"string","nodeType":"ElementaryTypeName","src":"36806:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13566,"mutability":"mutable","name":"valueKey","nameLocation":"36849:8:16","nodeType":"VariableDeclaration","scope":13573,"src":"36833:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13565,"name":"string","nodeType":"ElementaryTypeName","src":"36833:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13568,"mutability":"mutable","name":"value","nameLocation":"36866:5:16","nodeType":"VariableDeclaration","scope":13573,"src":"36859:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13567,"name":"int256","nodeType":"ElementaryTypeName","src":"36859:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36805:67:16"},"returnParameters":{"id":13572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13571,"mutability":"mutable","name":"json","nameLocation":"36921:4:16","nodeType":"VariableDeclaration","scope":13573,"src":"36907:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13570,"name":"string","nodeType":"ElementaryTypeName","src":"36907:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36906:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13586,"nodeType":"FunctionDefinition","src":"36962:155:16","nodes":[],"documentation":{"id":13574,"nodeType":"StructuredDocumentation","src":"36933:24:16","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"36971:12:16","parameters":{"id":13582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13576,"mutability":"mutable","name":"objectKey","nameLocation":"37000:9:16","nodeType":"VariableDeclaration","scope":13586,"src":"36984:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13575,"name":"string","nodeType":"ElementaryTypeName","src":"36984:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13578,"mutability":"mutable","name":"valueKey","nameLocation":"37027:8:16","nodeType":"VariableDeclaration","scope":13586,"src":"37011:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13577,"name":"string","nodeType":"ElementaryTypeName","src":"37011:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13581,"mutability":"mutable","name":"values","nameLocation":"37055:6:16","nodeType":"VariableDeclaration","scope":13586,"src":"37037:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13579,"name":"int256","nodeType":"ElementaryTypeName","src":"37037:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13580,"nodeType":"ArrayTypeName","src":"37037:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"36983:79:16"},"returnParameters":{"id":13585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13584,"mutability":"mutable","name":"json","nameLocation":"37111:4:16","nodeType":"VariableDeclaration","scope":13586,"src":"37097:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13583,"name":"string","nodeType":"ElementaryTypeName","src":"37097:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37096:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13596,"nodeType":"FunctionDefinition","src":"37314:111:16","nodes":[],"documentation":{"id":13587,"nodeType":"StructuredDocumentation","src":"37123:186:16","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"37323:13:16","parameters":{"id":13592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13589,"mutability":"mutable","name":"objectKey","nameLocation":"37353:9:16","nodeType":"VariableDeclaration","scope":13596,"src":"37337:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13588,"name":"string","nodeType":"ElementaryTypeName","src":"37337:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13591,"mutability":"mutable","name":"value","nameLocation":"37380:5:16","nodeType":"VariableDeclaration","scope":13596,"src":"37364:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13590,"name":"string","nodeType":"ElementaryTypeName","src":"37364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37336:50:16"},"returnParameters":{"id":13595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13594,"mutability":"mutable","name":"json","nameLocation":"37419:4:16","nodeType":"VariableDeclaration","scope":13596,"src":"37405:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13593,"name":"string","nodeType":"ElementaryTypeName","src":"37405:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37404:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13606,"nodeType":"FunctionDefinition","src":"37460:149:16","nodes":[],"documentation":{"id":13597,"nodeType":"StructuredDocumentation","src":"37431:24:16","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"37469:17:16","parameters":{"id":13602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13599,"mutability":"mutable","name":"typeDescription","nameLocation":"37503:15:16","nodeType":"VariableDeclaration","scope":13606,"src":"37487:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13598,"name":"string","nodeType":"ElementaryTypeName","src":"37487:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13601,"mutability":"mutable","name":"value","nameLocation":"37535:5:16","nodeType":"VariableDeclaration","scope":13606,"src":"37520:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13600,"name":"bytes","nodeType":"ElementaryTypeName","src":"37520:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37486:55:16"},"returnParameters":{"id":13605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13604,"mutability":"mutable","name":"json","nameLocation":"37603:4:16","nodeType":"VariableDeclaration","scope":13606,"src":"37589:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13603,"name":"string","nodeType":"ElementaryTypeName","src":"37589:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37588:20:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13620,"nodeType":"FunctionDefinition","src":"37644:211:16","nodes":[],"documentation":{"id":13607,"nodeType":"StructuredDocumentation","src":"37615:24:16","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"37653:17:16","parameters":{"id":13616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13609,"mutability":"mutable","name":"objectKey","nameLocation":"37696:9:16","nodeType":"VariableDeclaration","scope":13620,"src":"37680:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13608,"name":"string","nodeType":"ElementaryTypeName","src":"37680:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13611,"mutability":"mutable","name":"valueKey","nameLocation":"37731:8:16","nodeType":"VariableDeclaration","scope":13620,"src":"37715:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13610,"name":"string","nodeType":"ElementaryTypeName","src":"37715:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13613,"mutability":"mutable","name":"typeDescription","nameLocation":"37765:15:16","nodeType":"VariableDeclaration","scope":13620,"src":"37749:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13612,"name":"string","nodeType":"ElementaryTypeName","src":"37749:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13615,"mutability":"mutable","name":"value","nameLocation":"37805:5:16","nodeType":"VariableDeclaration","scope":13620,"src":"37790:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13614,"name":"bytes","nodeType":"ElementaryTypeName","src":"37790:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37670:146:16"},"returnParameters":{"id":13619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13618,"mutability":"mutable","name":"json","nameLocation":"37849:4:16","nodeType":"VariableDeclaration","scope":13620,"src":"37835:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13617,"name":"string","nodeType":"ElementaryTypeName","src":"37835:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37834:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13632,"nodeType":"FunctionDefinition","src":"37890:155:16","nodes":[],"documentation":{"id":13621,"nodeType":"StructuredDocumentation","src":"37861:24:16","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"37899:15:16","parameters":{"id":13628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13623,"mutability":"mutable","name":"objectKey","nameLocation":"37931:9:16","nodeType":"VariableDeclaration","scope":13632,"src":"37915:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13622,"name":"string","nodeType":"ElementaryTypeName","src":"37915:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13625,"mutability":"mutable","name":"valueKey","nameLocation":"37958:8:16","nodeType":"VariableDeclaration","scope":13632,"src":"37942:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13624,"name":"string","nodeType":"ElementaryTypeName","src":"37942:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13627,"mutability":"mutable","name":"value","nameLocation":"37984:5:16","nodeType":"VariableDeclaration","scope":13632,"src":"37968:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13626,"name":"string","nodeType":"ElementaryTypeName","src":"37968:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37914:76:16"},"returnParameters":{"id":13631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13630,"mutability":"mutable","name":"json","nameLocation":"38039:4:16","nodeType":"VariableDeclaration","scope":13632,"src":"38025:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13629,"name":"string","nodeType":"ElementaryTypeName","src":"38025:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38024:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13645,"nodeType":"FunctionDefinition","src":"38080:158:16","nodes":[],"documentation":{"id":13633,"nodeType":"StructuredDocumentation","src":"38051:24:16","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"38089:15:16","parameters":{"id":13641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13635,"mutability":"mutable","name":"objectKey","nameLocation":"38121:9:16","nodeType":"VariableDeclaration","scope":13645,"src":"38105:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13634,"name":"string","nodeType":"ElementaryTypeName","src":"38105:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13637,"mutability":"mutable","name":"valueKey","nameLocation":"38148:8:16","nodeType":"VariableDeclaration","scope":13645,"src":"38132:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13636,"name":"string","nodeType":"ElementaryTypeName","src":"38132:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13640,"mutability":"mutable","name":"values","nameLocation":"38176:6:16","nodeType":"VariableDeclaration","scope":13645,"src":"38158:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13638,"name":"string","nodeType":"ElementaryTypeName","src":"38158:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13639,"nodeType":"ArrayTypeName","src":"38158:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38104:79:16"},"returnParameters":{"id":13644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13643,"mutability":"mutable","name":"json","nameLocation":"38232:4:16","nodeType":"VariableDeclaration","scope":13645,"src":"38218:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13642,"name":"string","nodeType":"ElementaryTypeName","src":"38218:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38217:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13657,"nodeType":"FunctionDefinition","src":"38273:150:16","nodes":[],"documentation":{"id":13646,"nodeType":"StructuredDocumentation","src":"38244:24:16","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"38282:18:16","parameters":{"id":13653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13648,"mutability":"mutable","name":"objectKey","nameLocation":"38317:9:16","nodeType":"VariableDeclaration","scope":13657,"src":"38301:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13647,"name":"string","nodeType":"ElementaryTypeName","src":"38301:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13650,"mutability":"mutable","name":"valueKey","nameLocation":"38344:8:16","nodeType":"VariableDeclaration","scope":13657,"src":"38328:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13649,"name":"string","nodeType":"ElementaryTypeName","src":"38328:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13652,"mutability":"mutable","name":"value","nameLocation":"38362:5:16","nodeType":"VariableDeclaration","scope":13657,"src":"38354:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13651,"name":"uint256","nodeType":"ElementaryTypeName","src":"38354:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38300:68:16"},"returnParameters":{"id":13656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13655,"mutability":"mutable","name":"json","nameLocation":"38417:4:16","nodeType":"VariableDeclaration","scope":13657,"src":"38403:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13654,"name":"string","nodeType":"ElementaryTypeName","src":"38403:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38402:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13669,"nodeType":"FunctionDefinition","src":"38458:145:16","nodes":[],"documentation":{"id":13658,"nodeType":"StructuredDocumentation","src":"38429:24:16","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"38467:13:16","parameters":{"id":13665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13660,"mutability":"mutable","name":"objectKey","nameLocation":"38497:9:16","nodeType":"VariableDeclaration","scope":13669,"src":"38481:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13659,"name":"string","nodeType":"ElementaryTypeName","src":"38481:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13662,"mutability":"mutable","name":"valueKey","nameLocation":"38524:8:16","nodeType":"VariableDeclaration","scope":13669,"src":"38508:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13661,"name":"string","nodeType":"ElementaryTypeName","src":"38508:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13664,"mutability":"mutable","name":"value","nameLocation":"38542:5:16","nodeType":"VariableDeclaration","scope":13669,"src":"38534:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13663,"name":"uint256","nodeType":"ElementaryTypeName","src":"38534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38480:68:16"},"returnParameters":{"id":13668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13667,"mutability":"mutable","name":"json","nameLocation":"38597:4:16","nodeType":"VariableDeclaration","scope":13669,"src":"38583:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13666,"name":"string","nodeType":"ElementaryTypeName","src":"38583:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38582:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13682,"nodeType":"FunctionDefinition","src":"38638:157:16","nodes":[],"documentation":{"id":13670,"nodeType":"StructuredDocumentation","src":"38609:24:16","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"38647:13:16","parameters":{"id":13678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13672,"mutability":"mutable","name":"objectKey","nameLocation":"38677:9:16","nodeType":"VariableDeclaration","scope":13682,"src":"38661:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13671,"name":"string","nodeType":"ElementaryTypeName","src":"38661:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13674,"mutability":"mutable","name":"valueKey","nameLocation":"38704:8:16","nodeType":"VariableDeclaration","scope":13682,"src":"38688:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13673,"name":"string","nodeType":"ElementaryTypeName","src":"38688:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13677,"mutability":"mutable","name":"values","nameLocation":"38733:6:16","nodeType":"VariableDeclaration","scope":13682,"src":"38714:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13675,"name":"uint256","nodeType":"ElementaryTypeName","src":"38714:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13676,"nodeType":"ArrayTypeName","src":"38714:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"38660:80:16"},"returnParameters":{"id":13681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13680,"mutability":"mutable","name":"json","nameLocation":"38789:4:16","nodeType":"VariableDeclaration","scope":13682,"src":"38775:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13679,"name":"string","nodeType":"ElementaryTypeName","src":"38775:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38774:20:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13690,"nodeType":"FunctionDefinition","src":"38895:72:16","nodes":[],"documentation":{"id":13683,"nodeType":"StructuredDocumentation","src":"38801:89:16","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"38904:9:16","parameters":{"id":13688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13685,"mutability":"mutable","name":"json","nameLocation":"38930:4:16","nodeType":"VariableDeclaration","scope":13690,"src":"38914:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13684,"name":"string","nodeType":"ElementaryTypeName","src":"38914:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13687,"mutability":"mutable","name":"path","nameLocation":"38952:4:16","nodeType":"VariableDeclaration","scope":13690,"src":"38936:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13686,"name":"string","nodeType":"ElementaryTypeName","src":"38936:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38913:44:16"},"returnParameters":{"id":13689,"nodeType":"ParameterList","parameters":[],"src":"38966:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13700,"nodeType":"FunctionDefinition","src":"39193:98:16","nodes":[],"documentation":{"id":13691,"nodeType":"StructuredDocumentation","src":"38973:215:16","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"39202:9:16","parameters":{"id":13698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13693,"mutability":"mutable","name":"json","nameLocation":"39228:4:16","nodeType":"VariableDeclaration","scope":13700,"src":"39212:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13692,"name":"string","nodeType":"ElementaryTypeName","src":"39212:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13695,"mutability":"mutable","name":"path","nameLocation":"39250:4:16","nodeType":"VariableDeclaration","scope":13700,"src":"39234:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13694,"name":"string","nodeType":"ElementaryTypeName","src":"39234:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13697,"mutability":"mutable","name":"valueKey","nameLocation":"39272:8:16","nodeType":"VariableDeclaration","scope":13700,"src":"39256:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13696,"name":"string","nodeType":"ElementaryTypeName","src":"39256:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39211:70:16"},"returnParameters":{"id":13699,"nodeType":"ParameterList","parameters":[],"src":"39290:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13704,"nodeType":"FunctionDefinition","src":"39830:30:16","nodes":[],"documentation":{"id":13701,"nodeType":"StructuredDocumentation","src":"39333:492:16","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"39839:9:16","parameters":{"id":13702,"nodeType":"ParameterList","parameters":[],"src":"39848:2:16"},"returnParameters":{"id":13703,"nodeType":"ParameterList","parameters":[],"src":"39859:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13710,"nodeType":"FunctionDefinition","src":"40030:44:16","nodes":[],"documentation":{"id":13705,"nodeType":"StructuredDocumentation","src":"39866:159:16","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"40039:9:16","parameters":{"id":13708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13707,"mutability":"mutable","name":"signer","nameLocation":"40057:6:16","nodeType":"VariableDeclaration","scope":13710,"src":"40049:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13706,"name":"address","nodeType":"ElementaryTypeName","src":"40049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40048:16:16"},"returnParameters":{"id":13709,"nodeType":"ParameterList","parameters":[],"src":"40073:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13716,"nodeType":"FunctionDefinition","src":"40248:48:16","nodes":[],"documentation":{"id":13711,"nodeType":"StructuredDocumentation","src":"40080:163:16","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"40257:9:16","parameters":{"id":13714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13713,"mutability":"mutable","name":"privateKey","nameLocation":"40275:10:16","nodeType":"VariableDeclaration","scope":13716,"src":"40267:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13712,"name":"uint256","nodeType":"ElementaryTypeName","src":"40267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40266:20:16"},"returnParameters":{"id":13715,"nodeType":"ParameterList","parameters":[],"src":"40295:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13720,"nodeType":"FunctionDefinition","src":"40806:35:16","nodes":[],"documentation":{"id":13717,"nodeType":"StructuredDocumentation","src":"40302:499:16","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"40815:14:16","parameters":{"id":13718,"nodeType":"ParameterList","parameters":[],"src":"40829:2:16"},"returnParameters":{"id":13719,"nodeType":"ParameterList","parameters":[],"src":"40840:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13726,"nodeType":"FunctionDefinition","src":"41003:49:16","nodes":[],"documentation":{"id":13721,"nodeType":"StructuredDocumentation","src":"40847:151:16","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"41012:14:16","parameters":{"id":13724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13723,"mutability":"mutable","name":"signer","nameLocation":"41035:6:16","nodeType":"VariableDeclaration","scope":13726,"src":"41027:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13722,"name":"address","nodeType":"ElementaryTypeName","src":"41027:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41026:16:16"},"returnParameters":{"id":13725,"nodeType":"ParameterList","parameters":[],"src":"41051:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13732,"nodeType":"FunctionDefinition","src":"41218:53:16","nodes":[],"documentation":{"id":13727,"nodeType":"StructuredDocumentation","src":"41058:155:16","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"41227:14:16","parameters":{"id":13730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13729,"mutability":"mutable","name":"privateKey","nameLocation":"41250:10:16","nodeType":"VariableDeclaration","scope":13732,"src":"41242:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13728,"name":"uint256","nodeType":"ElementaryTypeName","src":"41242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41241:20:16"},"returnParameters":{"id":13731,"nodeType":"ParameterList","parameters":[],"src":"41270:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13736,"nodeType":"FunctionDefinition","src":"41324:34:16","nodes":[],"documentation":{"id":13733,"nodeType":"StructuredDocumentation","src":"41277:42:16","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"41333:13:16","parameters":{"id":13734,"nodeType":"ParameterList","parameters":[],"src":"41346:2:16"},"returnParameters":{"id":13735,"nodeType":"ParameterList","parameters":[],"src":"41357:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13746,"nodeType":"FunctionDefinition","src":"41607:93:16","nodes":[],"documentation":{"id":13737,"nodeType":"StructuredDocumentation","src":"41397:205:16","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"41616:7:16","parameters":{"id":13742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13739,"mutability":"mutable","name":"input","nameLocation":"41640:5:16","nodeType":"VariableDeclaration","scope":13746,"src":"41624:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13738,"name":"string","nodeType":"ElementaryTypeName","src":"41624:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13741,"mutability":"mutable","name":"key","nameLocation":"41663:3:16","nodeType":"VariableDeclaration","scope":13746,"src":"41647:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13740,"name":"string","nodeType":"ElementaryTypeName","src":"41647:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41623:44:16"},"returnParameters":{"id":13745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13746,"src":"41691:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13743,"name":"uint256","nodeType":"ElementaryTypeName","src":"41691:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41690:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13754,"nodeType":"FunctionDefinition","src":"41759:100:16","nodes":[],"documentation":{"id":13747,"nodeType":"StructuredDocumentation","src":"41706:48:16","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"41768:12:16","parameters":{"id":13750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13749,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41797:16:16","nodeType":"VariableDeclaration","scope":13754,"src":"41781:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13748,"name":"string","nodeType":"ElementaryTypeName","src":"41781:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41780:34:16"},"returnParameters":{"id":13753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13752,"mutability":"mutable","name":"parsedValue","nameLocation":"41846:11:16","nodeType":"VariableDeclaration","scope":13754,"src":"41838:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13751,"name":"address","nodeType":"ElementaryTypeName","src":"41838:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41837:21:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13762,"nodeType":"FunctionDefinition","src":"41914:94:16","nodes":[],"documentation":{"id":13755,"nodeType":"StructuredDocumentation","src":"41865:44:16","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"41923:9:16","parameters":{"id":13758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13757,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41949:16:16","nodeType":"VariableDeclaration","scope":13762,"src":"41933:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13756,"name":"string","nodeType":"ElementaryTypeName","src":"41933:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41932:34:16"},"returnParameters":{"id":13761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13760,"mutability":"mutable","name":"parsedValue","nameLocation":"41995:11:16","nodeType":"VariableDeclaration","scope":13762,"src":"41990:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13759,"name":"bool","nodeType":"ElementaryTypeName","src":"41990:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41989:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13770,"nodeType":"FunctionDefinition","src":"42062:103:16","nodes":[],"documentation":{"id":13763,"nodeType":"StructuredDocumentation","src":"42014:43:16","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"42071:10:16","parameters":{"id":13766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13765,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42098:16:16","nodeType":"VariableDeclaration","scope":13770,"src":"42082:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13764,"name":"string","nodeType":"ElementaryTypeName","src":"42082:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42081:34:16"},"returnParameters":{"id":13769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13768,"mutability":"mutable","name":"parsedValue","nameLocation":"42152:11:16","nodeType":"VariableDeclaration","scope":13770,"src":"42139:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13767,"name":"bytes","nodeType":"ElementaryTypeName","src":"42139:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42138:26:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13778,"nodeType":"FunctionDefinition","src":"42223:100:16","nodes":[],"documentation":{"id":13771,"nodeType":"StructuredDocumentation","src":"42171:47:16","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"42232:12:16","parameters":{"id":13774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13773,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42261:16:16","nodeType":"VariableDeclaration","scope":13778,"src":"42245:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13772,"name":"string","nodeType":"ElementaryTypeName","src":"42245:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42244:34:16"},"returnParameters":{"id":13777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13776,"mutability":"mutable","name":"parsedValue","nameLocation":"42310:11:16","nodeType":"VariableDeclaration","scope":13778,"src":"42302:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"42302:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"42301:21:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13786,"nodeType":"FunctionDefinition","src":"42380:95:16","nodes":[],"documentation":{"id":13779,"nodeType":"StructuredDocumentation","src":"42329:46:16","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"42389:8:16","parameters":{"id":13782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13781,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42414:16:16","nodeType":"VariableDeclaration","scope":13786,"src":"42398:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13780,"name":"string","nodeType":"ElementaryTypeName","src":"42398:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42397:34:16"},"returnParameters":{"id":13785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13784,"mutability":"mutable","name":"parsedValue","nameLocation":"42462:11:16","nodeType":"VariableDeclaration","scope":13786,"src":"42455:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13783,"name":"int256","nodeType":"ElementaryTypeName","src":"42455:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"42454:20:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13794,"nodeType":"FunctionDefinition","src":"42533:97:16","nodes":[],"documentation":{"id":13787,"nodeType":"StructuredDocumentation","src":"42481:47:16","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"42542:9:16","parameters":{"id":13790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13789,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42568:16:16","nodeType":"VariableDeclaration","scope":13794,"src":"42552:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13788,"name":"string","nodeType":"ElementaryTypeName","src":"42552:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42551:34:16"},"returnParameters":{"id":13793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13792,"mutability":"mutable","name":"parsedValue","nameLocation":"42617:11:16","nodeType":"VariableDeclaration","scope":13794,"src":"42609:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13791,"name":"uint256","nodeType":"ElementaryTypeName","src":"42609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42608:21:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13806,"nodeType":"FunctionDefinition","src":"42708:151:16","nodes":[],"documentation":{"id":13795,"nodeType":"StructuredDocumentation","src":"42636:67:16","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"42717:7:16","parameters":{"id":13802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13797,"mutability":"mutable","name":"input","nameLocation":"42741:5:16","nodeType":"VariableDeclaration","scope":13806,"src":"42725:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13796,"name":"string","nodeType":"ElementaryTypeName","src":"42725:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13799,"mutability":"mutable","name":"from","nameLocation":"42764:4:16","nodeType":"VariableDeclaration","scope":13806,"src":"42748:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13798,"name":"string","nodeType":"ElementaryTypeName","src":"42748:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13801,"mutability":"mutable","name":"to","nameLocation":"42786:2:16","nodeType":"VariableDeclaration","scope":13806,"src":"42770:18:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13800,"name":"string","nodeType":"ElementaryTypeName","src":"42770:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42724:65:16"},"returnParameters":{"id":13805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13804,"mutability":"mutable","name":"output","nameLocation":"42851:6:16","nodeType":"VariableDeclaration","scope":13806,"src":"42837:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13803,"name":"string","nodeType":"ElementaryTypeName","src":"42837:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42836:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13817,"nodeType":"FunctionDefinition","src":"42952:113:16","nodes":[],"documentation":{"id":13807,"nodeType":"StructuredDocumentation","src":"42865:82:16","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"42961:5:16","parameters":{"id":13812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13809,"mutability":"mutable","name":"input","nameLocation":"42983:5:16","nodeType":"VariableDeclaration","scope":13817,"src":"42967:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13808,"name":"string","nodeType":"ElementaryTypeName","src":"42967:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13811,"mutability":"mutable","name":"delimiter","nameLocation":"43006:9:16","nodeType":"VariableDeclaration","scope":13817,"src":"42990:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13810,"name":"string","nodeType":"ElementaryTypeName","src":"42990:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42966:50:16"},"returnParameters":{"id":13816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13815,"mutability":"mutable","name":"outputs","nameLocation":"43056:7:16","nodeType":"VariableDeclaration","scope":13817,"src":"43040:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13813,"name":"string","nodeType":"ElementaryTypeName","src":"43040:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13814,"nodeType":"ArrayTypeName","src":"43040:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"43039:25:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13825,"nodeType":"FunctionDefinition","src":"43127:89:16","nodes":[],"documentation":{"id":13818,"nodeType":"StructuredDocumentation","src":"43071:51:16","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"43136:11:16","parameters":{"id":13821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13820,"mutability":"mutable","name":"input","nameLocation":"43164:5:16","nodeType":"VariableDeclaration","scope":13825,"src":"43148:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13819,"name":"string","nodeType":"ElementaryTypeName","src":"43148:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43147:23:16"},"returnParameters":{"id":13824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13823,"mutability":"mutable","name":"output","nameLocation":"43208:6:16","nodeType":"VariableDeclaration","scope":13825,"src":"43194:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13822,"name":"string","nodeType":"ElementaryTypeName","src":"43194:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43193:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13833,"nodeType":"FunctionDefinition","src":"43270:88:16","nodes":[],"documentation":{"id":13826,"nodeType":"StructuredDocumentation","src":"43222:43:16","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43279:8:16","parameters":{"id":13829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13828,"mutability":"mutable","name":"value","nameLocation":"43296:5:16","nodeType":"VariableDeclaration","scope":13833,"src":"43288:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13827,"name":"address","nodeType":"ElementaryTypeName","src":"43288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"43287:15:16"},"returnParameters":{"id":13832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13831,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43340:16:16","nodeType":"VariableDeclaration","scope":13833,"src":"43326:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13830,"name":"string","nodeType":"ElementaryTypeName","src":"43326:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43325:32:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13841,"nodeType":"FunctionDefinition","src":"43412:95:16","nodes":[],"documentation":{"id":13834,"nodeType":"StructuredDocumentation","src":"43364:43:16","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43421:8:16","parameters":{"id":13837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13836,"mutability":"mutable","name":"value","nameLocation":"43445:5:16","nodeType":"VariableDeclaration","scope":13841,"src":"43430:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13835,"name":"bytes","nodeType":"ElementaryTypeName","src":"43430:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43429:22:16"},"returnParameters":{"id":13840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13839,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43489:16:16","nodeType":"VariableDeclaration","scope":13841,"src":"43475:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13838,"name":"string","nodeType":"ElementaryTypeName","src":"43475:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43474:32:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13849,"nodeType":"FunctionDefinition","src":"43561:88:16","nodes":[],"documentation":{"id":13842,"nodeType":"StructuredDocumentation","src":"43513:43:16","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43570:8:16","parameters":{"id":13845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13844,"mutability":"mutable","name":"value","nameLocation":"43587:5:16","nodeType":"VariableDeclaration","scope":13849,"src":"43579:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"43579:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"43578:15:16"},"returnParameters":{"id":13848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13847,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43631:16:16","nodeType":"VariableDeclaration","scope":13849,"src":"43617:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13846,"name":"string","nodeType":"ElementaryTypeName","src":"43617:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43616:32:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13857,"nodeType":"FunctionDefinition","src":"43703:85:16","nodes":[],"documentation":{"id":13850,"nodeType":"StructuredDocumentation","src":"43655:43:16","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43712:8:16","parameters":{"id":13853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13852,"mutability":"mutable","name":"value","nameLocation":"43726:5:16","nodeType":"VariableDeclaration","scope":13857,"src":"43721:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13851,"name":"bool","nodeType":"ElementaryTypeName","src":"43721:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43720:12:16"},"returnParameters":{"id":13856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13855,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43770:16:16","nodeType":"VariableDeclaration","scope":13857,"src":"43756:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13854,"name":"string","nodeType":"ElementaryTypeName","src":"43756:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43755:32:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13865,"nodeType":"FunctionDefinition","src":"43842:88:16","nodes":[],"documentation":{"id":13858,"nodeType":"StructuredDocumentation","src":"43794:43:16","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43851:8:16","parameters":{"id":13861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13860,"mutability":"mutable","name":"value","nameLocation":"43868:5:16","nodeType":"VariableDeclaration","scope":13865,"src":"43860:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13859,"name":"uint256","nodeType":"ElementaryTypeName","src":"43860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43859:15:16"},"returnParameters":{"id":13864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13863,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43912:16:16","nodeType":"VariableDeclaration","scope":13865,"src":"43898:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13862,"name":"string","nodeType":"ElementaryTypeName","src":"43898:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43897:32:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13873,"nodeType":"FunctionDefinition","src":"43984:87:16","nodes":[],"documentation":{"id":13866,"nodeType":"StructuredDocumentation","src":"43936:43:16","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43993:8:16","parameters":{"id":13869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13868,"mutability":"mutable","name":"value","nameLocation":"44009:5:16","nodeType":"VariableDeclaration","scope":13873,"src":"44002:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13867,"name":"int256","nodeType":"ElementaryTypeName","src":"44002:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"44001:14:16"},"returnParameters":{"id":13872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13871,"mutability":"mutable","name":"stringifiedValue","nameLocation":"44053:16:16","nodeType":"VariableDeclaration","scope":13873,"src":"44039:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13870,"name":"string","nodeType":"ElementaryTypeName","src":"44039:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44038:32:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13881,"nodeType":"FunctionDefinition","src":"44133:89:16","nodes":[],"documentation":{"id":13874,"nodeType":"StructuredDocumentation","src":"44077:51:16","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"44142:11:16","parameters":{"id":13877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13876,"mutability":"mutable","name":"input","nameLocation":"44170:5:16","nodeType":"VariableDeclaration","scope":13881,"src":"44154:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13875,"name":"string","nodeType":"ElementaryTypeName","src":"44154:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44153:23:16"},"returnParameters":{"id":13880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13879,"mutability":"mutable","name":"output","nameLocation":"44214:6:16","nodeType":"VariableDeclaration","scope":13881,"src":"44200:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13878,"name":"string","nodeType":"ElementaryTypeName","src":"44200:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44199:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13889,"nodeType":"FunctionDefinition","src":"44305:82:16","nodes":[],"documentation":{"id":13882,"nodeType":"StructuredDocumentation","src":"44228:72:16","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"44314:4:16","parameters":{"id":13885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13884,"mutability":"mutable","name":"input","nameLocation":"44335:5:16","nodeType":"VariableDeclaration","scope":13889,"src":"44319:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13883,"name":"string","nodeType":"ElementaryTypeName","src":"44319:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44318:23:16"},"returnParameters":{"id":13888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13887,"mutability":"mutable","name":"output","nameLocation":"44379:6:16","nodeType":"VariableDeclaration","scope":13889,"src":"44365:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13886,"name":"string","nodeType":"ElementaryTypeName","src":"44365:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44364:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13901,"nodeType":"FunctionDefinition","src":"44582:113:16","nodes":[],"documentation":{"id":13890,"nodeType":"StructuredDocumentation","src":"44427:150:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"44591:24:16","parameters":{"id":13899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13892,"mutability":"mutable","name":"left","nameLocation":"44624:4:16","nodeType":"VariableDeclaration","scope":13901,"src":"44616:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13891,"name":"uint256","nodeType":"ElementaryTypeName","src":"44616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13894,"mutability":"mutable","name":"right","nameLocation":"44638:5:16","nodeType":"VariableDeclaration","scope":13901,"src":"44630:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13893,"name":"uint256","nodeType":"ElementaryTypeName","src":"44630:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13896,"mutability":"mutable","name":"maxDelta","nameLocation":"44653:8:16","nodeType":"VariableDeclaration","scope":13901,"src":"44645:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13895,"name":"uint256","nodeType":"ElementaryTypeName","src":"44645:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13898,"mutability":"mutable","name":"decimals","nameLocation":"44671:8:16","nodeType":"VariableDeclaration","scope":13901,"src":"44663:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13897,"name":"uint256","nodeType":"ElementaryTypeName","src":"44663:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44615:65:16"},"returnParameters":{"id":13900,"nodeType":"ParameterList","parameters":[],"src":"44694:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13915,"nodeType":"FunctionDefinition","src":"44910:182:16","nodes":[],"documentation":{"id":13902,"nodeType":"StructuredDocumentation","src":"44701:204:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"44919:24:16","parameters":{"id":13913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13904,"mutability":"mutable","name":"left","nameLocation":"44961:4:16","nodeType":"VariableDeclaration","scope":13915,"src":"44953:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13903,"name":"uint256","nodeType":"ElementaryTypeName","src":"44953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13906,"mutability":"mutable","name":"right","nameLocation":"44983:5:16","nodeType":"VariableDeclaration","scope":13915,"src":"44975:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13905,"name":"uint256","nodeType":"ElementaryTypeName","src":"44975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13908,"mutability":"mutable","name":"maxDelta","nameLocation":"45006:8:16","nodeType":"VariableDeclaration","scope":13915,"src":"44998:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13907,"name":"uint256","nodeType":"ElementaryTypeName","src":"44998:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13910,"mutability":"mutable","name":"decimals","nameLocation":"45032:8:16","nodeType":"VariableDeclaration","scope":13915,"src":"45024:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13909,"name":"uint256","nodeType":"ElementaryTypeName","src":"45024:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13912,"mutability":"mutable","name":"error","nameLocation":"45066:5:16","nodeType":"VariableDeclaration","scope":13915,"src":"45050:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13911,"name":"string","nodeType":"ElementaryTypeName","src":"45050:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44943:134:16"},"returnParameters":{"id":13914,"nodeType":"ParameterList","parameters":[],"src":"45091:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13927,"nodeType":"FunctionDefinition","src":"45252:111:16","nodes":[],"documentation":{"id":13916,"nodeType":"StructuredDocumentation","src":"45098:149:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45261:24:16","parameters":{"id":13925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13918,"mutability":"mutable","name":"left","nameLocation":"45293:4:16","nodeType":"VariableDeclaration","scope":13927,"src":"45286:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13917,"name":"int256","nodeType":"ElementaryTypeName","src":"45286:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13920,"mutability":"mutable","name":"right","nameLocation":"45306:5:16","nodeType":"VariableDeclaration","scope":13927,"src":"45299:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13919,"name":"int256","nodeType":"ElementaryTypeName","src":"45299:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13922,"mutability":"mutable","name":"maxDelta","nameLocation":"45321:8:16","nodeType":"VariableDeclaration","scope":13927,"src":"45313:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13921,"name":"uint256","nodeType":"ElementaryTypeName","src":"45313:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13924,"mutability":"mutable","name":"decimals","nameLocation":"45339:8:16","nodeType":"VariableDeclaration","scope":13927,"src":"45331:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13923,"name":"uint256","nodeType":"ElementaryTypeName","src":"45331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45285:63:16"},"returnParameters":{"id":13926,"nodeType":"ParameterList","parameters":[],"src":"45362:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13941,"nodeType":"FunctionDefinition","src":"45577:180:16","nodes":[],"documentation":{"id":13928,"nodeType":"StructuredDocumentation","src":"45369:203:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45586:24:16","parameters":{"id":13939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13930,"mutability":"mutable","name":"left","nameLocation":"45627:4:16","nodeType":"VariableDeclaration","scope":13941,"src":"45620:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13929,"name":"int256","nodeType":"ElementaryTypeName","src":"45620:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13932,"mutability":"mutable","name":"right","nameLocation":"45648:5:16","nodeType":"VariableDeclaration","scope":13941,"src":"45641:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13931,"name":"int256","nodeType":"ElementaryTypeName","src":"45641:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13934,"mutability":"mutable","name":"maxDelta","nameLocation":"45671:8:16","nodeType":"VariableDeclaration","scope":13941,"src":"45663:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13933,"name":"uint256","nodeType":"ElementaryTypeName","src":"45663:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13936,"mutability":"mutable","name":"decimals","nameLocation":"45697:8:16","nodeType":"VariableDeclaration","scope":13941,"src":"45689:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13935,"name":"uint256","nodeType":"ElementaryTypeName","src":"45689:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13938,"mutability":"mutable","name":"error","nameLocation":"45731:5:16","nodeType":"VariableDeclaration","scope":13941,"src":"45715:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13937,"name":"string","nodeType":"ElementaryTypeName","src":"45715:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45610:132:16"},"returnParameters":{"id":13940,"nodeType":"ParameterList","parameters":[],"src":"45756:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13951,"nodeType":"FunctionDefinition","src":"45861:88:16","nodes":[],"documentation":{"id":13942,"nodeType":"StructuredDocumentation","src":"45763:93:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"45870:17:16","parameters":{"id":13949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13944,"mutability":"mutable","name":"left","nameLocation":"45896:4:16","nodeType":"VariableDeclaration","scope":13951,"src":"45888:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13943,"name":"uint256","nodeType":"ElementaryTypeName","src":"45888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13946,"mutability":"mutable","name":"right","nameLocation":"45910:5:16","nodeType":"VariableDeclaration","scope":13951,"src":"45902:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13945,"name":"uint256","nodeType":"ElementaryTypeName","src":"45902:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13948,"mutability":"mutable","name":"maxDelta","nameLocation":"45925:8:16","nodeType":"VariableDeclaration","scope":13951,"src":"45917:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13947,"name":"uint256","nodeType":"ElementaryTypeName","src":"45917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45887:47:16"},"returnParameters":{"id":13950,"nodeType":"ParameterList","parameters":[],"src":"45948:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13963,"nodeType":"FunctionDefinition","src":"46115:111:16","nodes":[],"documentation":{"id":13952,"nodeType":"StructuredDocumentation","src":"45955:155:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46124:17:16","parameters":{"id":13961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13954,"mutability":"mutable","name":"left","nameLocation":"46150:4:16","nodeType":"VariableDeclaration","scope":13963,"src":"46142:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13953,"name":"uint256","nodeType":"ElementaryTypeName","src":"46142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13956,"mutability":"mutable","name":"right","nameLocation":"46164:5:16","nodeType":"VariableDeclaration","scope":13963,"src":"46156:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13955,"name":"uint256","nodeType":"ElementaryTypeName","src":"46156:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13958,"mutability":"mutable","name":"maxDelta","nameLocation":"46179:8:16","nodeType":"VariableDeclaration","scope":13963,"src":"46171:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13957,"name":"uint256","nodeType":"ElementaryTypeName","src":"46171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13960,"mutability":"mutable","name":"error","nameLocation":"46205:5:16","nodeType":"VariableDeclaration","scope":13963,"src":"46189:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13959,"name":"string","nodeType":"ElementaryTypeName","src":"46189:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46141:70:16"},"returnParameters":{"id":13962,"nodeType":"ParameterList","parameters":[],"src":"46225:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13973,"nodeType":"FunctionDefinition","src":"46329:86:16","nodes":[],"documentation":{"id":13964,"nodeType":"StructuredDocumentation","src":"46232:92:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46338:17:16","parameters":{"id":13971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13966,"mutability":"mutable","name":"left","nameLocation":"46363:4:16","nodeType":"VariableDeclaration","scope":13973,"src":"46356:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13965,"name":"int256","nodeType":"ElementaryTypeName","src":"46356:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13968,"mutability":"mutable","name":"right","nameLocation":"46376:5:16","nodeType":"VariableDeclaration","scope":13973,"src":"46369:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13967,"name":"int256","nodeType":"ElementaryTypeName","src":"46369:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13970,"mutability":"mutable","name":"maxDelta","nameLocation":"46391:8:16","nodeType":"VariableDeclaration","scope":13973,"src":"46383:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13969,"name":"uint256","nodeType":"ElementaryTypeName","src":"46383:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46355:45:16"},"returnParameters":{"id":13972,"nodeType":"ParameterList","parameters":[],"src":"46414:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13985,"nodeType":"FunctionDefinition","src":"46580:109:16","nodes":[],"documentation":{"id":13974,"nodeType":"StructuredDocumentation","src":"46421:154:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46589:17:16","parameters":{"id":13983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13976,"mutability":"mutable","name":"left","nameLocation":"46614:4:16","nodeType":"VariableDeclaration","scope":13985,"src":"46607:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13975,"name":"int256","nodeType":"ElementaryTypeName","src":"46607:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13978,"mutability":"mutable","name":"right","nameLocation":"46627:5:16","nodeType":"VariableDeclaration","scope":13985,"src":"46620:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13977,"name":"int256","nodeType":"ElementaryTypeName","src":"46620:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13980,"mutability":"mutable","name":"maxDelta","nameLocation":"46642:8:16","nodeType":"VariableDeclaration","scope":13985,"src":"46634:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13979,"name":"uint256","nodeType":"ElementaryTypeName","src":"46634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13982,"mutability":"mutable","name":"error","nameLocation":"46668:5:16","nodeType":"VariableDeclaration","scope":13985,"src":"46652:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13981,"name":"string","nodeType":"ElementaryTypeName","src":"46652:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46606:68:16"},"returnParameters":{"id":13984,"nodeType":"ParameterList","parameters":[],"src":"46688:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13997,"nodeType":"FunctionDefinition","src":"46960:136:16","nodes":[],"documentation":{"id":13986,"nodeType":"StructuredDocumentation","src":"46695:260:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"46969:24:16","parameters":{"id":13995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13988,"mutability":"mutable","name":"left","nameLocation":"47002:4:16","nodeType":"VariableDeclaration","scope":13997,"src":"46994:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13987,"name":"uint256","nodeType":"ElementaryTypeName","src":"46994:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13990,"mutability":"mutable","name":"right","nameLocation":"47016:5:16","nodeType":"VariableDeclaration","scope":13997,"src":"47008:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13989,"name":"uint256","nodeType":"ElementaryTypeName","src":"47008:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13992,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47031:15:16","nodeType":"VariableDeclaration","scope":13997,"src":"47023:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13991,"name":"uint256","nodeType":"ElementaryTypeName","src":"47023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13994,"mutability":"mutable","name":"decimals","nameLocation":"47056:8:16","nodeType":"VariableDeclaration","scope":13997,"src":"47048:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13993,"name":"uint256","nodeType":"ElementaryTypeName","src":"47048:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46993:72:16"},"returnParameters":{"id":13996,"nodeType":"ParameterList","parameters":[],"src":"47095:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14011,"nodeType":"FunctionDefinition","src":"47421:189:16","nodes":[],"documentation":{"id":13998,"nodeType":"StructuredDocumentation","src":"47102:314:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"47430:24:16","parameters":{"id":14009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14000,"mutability":"mutable","name":"left","nameLocation":"47472:4:16","nodeType":"VariableDeclaration","scope":14011,"src":"47464:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13999,"name":"uint256","nodeType":"ElementaryTypeName","src":"47464:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14002,"mutability":"mutable","name":"right","nameLocation":"47494:5:16","nodeType":"VariableDeclaration","scope":14011,"src":"47486:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14001,"name":"uint256","nodeType":"ElementaryTypeName","src":"47486:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14004,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47517:15:16","nodeType":"VariableDeclaration","scope":14011,"src":"47509:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14003,"name":"uint256","nodeType":"ElementaryTypeName","src":"47509:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14006,"mutability":"mutable","name":"decimals","nameLocation":"47550:8:16","nodeType":"VariableDeclaration","scope":14011,"src":"47542:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14005,"name":"uint256","nodeType":"ElementaryTypeName","src":"47542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14008,"mutability":"mutable","name":"error","nameLocation":"47584:5:16","nodeType":"VariableDeclaration","scope":14011,"src":"47568:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14007,"name":"string","nodeType":"ElementaryTypeName","src":"47568:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47454:141:16"},"returnParameters":{"id":14010,"nodeType":"ParameterList","parameters":[],"src":"47609:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14023,"nodeType":"FunctionDefinition","src":"47880:134:16","nodes":[],"documentation":{"id":14012,"nodeType":"StructuredDocumentation","src":"47616:259:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"47889:24:16","parameters":{"id":14021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14014,"mutability":"mutable","name":"left","nameLocation":"47921:4:16","nodeType":"VariableDeclaration","scope":14023,"src":"47914:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14013,"name":"int256","nodeType":"ElementaryTypeName","src":"47914:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14016,"mutability":"mutable","name":"right","nameLocation":"47934:5:16","nodeType":"VariableDeclaration","scope":14023,"src":"47927:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14015,"name":"int256","nodeType":"ElementaryTypeName","src":"47927:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14018,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47949:15:16","nodeType":"VariableDeclaration","scope":14023,"src":"47941:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14017,"name":"uint256","nodeType":"ElementaryTypeName","src":"47941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14020,"mutability":"mutable","name":"decimals","nameLocation":"47974:8:16","nodeType":"VariableDeclaration","scope":14023,"src":"47966:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14019,"name":"uint256","nodeType":"ElementaryTypeName","src":"47966:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47913:70:16"},"returnParameters":{"id":14022,"nodeType":"ParameterList","parameters":[],"src":"48013:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14037,"nodeType":"FunctionDefinition","src":"48338:187:16","nodes":[],"documentation":{"id":14024,"nodeType":"StructuredDocumentation","src":"48020:313:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"48347:24:16","parameters":{"id":14035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14026,"mutability":"mutable","name":"left","nameLocation":"48388:4:16","nodeType":"VariableDeclaration","scope":14037,"src":"48381:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14025,"name":"int256","nodeType":"ElementaryTypeName","src":"48381:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14028,"mutability":"mutable","name":"right","nameLocation":"48409:5:16","nodeType":"VariableDeclaration","scope":14037,"src":"48402:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14027,"name":"int256","nodeType":"ElementaryTypeName","src":"48402:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14030,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48432:15:16","nodeType":"VariableDeclaration","scope":14037,"src":"48424:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14029,"name":"uint256","nodeType":"ElementaryTypeName","src":"48424:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14032,"mutability":"mutable","name":"decimals","nameLocation":"48465:8:16","nodeType":"VariableDeclaration","scope":14037,"src":"48457:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14031,"name":"uint256","nodeType":"ElementaryTypeName","src":"48457:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14034,"mutability":"mutable","name":"error","nameLocation":"48499:5:16","nodeType":"VariableDeclaration","scope":14037,"src":"48483:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14033,"name":"string","nodeType":"ElementaryTypeName","src":"48483:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48371:139:16"},"returnParameters":{"id":14036,"nodeType":"ParameterList","parameters":[],"src":"48524:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14047,"nodeType":"FunctionDefinition","src":"48739:95:16","nodes":[],"documentation":{"id":14038,"nodeType":"StructuredDocumentation","src":"48531:203:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"48748:17:16","parameters":{"id":14045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14040,"mutability":"mutable","name":"left","nameLocation":"48774:4:16","nodeType":"VariableDeclaration","scope":14047,"src":"48766:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14039,"name":"uint256","nodeType":"ElementaryTypeName","src":"48766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14042,"mutability":"mutable","name":"right","nameLocation":"48788:5:16","nodeType":"VariableDeclaration","scope":14047,"src":"48780:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14041,"name":"uint256","nodeType":"ElementaryTypeName","src":"48780:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14044,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48803:15:16","nodeType":"VariableDeclaration","scope":14047,"src":"48795:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14043,"name":"uint256","nodeType":"ElementaryTypeName","src":"48795:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48765:54:16"},"returnParameters":{"id":14046,"nodeType":"ParameterList","parameters":[],"src":"48833:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14059,"nodeType":"FunctionDefinition","src":"49110:134:16","nodes":[],"documentation":{"id":14048,"nodeType":"StructuredDocumentation","src":"48840:265:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49119:17:16","parameters":{"id":14057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14050,"mutability":"mutable","name":"left","nameLocation":"49145:4:16","nodeType":"VariableDeclaration","scope":14059,"src":"49137:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14049,"name":"uint256","nodeType":"ElementaryTypeName","src":"49137:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14052,"mutability":"mutable","name":"right","nameLocation":"49159:5:16","nodeType":"VariableDeclaration","scope":14059,"src":"49151:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14051,"name":"uint256","nodeType":"ElementaryTypeName","src":"49151:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14054,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49174:15:16","nodeType":"VariableDeclaration","scope":14059,"src":"49166:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14053,"name":"uint256","nodeType":"ElementaryTypeName","src":"49166:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14056,"mutability":"mutable","name":"error","nameLocation":"49207:5:16","nodeType":"VariableDeclaration","scope":14059,"src":"49191:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14055,"name":"string","nodeType":"ElementaryTypeName","src":"49191:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49136:77:16"},"returnParameters":{"id":14058,"nodeType":"ParameterList","parameters":[],"src":"49243:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14069,"nodeType":"FunctionDefinition","src":"49457:93:16","nodes":[],"documentation":{"id":14060,"nodeType":"StructuredDocumentation","src":"49250:202:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49466:17:16","parameters":{"id":14067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14062,"mutability":"mutable","name":"left","nameLocation":"49491:4:16","nodeType":"VariableDeclaration","scope":14069,"src":"49484:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14061,"name":"int256","nodeType":"ElementaryTypeName","src":"49484:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14064,"mutability":"mutable","name":"right","nameLocation":"49504:5:16","nodeType":"VariableDeclaration","scope":14069,"src":"49497:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14063,"name":"int256","nodeType":"ElementaryTypeName","src":"49497:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14066,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49519:15:16","nodeType":"VariableDeclaration","scope":14069,"src":"49511:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14065,"name":"uint256","nodeType":"ElementaryTypeName","src":"49511:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49483:52:16"},"returnParameters":{"id":14068,"nodeType":"ParameterList","parameters":[],"src":"49549:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14081,"nodeType":"FunctionDefinition","src":"49825:132:16","nodes":[],"documentation":{"id":14070,"nodeType":"StructuredDocumentation","src":"49556:264:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49834:17:16","parameters":{"id":14079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14072,"mutability":"mutable","name":"left","nameLocation":"49859:4:16","nodeType":"VariableDeclaration","scope":14081,"src":"49852:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14071,"name":"int256","nodeType":"ElementaryTypeName","src":"49852:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14074,"mutability":"mutable","name":"right","nameLocation":"49872:5:16","nodeType":"VariableDeclaration","scope":14081,"src":"49865:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14073,"name":"int256","nodeType":"ElementaryTypeName","src":"49865:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14076,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49887:15:16","nodeType":"VariableDeclaration","scope":14081,"src":"49879:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14075,"name":"uint256","nodeType":"ElementaryTypeName","src":"49879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14078,"mutability":"mutable","name":"error","nameLocation":"49920:5:16","nodeType":"VariableDeclaration","scope":14081,"src":"49904:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14077,"name":"string","nodeType":"ElementaryTypeName","src":"49904:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49851:75:16"},"returnParameters":{"id":14080,"nodeType":"ParameterList","parameters":[],"src":"49956:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14091,"nodeType":"FunctionDefinition","src":"50066:86:16","nodes":[],"documentation":{"id":14082,"nodeType":"StructuredDocumentation","src":"49963:98:16","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50075:15:16","parameters":{"id":14089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14084,"mutability":"mutable","name":"left","nameLocation":"50099:4:16","nodeType":"VariableDeclaration","scope":14091,"src":"50091:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14083,"name":"uint256","nodeType":"ElementaryTypeName","src":"50091:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14086,"mutability":"mutable","name":"right","nameLocation":"50113:5:16","nodeType":"VariableDeclaration","scope":14091,"src":"50105:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14085,"name":"uint256","nodeType":"ElementaryTypeName","src":"50105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14088,"mutability":"mutable","name":"decimals","nameLocation":"50128:8:16","nodeType":"VariableDeclaration","scope":14091,"src":"50120:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14087,"name":"uint256","nodeType":"ElementaryTypeName","src":"50120:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50090:47:16"},"returnParameters":{"id":14090,"nodeType":"ParameterList","parameters":[],"src":"50151:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14103,"nodeType":"FunctionDefinition","src":"50323:109:16","nodes":[],"documentation":{"id":14092,"nodeType":"StructuredDocumentation","src":"50158:160:16","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50332:15:16","parameters":{"id":14101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14094,"mutability":"mutable","name":"left","nameLocation":"50356:4:16","nodeType":"VariableDeclaration","scope":14103,"src":"50348:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14093,"name":"uint256","nodeType":"ElementaryTypeName","src":"50348:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14096,"mutability":"mutable","name":"right","nameLocation":"50370:5:16","nodeType":"VariableDeclaration","scope":14103,"src":"50362:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14095,"name":"uint256","nodeType":"ElementaryTypeName","src":"50362:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14098,"mutability":"mutable","name":"decimals","nameLocation":"50385:8:16","nodeType":"VariableDeclaration","scope":14103,"src":"50377:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14097,"name":"uint256","nodeType":"ElementaryTypeName","src":"50377:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14100,"mutability":"mutable","name":"error","nameLocation":"50411:5:16","nodeType":"VariableDeclaration","scope":14103,"src":"50395:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14099,"name":"string","nodeType":"ElementaryTypeName","src":"50395:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50347:70:16"},"returnParameters":{"id":14102,"nodeType":"ParameterList","parameters":[],"src":"50431:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14113,"nodeType":"FunctionDefinition","src":"50540:84:16","nodes":[],"documentation":{"id":14104,"nodeType":"StructuredDocumentation","src":"50438:97:16","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50549:15:16","parameters":{"id":14111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14106,"mutability":"mutable","name":"left","nameLocation":"50572:4:16","nodeType":"VariableDeclaration","scope":14113,"src":"50565:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14105,"name":"int256","nodeType":"ElementaryTypeName","src":"50565:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14108,"mutability":"mutable","name":"right","nameLocation":"50585:5:16","nodeType":"VariableDeclaration","scope":14113,"src":"50578:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14107,"name":"int256","nodeType":"ElementaryTypeName","src":"50578:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14110,"mutability":"mutable","name":"decimals","nameLocation":"50600:8:16","nodeType":"VariableDeclaration","scope":14113,"src":"50592:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14109,"name":"uint256","nodeType":"ElementaryTypeName","src":"50592:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50564:45:16"},"returnParameters":{"id":14112,"nodeType":"ParameterList","parameters":[],"src":"50623:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14125,"nodeType":"FunctionDefinition","src":"50794:107:16","nodes":[],"documentation":{"id":14114,"nodeType":"StructuredDocumentation","src":"50630:159:16","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50803:15:16","parameters":{"id":14123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14116,"mutability":"mutable","name":"left","nameLocation":"50826:4:16","nodeType":"VariableDeclaration","scope":14125,"src":"50819:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14115,"name":"int256","nodeType":"ElementaryTypeName","src":"50819:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14118,"mutability":"mutable","name":"right","nameLocation":"50839:5:16","nodeType":"VariableDeclaration","scope":14125,"src":"50832:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14117,"name":"int256","nodeType":"ElementaryTypeName","src":"50832:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14120,"mutability":"mutable","name":"decimals","nameLocation":"50854:8:16","nodeType":"VariableDeclaration","scope":14125,"src":"50846:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14119,"name":"uint256","nodeType":"ElementaryTypeName","src":"50846:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14122,"mutability":"mutable","name":"error","nameLocation":"50880:5:16","nodeType":"VariableDeclaration","scope":14125,"src":"50864:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14121,"name":"string","nodeType":"ElementaryTypeName","src":"50864:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50818:68:16"},"returnParameters":{"id":14124,"nodeType":"ParameterList","parameters":[],"src":"50900:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14133,"nodeType":"FunctionDefinition","src":"50957:55:16","nodes":[],"documentation":{"id":14126,"nodeType":"StructuredDocumentation","src":"50907:45:16","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50966:8:16","parameters":{"id":14131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14128,"mutability":"mutable","name":"left","nameLocation":"50980:4:16","nodeType":"VariableDeclaration","scope":14133,"src":"50975:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14127,"name":"bool","nodeType":"ElementaryTypeName","src":"50975:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14130,"mutability":"mutable","name":"right","nameLocation":"50991:5:16","nodeType":"VariableDeclaration","scope":14133,"src":"50986:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14129,"name":"bool","nodeType":"ElementaryTypeName","src":"50986:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"50974:23:16"},"returnParameters":{"id":14132,"nodeType":"ParameterList","parameters":[],"src":"51011:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14143,"nodeType":"FunctionDefinition","src":"51125:78:16","nodes":[],"documentation":{"id":14134,"nodeType":"StructuredDocumentation","src":"51018:102:16","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51134:8:16","parameters":{"id":14141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14136,"mutability":"mutable","name":"left","nameLocation":"51148:4:16","nodeType":"VariableDeclaration","scope":14143,"src":"51143:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14135,"name":"bool","nodeType":"ElementaryTypeName","src":"51143:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14138,"mutability":"mutable","name":"right","nameLocation":"51159:5:16","nodeType":"VariableDeclaration","scope":14143,"src":"51154:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14137,"name":"bool","nodeType":"ElementaryTypeName","src":"51154:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14140,"mutability":"mutable","name":"error","nameLocation":"51182:5:16","nodeType":"VariableDeclaration","scope":14143,"src":"51166:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14139,"name":"string","nodeType":"ElementaryTypeName","src":"51166:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51142:46:16"},"returnParameters":{"id":14142,"nodeType":"ParameterList","parameters":[],"src":"51202:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14151,"nodeType":"FunctionDefinition","src":"51261:77:16","nodes":[],"documentation":{"id":14144,"nodeType":"StructuredDocumentation","src":"51209:47:16","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51270:8:16","parameters":{"id":14149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14146,"mutability":"mutable","name":"left","nameLocation":"51295:4:16","nodeType":"VariableDeclaration","scope":14151,"src":"51279:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14145,"name":"string","nodeType":"ElementaryTypeName","src":"51279:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14148,"mutability":"mutable","name":"right","nameLocation":"51317:5:16","nodeType":"VariableDeclaration","scope":14151,"src":"51301:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14147,"name":"string","nodeType":"ElementaryTypeName","src":"51301:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51278:45:16"},"returnParameters":{"id":14150,"nodeType":"ParameterList","parameters":[],"src":"51337:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14161,"nodeType":"FunctionDefinition","src":"51453:100:16","nodes":[],"documentation":{"id":14152,"nodeType":"StructuredDocumentation","src":"51344:104:16","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51462:8:16","parameters":{"id":14159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14154,"mutability":"mutable","name":"left","nameLocation":"51487:4:16","nodeType":"VariableDeclaration","scope":14161,"src":"51471:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14153,"name":"string","nodeType":"ElementaryTypeName","src":"51471:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14156,"mutability":"mutable","name":"right","nameLocation":"51509:5:16","nodeType":"VariableDeclaration","scope":14161,"src":"51493:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14155,"name":"string","nodeType":"ElementaryTypeName","src":"51493:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14158,"mutability":"mutable","name":"error","nameLocation":"51532:5:16","nodeType":"VariableDeclaration","scope":14161,"src":"51516:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14157,"name":"string","nodeType":"ElementaryTypeName","src":"51516:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51470:68:16"},"returnParameters":{"id":14160,"nodeType":"ParameterList","parameters":[],"src":"51552:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14169,"nodeType":"FunctionDefinition","src":"51610:75:16","nodes":[],"documentation":{"id":14162,"nodeType":"StructuredDocumentation","src":"51559:46:16","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51619:8:16","parameters":{"id":14167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14164,"mutability":"mutable","name":"left","nameLocation":"51643:4:16","nodeType":"VariableDeclaration","scope":14169,"src":"51628:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14163,"name":"bytes","nodeType":"ElementaryTypeName","src":"51628:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14166,"mutability":"mutable","name":"right","nameLocation":"51664:5:16","nodeType":"VariableDeclaration","scope":14169,"src":"51649:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14165,"name":"bytes","nodeType":"ElementaryTypeName","src":"51649:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51627:43:16"},"returnParameters":{"id":14168,"nodeType":"ParameterList","parameters":[],"src":"51684:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14179,"nodeType":"FunctionDefinition","src":"51799:98:16","nodes":[],"documentation":{"id":14170,"nodeType":"StructuredDocumentation","src":"51691:103:16","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51808:8:16","parameters":{"id":14177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14172,"mutability":"mutable","name":"left","nameLocation":"51832:4:16","nodeType":"VariableDeclaration","scope":14179,"src":"51817:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14171,"name":"bytes","nodeType":"ElementaryTypeName","src":"51817:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14174,"mutability":"mutable","name":"right","nameLocation":"51853:5:16","nodeType":"VariableDeclaration","scope":14179,"src":"51838:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14173,"name":"bytes","nodeType":"ElementaryTypeName","src":"51838:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14176,"mutability":"mutable","name":"error","nameLocation":"51876:5:16","nodeType":"VariableDeclaration","scope":14179,"src":"51860:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14175,"name":"string","nodeType":"ElementaryTypeName","src":"51860:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51816:66:16"},"returnParameters":{"id":14178,"nodeType":"ParameterList","parameters":[],"src":"51896:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14189,"nodeType":"FunctionDefinition","src":"51963:77:16","nodes":[],"documentation":{"id":14180,"nodeType":"StructuredDocumentation","src":"51903:55:16","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51972:8:16","parameters":{"id":14187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14183,"mutability":"mutable","name":"left","nameLocation":"51997:4:16","nodeType":"VariableDeclaration","scope":14189,"src":"51981:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14181,"name":"bool","nodeType":"ElementaryTypeName","src":"51981:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14182,"nodeType":"ArrayTypeName","src":"51981:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14186,"mutability":"mutable","name":"right","nameLocation":"52019:5:16","nodeType":"VariableDeclaration","scope":14189,"src":"52003:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14184,"name":"bool","nodeType":"ElementaryTypeName","src":"52003:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14185,"nodeType":"ArrayTypeName","src":"52003:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"51980:45:16"},"returnParameters":{"id":14188,"nodeType":"ParameterList","parameters":[],"src":"52039:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14201,"nodeType":"FunctionDefinition","src":"52163:100:16","nodes":[],"documentation":{"id":14190,"nodeType":"StructuredDocumentation","src":"52046:112:16","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52172:8:16","parameters":{"id":14199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14193,"mutability":"mutable","name":"left","nameLocation":"52197:4:16","nodeType":"VariableDeclaration","scope":14201,"src":"52181:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14191,"name":"bool","nodeType":"ElementaryTypeName","src":"52181:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14192,"nodeType":"ArrayTypeName","src":"52181:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14196,"mutability":"mutable","name":"right","nameLocation":"52219:5:16","nodeType":"VariableDeclaration","scope":14201,"src":"52203:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14194,"name":"bool","nodeType":"ElementaryTypeName","src":"52203:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14195,"nodeType":"ArrayTypeName","src":"52203:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14198,"mutability":"mutable","name":"error","nameLocation":"52242:5:16","nodeType":"VariableDeclaration","scope":14201,"src":"52226:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14197,"name":"string","nodeType":"ElementaryTypeName","src":"52226:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52180:68:16"},"returnParameters":{"id":14200,"nodeType":"ParameterList","parameters":[],"src":"52262:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14211,"nodeType":"FunctionDefinition","src":"52331:83:16","nodes":[],"documentation":{"id":14202,"nodeType":"StructuredDocumentation","src":"52269:57:16","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52340:8:16","parameters":{"id":14209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14205,"mutability":"mutable","name":"left","nameLocation":"52368:4:16","nodeType":"VariableDeclaration","scope":14211,"src":"52349:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14203,"name":"uint256","nodeType":"ElementaryTypeName","src":"52349:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14204,"nodeType":"ArrayTypeName","src":"52349:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14208,"mutability":"mutable","name":"right","nameLocation":"52393:5:16","nodeType":"VariableDeclaration","scope":14211,"src":"52374:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14206,"name":"uint256","nodeType":"ElementaryTypeName","src":"52374:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14207,"nodeType":"ArrayTypeName","src":"52374:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"52348:51:16"},"returnParameters":{"id":14210,"nodeType":"ParameterList","parameters":[],"src":"52413:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14223,"nodeType":"FunctionDefinition","src":"52540:106:16","nodes":[],"documentation":{"id":14212,"nodeType":"StructuredDocumentation","src":"52420:115:16","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52549:8:16","parameters":{"id":14221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14215,"mutability":"mutable","name":"left","nameLocation":"52577:4:16","nodeType":"VariableDeclaration","scope":14223,"src":"52558:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14213,"name":"uint256","nodeType":"ElementaryTypeName","src":"52558:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14214,"nodeType":"ArrayTypeName","src":"52558:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14218,"mutability":"mutable","name":"right","nameLocation":"52602:5:16","nodeType":"VariableDeclaration","scope":14223,"src":"52583:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14216,"name":"uint256","nodeType":"ElementaryTypeName","src":"52583:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14217,"nodeType":"ArrayTypeName","src":"52583:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14220,"mutability":"mutable","name":"error","nameLocation":"52625:5:16","nodeType":"VariableDeclaration","scope":14223,"src":"52609:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14219,"name":"string","nodeType":"ElementaryTypeName","src":"52609:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52557:74:16"},"returnParameters":{"id":14222,"nodeType":"ParameterList","parameters":[],"src":"52645:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14233,"nodeType":"FunctionDefinition","src":"52714:81:16","nodes":[],"documentation":{"id":14224,"nodeType":"StructuredDocumentation","src":"52652:57:16","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52723:8:16","parameters":{"id":14231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14227,"mutability":"mutable","name":"left","nameLocation":"52750:4:16","nodeType":"VariableDeclaration","scope":14233,"src":"52732:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14225,"name":"int256","nodeType":"ElementaryTypeName","src":"52732:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14226,"nodeType":"ArrayTypeName","src":"52732:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14230,"mutability":"mutable","name":"right","nameLocation":"52774:5:16","nodeType":"VariableDeclaration","scope":14233,"src":"52756:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14228,"name":"int256","nodeType":"ElementaryTypeName","src":"52756:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14229,"nodeType":"ArrayTypeName","src":"52756:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"52731:49:16"},"returnParameters":{"id":14232,"nodeType":"ParameterList","parameters":[],"src":"52794:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14245,"nodeType":"FunctionDefinition","src":"52920:104:16","nodes":[],"documentation":{"id":14234,"nodeType":"StructuredDocumentation","src":"52801:114:16","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52929:8:16","parameters":{"id":14243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14237,"mutability":"mutable","name":"left","nameLocation":"52956:4:16","nodeType":"VariableDeclaration","scope":14245,"src":"52938:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14235,"name":"int256","nodeType":"ElementaryTypeName","src":"52938:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14236,"nodeType":"ArrayTypeName","src":"52938:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14240,"mutability":"mutable","name":"right","nameLocation":"52980:5:16","nodeType":"VariableDeclaration","scope":14245,"src":"52962:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14238,"name":"int256","nodeType":"ElementaryTypeName","src":"52962:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14239,"nodeType":"ArrayTypeName","src":"52962:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14242,"mutability":"mutable","name":"error","nameLocation":"53003:5:16","nodeType":"VariableDeclaration","scope":14245,"src":"52987:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14241,"name":"string","nodeType":"ElementaryTypeName","src":"52987:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52937:72:16"},"returnParameters":{"id":14244,"nodeType":"ParameterList","parameters":[],"src":"53023:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14253,"nodeType":"FunctionDefinition","src":"53083:61:16","nodes":[],"documentation":{"id":14246,"nodeType":"StructuredDocumentation","src":"53030:48:16","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53092:8:16","parameters":{"id":14251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14248,"mutability":"mutable","name":"left","nameLocation":"53109:4:16","nodeType":"VariableDeclaration","scope":14253,"src":"53101:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14247,"name":"uint256","nodeType":"ElementaryTypeName","src":"53101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14250,"mutability":"mutable","name":"right","nameLocation":"53123:5:16","nodeType":"VariableDeclaration","scope":14253,"src":"53115:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14249,"name":"uint256","nodeType":"ElementaryTypeName","src":"53115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53100:29:16"},"returnParameters":{"id":14252,"nodeType":"ParameterList","parameters":[],"src":"53143:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14263,"nodeType":"FunctionDefinition","src":"53213:83:16","nodes":[],"documentation":{"id":14254,"nodeType":"StructuredDocumentation","src":"53150:58:16","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53222:8:16","parameters":{"id":14261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14257,"mutability":"mutable","name":"left","nameLocation":"53250:4:16","nodeType":"VariableDeclaration","scope":14263,"src":"53231:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14255,"name":"address","nodeType":"ElementaryTypeName","src":"53231:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14256,"nodeType":"ArrayTypeName","src":"53231:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14260,"mutability":"mutable","name":"right","nameLocation":"53275:5:16","nodeType":"VariableDeclaration","scope":14263,"src":"53256:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14258,"name":"address","nodeType":"ElementaryTypeName","src":"53256:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14259,"nodeType":"ArrayTypeName","src":"53256:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"53230:51:16"},"returnParameters":{"id":14262,"nodeType":"ParameterList","parameters":[],"src":"53295:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14275,"nodeType":"FunctionDefinition","src":"53422:106:16","nodes":[],"documentation":{"id":14264,"nodeType":"StructuredDocumentation","src":"53302:115:16","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53431:8:16","parameters":{"id":14273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14267,"mutability":"mutable","name":"left","nameLocation":"53459:4:16","nodeType":"VariableDeclaration","scope":14275,"src":"53440:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14265,"name":"address","nodeType":"ElementaryTypeName","src":"53440:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14266,"nodeType":"ArrayTypeName","src":"53440:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14270,"mutability":"mutable","name":"right","nameLocation":"53484:5:16","nodeType":"VariableDeclaration","scope":14275,"src":"53465:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14268,"name":"address","nodeType":"ElementaryTypeName","src":"53465:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14269,"nodeType":"ArrayTypeName","src":"53465:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14272,"mutability":"mutable","name":"error","nameLocation":"53507:5:16","nodeType":"VariableDeclaration","scope":14275,"src":"53491:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14271,"name":"string","nodeType":"ElementaryTypeName","src":"53491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53439:74:16"},"returnParameters":{"id":14274,"nodeType":"ParameterList","parameters":[],"src":"53527:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14285,"nodeType":"FunctionDefinition","src":"53597:83:16","nodes":[],"documentation":{"id":14276,"nodeType":"StructuredDocumentation","src":"53534:58:16","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53606:8:16","parameters":{"id":14283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14279,"mutability":"mutable","name":"left","nameLocation":"53634:4:16","nodeType":"VariableDeclaration","scope":14285,"src":"53615:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14278,"nodeType":"ArrayTypeName","src":"53615:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14282,"mutability":"mutable","name":"right","nameLocation":"53659:5:16","nodeType":"VariableDeclaration","scope":14285,"src":"53640:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53640:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14281,"nodeType":"ArrayTypeName","src":"53640:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"53614:51:16"},"returnParameters":{"id":14284,"nodeType":"ParameterList","parameters":[],"src":"53679:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14297,"nodeType":"FunctionDefinition","src":"53806:106:16","nodes":[],"documentation":{"id":14286,"nodeType":"StructuredDocumentation","src":"53686:115:16","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53815:8:16","parameters":{"id":14295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14289,"mutability":"mutable","name":"left","nameLocation":"53843:4:16","nodeType":"VariableDeclaration","scope":14297,"src":"53824:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53824:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14288,"nodeType":"ArrayTypeName","src":"53824:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14292,"mutability":"mutable","name":"right","nameLocation":"53868:5:16","nodeType":"VariableDeclaration","scope":14297,"src":"53849:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53849:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14291,"nodeType":"ArrayTypeName","src":"53849:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14294,"mutability":"mutable","name":"error","nameLocation":"53891:5:16","nodeType":"VariableDeclaration","scope":14297,"src":"53875:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14293,"name":"string","nodeType":"ElementaryTypeName","src":"53875:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53823:74:16"},"returnParameters":{"id":14296,"nodeType":"ParameterList","parameters":[],"src":"53911:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14307,"nodeType":"FunctionDefinition","src":"53980:81:16","nodes":[],"documentation":{"id":14298,"nodeType":"StructuredDocumentation","src":"53918:57:16","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53989:8:16","parameters":{"id":14305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14301,"mutability":"mutable","name":"left","nameLocation":"54016:4:16","nodeType":"VariableDeclaration","scope":14307,"src":"53998:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14299,"name":"string","nodeType":"ElementaryTypeName","src":"53998:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14300,"nodeType":"ArrayTypeName","src":"53998:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14304,"mutability":"mutable","name":"right","nameLocation":"54040:5:16","nodeType":"VariableDeclaration","scope":14307,"src":"54022:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14302,"name":"string","nodeType":"ElementaryTypeName","src":"54022:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14303,"nodeType":"ArrayTypeName","src":"54022:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"53997:49:16"},"returnParameters":{"id":14306,"nodeType":"ParameterList","parameters":[],"src":"54060:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14319,"nodeType":"FunctionDefinition","src":"54186:104:16","nodes":[],"documentation":{"id":14308,"nodeType":"StructuredDocumentation","src":"54067:114:16","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54195:8:16","parameters":{"id":14317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14311,"mutability":"mutable","name":"left","nameLocation":"54222:4:16","nodeType":"VariableDeclaration","scope":14319,"src":"54204:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14309,"name":"string","nodeType":"ElementaryTypeName","src":"54204:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14310,"nodeType":"ArrayTypeName","src":"54204:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14314,"mutability":"mutable","name":"right","nameLocation":"54246:5:16","nodeType":"VariableDeclaration","scope":14319,"src":"54228:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14312,"name":"string","nodeType":"ElementaryTypeName","src":"54228:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14313,"nodeType":"ArrayTypeName","src":"54228:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14316,"mutability":"mutable","name":"error","nameLocation":"54269:5:16","nodeType":"VariableDeclaration","scope":14319,"src":"54253:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14315,"name":"string","nodeType":"ElementaryTypeName","src":"54253:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54203:72:16"},"returnParameters":{"id":14318,"nodeType":"ParameterList","parameters":[],"src":"54289:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14329,"nodeType":"FunctionDefinition","src":"54357:79:16","nodes":[],"documentation":{"id":14320,"nodeType":"StructuredDocumentation","src":"54296:56:16","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54366:8:16","parameters":{"id":14327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14323,"mutability":"mutable","name":"left","nameLocation":"54392:4:16","nodeType":"VariableDeclaration","scope":14329,"src":"54375:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14321,"name":"bytes","nodeType":"ElementaryTypeName","src":"54375:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14322,"nodeType":"ArrayTypeName","src":"54375:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14326,"mutability":"mutable","name":"right","nameLocation":"54415:5:16","nodeType":"VariableDeclaration","scope":14329,"src":"54398:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14324,"name":"bytes","nodeType":"ElementaryTypeName","src":"54398:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14325,"nodeType":"ArrayTypeName","src":"54398:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"54374:47:16"},"returnParameters":{"id":14328,"nodeType":"ParameterList","parameters":[],"src":"54435:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14341,"nodeType":"FunctionDefinition","src":"54560:102:16","nodes":[],"documentation":{"id":14330,"nodeType":"StructuredDocumentation","src":"54442:113:16","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54569:8:16","parameters":{"id":14339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14333,"mutability":"mutable","name":"left","nameLocation":"54595:4:16","nodeType":"VariableDeclaration","scope":14341,"src":"54578:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14331,"name":"bytes","nodeType":"ElementaryTypeName","src":"54578:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14332,"nodeType":"ArrayTypeName","src":"54578:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14336,"mutability":"mutable","name":"right","nameLocation":"54618:5:16","nodeType":"VariableDeclaration","scope":14341,"src":"54601:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14334,"name":"bytes","nodeType":"ElementaryTypeName","src":"54601:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14335,"nodeType":"ArrayTypeName","src":"54601:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14338,"mutability":"mutable","name":"error","nameLocation":"54641:5:16","nodeType":"VariableDeclaration","scope":14341,"src":"54625:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14337,"name":"string","nodeType":"ElementaryTypeName","src":"54625:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54577:70:16"},"returnParameters":{"id":14340,"nodeType":"ParameterList","parameters":[],"src":"54661:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14351,"nodeType":"FunctionDefinition","src":"54778:84:16","nodes":[],"documentation":{"id":14342,"nodeType":"StructuredDocumentation","src":"54668:105:16","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54787:8:16","parameters":{"id":14349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14344,"mutability":"mutable","name":"left","nameLocation":"54804:4:16","nodeType":"VariableDeclaration","scope":14351,"src":"54796:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14343,"name":"uint256","nodeType":"ElementaryTypeName","src":"54796:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14346,"mutability":"mutable","name":"right","nameLocation":"54818:5:16","nodeType":"VariableDeclaration","scope":14351,"src":"54810:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14345,"name":"uint256","nodeType":"ElementaryTypeName","src":"54810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14348,"mutability":"mutable","name":"error","nameLocation":"54841:5:16","nodeType":"VariableDeclaration","scope":14351,"src":"54825:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14347,"name":"string","nodeType":"ElementaryTypeName","src":"54825:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54795:52:16"},"returnParameters":{"id":14350,"nodeType":"ParameterList","parameters":[],"src":"54861:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14359,"nodeType":"FunctionDefinition","src":"54920:59:16","nodes":[],"documentation":{"id":14352,"nodeType":"StructuredDocumentation","src":"54868:47:16","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54929:8:16","parameters":{"id":14357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14354,"mutability":"mutable","name":"left","nameLocation":"54945:4:16","nodeType":"VariableDeclaration","scope":14359,"src":"54938:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14353,"name":"int256","nodeType":"ElementaryTypeName","src":"54938:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14356,"mutability":"mutable","name":"right","nameLocation":"54958:5:16","nodeType":"VariableDeclaration","scope":14359,"src":"54951:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14355,"name":"int256","nodeType":"ElementaryTypeName","src":"54951:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"54937:27:16"},"returnParameters":{"id":14358,"nodeType":"ParameterList","parameters":[],"src":"54978:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14369,"nodeType":"FunctionDefinition","src":"55094:82:16","nodes":[],"documentation":{"id":14360,"nodeType":"StructuredDocumentation","src":"54985:104:16","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55103:8:16","parameters":{"id":14367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14362,"mutability":"mutable","name":"left","nameLocation":"55119:4:16","nodeType":"VariableDeclaration","scope":14369,"src":"55112:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14361,"name":"int256","nodeType":"ElementaryTypeName","src":"55112:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14364,"mutability":"mutable","name":"right","nameLocation":"55132:5:16","nodeType":"VariableDeclaration","scope":14369,"src":"55125:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14363,"name":"int256","nodeType":"ElementaryTypeName","src":"55125:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14366,"mutability":"mutable","name":"error","nameLocation":"55155:5:16","nodeType":"VariableDeclaration","scope":14369,"src":"55139:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14365,"name":"string","nodeType":"ElementaryTypeName","src":"55139:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55111:50:16"},"returnParameters":{"id":14368,"nodeType":"ParameterList","parameters":[],"src":"55175:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14377,"nodeType":"FunctionDefinition","src":"55235:61:16","nodes":[],"documentation":{"id":14370,"nodeType":"StructuredDocumentation","src":"55182:48:16","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55244:8:16","parameters":{"id":14375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14372,"mutability":"mutable","name":"left","nameLocation":"55261:4:16","nodeType":"VariableDeclaration","scope":14377,"src":"55253:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14371,"name":"address","nodeType":"ElementaryTypeName","src":"55253:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14374,"mutability":"mutable","name":"right","nameLocation":"55275:5:16","nodeType":"VariableDeclaration","scope":14377,"src":"55267:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14373,"name":"address","nodeType":"ElementaryTypeName","src":"55267:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55252:29:16"},"returnParameters":{"id":14376,"nodeType":"ParameterList","parameters":[],"src":"55295:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14387,"nodeType":"FunctionDefinition","src":"55412:84:16","nodes":[],"documentation":{"id":14378,"nodeType":"StructuredDocumentation","src":"55302:105:16","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55421:8:16","parameters":{"id":14385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14380,"mutability":"mutable","name":"left","nameLocation":"55438:4:16","nodeType":"VariableDeclaration","scope":14387,"src":"55430:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14379,"name":"address","nodeType":"ElementaryTypeName","src":"55430:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14382,"mutability":"mutable","name":"right","nameLocation":"55452:5:16","nodeType":"VariableDeclaration","scope":14387,"src":"55444:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14381,"name":"address","nodeType":"ElementaryTypeName","src":"55444:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14384,"mutability":"mutable","name":"error","nameLocation":"55475:5:16","nodeType":"VariableDeclaration","scope":14387,"src":"55459:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14383,"name":"string","nodeType":"ElementaryTypeName","src":"55459:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55429:52:16"},"returnParameters":{"id":14386,"nodeType":"ParameterList","parameters":[],"src":"55495:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14395,"nodeType":"FunctionDefinition","src":"55555:61:16","nodes":[],"documentation":{"id":14388,"nodeType":"StructuredDocumentation","src":"55502:48:16","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55564:8:16","parameters":{"id":14393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14390,"mutability":"mutable","name":"left","nameLocation":"55581:4:16","nodeType":"VariableDeclaration","scope":14395,"src":"55573:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55573:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14392,"mutability":"mutable","name":"right","nameLocation":"55595:5:16","nodeType":"VariableDeclaration","scope":14395,"src":"55587:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55587:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"55572:29:16"},"returnParameters":{"id":14394,"nodeType":"ParameterList","parameters":[],"src":"55615:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14405,"nodeType":"FunctionDefinition","src":"55732:84:16","nodes":[],"documentation":{"id":14396,"nodeType":"StructuredDocumentation","src":"55622:105:16","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55741:8:16","parameters":{"id":14403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14398,"mutability":"mutable","name":"left","nameLocation":"55758:4:16","nodeType":"VariableDeclaration","scope":14405,"src":"55750:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55750:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14400,"mutability":"mutable","name":"right","nameLocation":"55772:5:16","nodeType":"VariableDeclaration","scope":14405,"src":"55764:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55764:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14402,"mutability":"mutable","name":"error","nameLocation":"55795:5:16","nodeType":"VariableDeclaration","scope":14405,"src":"55779:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14401,"name":"string","nodeType":"ElementaryTypeName","src":"55779:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55749:52:16"},"returnParameters":{"id":14404,"nodeType":"ParameterList","parameters":[],"src":"55815:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14411,"nodeType":"FunctionDefinition","src":"55873:51:16","nodes":[],"documentation":{"id":14406,"nodeType":"StructuredDocumentation","src":"55822:46:16","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"55882:11:16","parameters":{"id":14409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14408,"mutability":"mutable","name":"condition","nameLocation":"55899:9:16","nodeType":"VariableDeclaration","scope":14411,"src":"55894:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14407,"name":"bool","nodeType":"ElementaryTypeName","src":"55894:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55893:16:16"},"returnParameters":{"id":14410,"nodeType":"ParameterList","parameters":[],"src":"55923:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14419,"nodeType":"FunctionDefinition","src":"56038:74:16","nodes":[],"documentation":{"id":14412,"nodeType":"StructuredDocumentation","src":"55930:103:16","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"56047:11:16","parameters":{"id":14417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14414,"mutability":"mutable","name":"condition","nameLocation":"56064:9:16","nodeType":"VariableDeclaration","scope":14419,"src":"56059:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14413,"name":"bool","nodeType":"ElementaryTypeName","src":"56059:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14416,"mutability":"mutable","name":"error","nameLocation":"56091:5:16","nodeType":"VariableDeclaration","scope":14419,"src":"56075:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14415,"name":"string","nodeType":"ElementaryTypeName","src":"56075:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56058:39:16"},"returnParameters":{"id":14418,"nodeType":"ParameterList","parameters":[],"src":"56111:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14429,"nodeType":"FunctionDefinition","src":"56273:86:16","nodes":[],"documentation":{"id":14420,"nodeType":"StructuredDocumentation","src":"56118:150:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56282:15:16","parameters":{"id":14427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14422,"mutability":"mutable","name":"left","nameLocation":"56306:4:16","nodeType":"VariableDeclaration","scope":14429,"src":"56298:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14421,"name":"uint256","nodeType":"ElementaryTypeName","src":"56298:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14424,"mutability":"mutable","name":"right","nameLocation":"56320:5:16","nodeType":"VariableDeclaration","scope":14429,"src":"56312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14423,"name":"uint256","nodeType":"ElementaryTypeName","src":"56312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14426,"mutability":"mutable","name":"decimals","nameLocation":"56335:8:16","nodeType":"VariableDeclaration","scope":14429,"src":"56327:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14425,"name":"uint256","nodeType":"ElementaryTypeName","src":"56327:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56297:47:16"},"returnParameters":{"id":14428,"nodeType":"ParameterList","parameters":[],"src":"56358:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14441,"nodeType":"FunctionDefinition","src":"56574:109:16","nodes":[],"documentation":{"id":14430,"nodeType":"StructuredDocumentation","src":"56365:204:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56583:15:16","parameters":{"id":14439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14432,"mutability":"mutable","name":"left","nameLocation":"56607:4:16","nodeType":"VariableDeclaration","scope":14441,"src":"56599:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14431,"name":"uint256","nodeType":"ElementaryTypeName","src":"56599:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14434,"mutability":"mutable","name":"right","nameLocation":"56621:5:16","nodeType":"VariableDeclaration","scope":14441,"src":"56613:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14433,"name":"uint256","nodeType":"ElementaryTypeName","src":"56613:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14436,"mutability":"mutable","name":"decimals","nameLocation":"56636:8:16","nodeType":"VariableDeclaration","scope":14441,"src":"56628:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14435,"name":"uint256","nodeType":"ElementaryTypeName","src":"56628:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14438,"mutability":"mutable","name":"error","nameLocation":"56662:5:16","nodeType":"VariableDeclaration","scope":14441,"src":"56646:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14437,"name":"string","nodeType":"ElementaryTypeName","src":"56646:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56598:70:16"},"returnParameters":{"id":14440,"nodeType":"ParameterList","parameters":[],"src":"56682:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14451,"nodeType":"FunctionDefinition","src":"56843:84:16","nodes":[],"documentation":{"id":14442,"nodeType":"StructuredDocumentation","src":"56689:149:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56852:15:16","parameters":{"id":14449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14444,"mutability":"mutable","name":"left","nameLocation":"56875:4:16","nodeType":"VariableDeclaration","scope":14451,"src":"56868:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14443,"name":"int256","nodeType":"ElementaryTypeName","src":"56868:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14446,"mutability":"mutable","name":"right","nameLocation":"56888:5:16","nodeType":"VariableDeclaration","scope":14451,"src":"56881:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14445,"name":"int256","nodeType":"ElementaryTypeName","src":"56881:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14448,"mutability":"mutable","name":"decimals","nameLocation":"56903:8:16","nodeType":"VariableDeclaration","scope":14451,"src":"56895:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14447,"name":"uint256","nodeType":"ElementaryTypeName","src":"56895:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56867:45:16"},"returnParameters":{"id":14450,"nodeType":"ParameterList","parameters":[],"src":"56926:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14463,"nodeType":"FunctionDefinition","src":"57141:107:16","nodes":[],"documentation":{"id":14452,"nodeType":"StructuredDocumentation","src":"56933:203:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"57150:15:16","parameters":{"id":14461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14454,"mutability":"mutable","name":"left","nameLocation":"57173:4:16","nodeType":"VariableDeclaration","scope":14463,"src":"57166:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14453,"name":"int256","nodeType":"ElementaryTypeName","src":"57166:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14456,"mutability":"mutable","name":"right","nameLocation":"57186:5:16","nodeType":"VariableDeclaration","scope":14463,"src":"57179:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14455,"name":"int256","nodeType":"ElementaryTypeName","src":"57179:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14458,"mutability":"mutable","name":"decimals","nameLocation":"57201:8:16","nodeType":"VariableDeclaration","scope":14463,"src":"57193:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14457,"name":"uint256","nodeType":"ElementaryTypeName","src":"57193:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14460,"mutability":"mutable","name":"error","nameLocation":"57227:5:16","nodeType":"VariableDeclaration","scope":14463,"src":"57211:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14459,"name":"string","nodeType":"ElementaryTypeName","src":"57211:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57165:68:16"},"returnParameters":{"id":14462,"nodeType":"ParameterList","parameters":[],"src":"57247:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14471,"nodeType":"FunctionDefinition","src":"57352:61:16","nodes":[],"documentation":{"id":14464,"nodeType":"StructuredDocumentation","src":"57254:93:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57361:8:16","parameters":{"id":14469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14466,"mutability":"mutable","name":"left","nameLocation":"57378:4:16","nodeType":"VariableDeclaration","scope":14471,"src":"57370:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14465,"name":"uint256","nodeType":"ElementaryTypeName","src":"57370:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14468,"mutability":"mutable","name":"right","nameLocation":"57392:5:16","nodeType":"VariableDeclaration","scope":14471,"src":"57384:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14467,"name":"uint256","nodeType":"ElementaryTypeName","src":"57384:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57369:29:16"},"returnParameters":{"id":14470,"nodeType":"ParameterList","parameters":[],"src":"57412:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14481,"nodeType":"FunctionDefinition","src":"57579:84:16","nodes":[],"documentation":{"id":14472,"nodeType":"StructuredDocumentation","src":"57419:155:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57588:8:16","parameters":{"id":14479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14474,"mutability":"mutable","name":"left","nameLocation":"57605:4:16","nodeType":"VariableDeclaration","scope":14481,"src":"57597:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14473,"name":"uint256","nodeType":"ElementaryTypeName","src":"57597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14476,"mutability":"mutable","name":"right","nameLocation":"57619:5:16","nodeType":"VariableDeclaration","scope":14481,"src":"57611:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14475,"name":"uint256","nodeType":"ElementaryTypeName","src":"57611:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14478,"mutability":"mutable","name":"error","nameLocation":"57642:5:16","nodeType":"VariableDeclaration","scope":14481,"src":"57626:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14477,"name":"string","nodeType":"ElementaryTypeName","src":"57626:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57596:52:16"},"returnParameters":{"id":14480,"nodeType":"ParameterList","parameters":[],"src":"57662:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14489,"nodeType":"FunctionDefinition","src":"57766:59:16","nodes":[],"documentation":{"id":14482,"nodeType":"StructuredDocumentation","src":"57669:92:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57775:8:16","parameters":{"id":14487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14484,"mutability":"mutable","name":"left","nameLocation":"57791:4:16","nodeType":"VariableDeclaration","scope":14489,"src":"57784:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14483,"name":"int256","nodeType":"ElementaryTypeName","src":"57784:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14486,"mutability":"mutable","name":"right","nameLocation":"57804:5:16","nodeType":"VariableDeclaration","scope":14489,"src":"57797:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14485,"name":"int256","nodeType":"ElementaryTypeName","src":"57797:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57783:27:16"},"returnParameters":{"id":14488,"nodeType":"ParameterList","parameters":[],"src":"57824:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14499,"nodeType":"FunctionDefinition","src":"57990:82:16","nodes":[],"documentation":{"id":14490,"nodeType":"StructuredDocumentation","src":"57831:154:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57999:8:16","parameters":{"id":14497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14492,"mutability":"mutable","name":"left","nameLocation":"58015:4:16","nodeType":"VariableDeclaration","scope":14499,"src":"58008:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14491,"name":"int256","nodeType":"ElementaryTypeName","src":"58008:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14494,"mutability":"mutable","name":"right","nameLocation":"58028:5:16","nodeType":"VariableDeclaration","scope":14499,"src":"58021:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14493,"name":"int256","nodeType":"ElementaryTypeName","src":"58021:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14496,"mutability":"mutable","name":"error","nameLocation":"58051:5:16","nodeType":"VariableDeclaration","scope":14499,"src":"58035:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14495,"name":"string","nodeType":"ElementaryTypeName","src":"58035:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58007:50:16"},"returnParameters":{"id":14498,"nodeType":"ParameterList","parameters":[],"src":"58071:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14509,"nodeType":"FunctionDefinition","src":"58221:86:16","nodes":[],"documentation":{"id":14500,"nodeType":"StructuredDocumentation","src":"58078:138:16","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58230:15:16","parameters":{"id":14507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14502,"mutability":"mutable","name":"left","nameLocation":"58254:4:16","nodeType":"VariableDeclaration","scope":14509,"src":"58246:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14501,"name":"uint256","nodeType":"ElementaryTypeName","src":"58246:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14504,"mutability":"mutable","name":"right","nameLocation":"58268:5:16","nodeType":"VariableDeclaration","scope":14509,"src":"58260:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14503,"name":"uint256","nodeType":"ElementaryTypeName","src":"58260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14506,"mutability":"mutable","name":"decimals","nameLocation":"58283:8:16","nodeType":"VariableDeclaration","scope":14509,"src":"58275:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14505,"name":"uint256","nodeType":"ElementaryTypeName","src":"58275:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58245:47:16"},"returnParameters":{"id":14508,"nodeType":"ParameterList","parameters":[],"src":"58306:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14521,"nodeType":"FunctionDefinition","src":"58510:109:16","nodes":[],"documentation":{"id":14510,"nodeType":"StructuredDocumentation","src":"58313:192:16","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58519:15:16","parameters":{"id":14519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14512,"mutability":"mutable","name":"left","nameLocation":"58543:4:16","nodeType":"VariableDeclaration","scope":14521,"src":"58535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14511,"name":"uint256","nodeType":"ElementaryTypeName","src":"58535:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14514,"mutability":"mutable","name":"right","nameLocation":"58557:5:16","nodeType":"VariableDeclaration","scope":14521,"src":"58549:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14513,"name":"uint256","nodeType":"ElementaryTypeName","src":"58549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14516,"mutability":"mutable","name":"decimals","nameLocation":"58572:8:16","nodeType":"VariableDeclaration","scope":14521,"src":"58564:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14515,"name":"uint256","nodeType":"ElementaryTypeName","src":"58564:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14518,"mutability":"mutable","name":"error","nameLocation":"58598:5:16","nodeType":"VariableDeclaration","scope":14521,"src":"58582:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14517,"name":"string","nodeType":"ElementaryTypeName","src":"58582:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58534:70:16"},"returnParameters":{"id":14520,"nodeType":"ParameterList","parameters":[],"src":"58618:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14531,"nodeType":"FunctionDefinition","src":"58767:84:16","nodes":[],"documentation":{"id":14522,"nodeType":"StructuredDocumentation","src":"58625:137:16","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58776:15:16","parameters":{"id":14529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14524,"mutability":"mutable","name":"left","nameLocation":"58799:4:16","nodeType":"VariableDeclaration","scope":14531,"src":"58792:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14523,"name":"int256","nodeType":"ElementaryTypeName","src":"58792:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14526,"mutability":"mutable","name":"right","nameLocation":"58812:5:16","nodeType":"VariableDeclaration","scope":14531,"src":"58805:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14525,"name":"int256","nodeType":"ElementaryTypeName","src":"58805:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14528,"mutability":"mutable","name":"decimals","nameLocation":"58827:8:16","nodeType":"VariableDeclaration","scope":14531,"src":"58819:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14527,"name":"uint256","nodeType":"ElementaryTypeName","src":"58819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58791:45:16"},"returnParameters":{"id":14530,"nodeType":"ParameterList","parameters":[],"src":"58850:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14543,"nodeType":"FunctionDefinition","src":"59053:107:16","nodes":[],"documentation":{"id":14532,"nodeType":"StructuredDocumentation","src":"58857:191:16","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"59062:15:16","parameters":{"id":14541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14534,"mutability":"mutable","name":"left","nameLocation":"59085:4:16","nodeType":"VariableDeclaration","scope":14543,"src":"59078:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14533,"name":"int256","nodeType":"ElementaryTypeName","src":"59078:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14536,"mutability":"mutable","name":"right","nameLocation":"59098:5:16","nodeType":"VariableDeclaration","scope":14543,"src":"59091:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14535,"name":"int256","nodeType":"ElementaryTypeName","src":"59091:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14538,"mutability":"mutable","name":"decimals","nameLocation":"59113:8:16","nodeType":"VariableDeclaration","scope":14543,"src":"59105:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14537,"name":"uint256","nodeType":"ElementaryTypeName","src":"59105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14540,"mutability":"mutable","name":"error","nameLocation":"59139:5:16","nodeType":"VariableDeclaration","scope":14543,"src":"59123:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14539,"name":"string","nodeType":"ElementaryTypeName","src":"59123:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59077:68:16"},"returnParameters":{"id":14542,"nodeType":"ParameterList","parameters":[],"src":"59159:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14551,"nodeType":"FunctionDefinition","src":"59252:61:16","nodes":[],"documentation":{"id":14544,"nodeType":"StructuredDocumentation","src":"59166:81:16","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59261:8:16","parameters":{"id":14549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14546,"mutability":"mutable","name":"left","nameLocation":"59278:4:16","nodeType":"VariableDeclaration","scope":14551,"src":"59270:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14545,"name":"uint256","nodeType":"ElementaryTypeName","src":"59270:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14548,"mutability":"mutable","name":"right","nameLocation":"59292:5:16","nodeType":"VariableDeclaration","scope":14551,"src":"59284:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14547,"name":"uint256","nodeType":"ElementaryTypeName","src":"59284:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59269:29:16"},"returnParameters":{"id":14550,"nodeType":"ParameterList","parameters":[],"src":"59312:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14561,"nodeType":"FunctionDefinition","src":"59467:84:16","nodes":[],"documentation":{"id":14552,"nodeType":"StructuredDocumentation","src":"59319:143:16","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59476:8:16","parameters":{"id":14559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14554,"mutability":"mutable","name":"left","nameLocation":"59493:4:16","nodeType":"VariableDeclaration","scope":14561,"src":"59485:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14553,"name":"uint256","nodeType":"ElementaryTypeName","src":"59485:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14556,"mutability":"mutable","name":"right","nameLocation":"59507:5:16","nodeType":"VariableDeclaration","scope":14561,"src":"59499:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14555,"name":"uint256","nodeType":"ElementaryTypeName","src":"59499:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14558,"mutability":"mutable","name":"error","nameLocation":"59530:5:16","nodeType":"VariableDeclaration","scope":14561,"src":"59514:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14557,"name":"string","nodeType":"ElementaryTypeName","src":"59514:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59484:52:16"},"returnParameters":{"id":14560,"nodeType":"ParameterList","parameters":[],"src":"59550:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14569,"nodeType":"FunctionDefinition","src":"59642:59:16","nodes":[],"documentation":{"id":14562,"nodeType":"StructuredDocumentation","src":"59557:80:16","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59651:8:16","parameters":{"id":14567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14564,"mutability":"mutable","name":"left","nameLocation":"59667:4:16","nodeType":"VariableDeclaration","scope":14569,"src":"59660:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14563,"name":"int256","nodeType":"ElementaryTypeName","src":"59660:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14566,"mutability":"mutable","name":"right","nameLocation":"59680:5:16","nodeType":"VariableDeclaration","scope":14569,"src":"59673:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14565,"name":"int256","nodeType":"ElementaryTypeName","src":"59673:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59659:27:16"},"returnParameters":{"id":14568,"nodeType":"ParameterList","parameters":[],"src":"59700:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14579,"nodeType":"FunctionDefinition","src":"59854:82:16","nodes":[],"documentation":{"id":14570,"nodeType":"StructuredDocumentation","src":"59707:142:16","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59863:8:16","parameters":{"id":14577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14572,"mutability":"mutable","name":"left","nameLocation":"59879:4:16","nodeType":"VariableDeclaration","scope":14579,"src":"59872:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14571,"name":"int256","nodeType":"ElementaryTypeName","src":"59872:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14574,"mutability":"mutable","name":"right","nameLocation":"59892:5:16","nodeType":"VariableDeclaration","scope":14579,"src":"59885:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14573,"name":"int256","nodeType":"ElementaryTypeName","src":"59885:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14576,"mutability":"mutable","name":"error","nameLocation":"59915:5:16","nodeType":"VariableDeclaration","scope":14579,"src":"59899:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14575,"name":"string","nodeType":"ElementaryTypeName","src":"59899:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59871:50:16"},"returnParameters":{"id":14578,"nodeType":"ParameterList","parameters":[],"src":"59935:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14589,"nodeType":"FunctionDefinition","src":"60094:86:16","nodes":[],"documentation":{"id":14580,"nodeType":"StructuredDocumentation","src":"59942:147:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60103:15:16","parameters":{"id":14587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14582,"mutability":"mutable","name":"left","nameLocation":"60127:4:16","nodeType":"VariableDeclaration","scope":14589,"src":"60119:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14581,"name":"uint256","nodeType":"ElementaryTypeName","src":"60119:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14584,"mutability":"mutable","name":"right","nameLocation":"60141:5:16","nodeType":"VariableDeclaration","scope":14589,"src":"60133:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14583,"name":"uint256","nodeType":"ElementaryTypeName","src":"60133:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14586,"mutability":"mutable","name":"decimals","nameLocation":"60156:8:16","nodeType":"VariableDeclaration","scope":14589,"src":"60148:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14585,"name":"uint256","nodeType":"ElementaryTypeName","src":"60148:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60118:47:16"},"returnParameters":{"id":14588,"nodeType":"ParameterList","parameters":[],"src":"60179:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14601,"nodeType":"FunctionDefinition","src":"60392:109:16","nodes":[],"documentation":{"id":14590,"nodeType":"StructuredDocumentation","src":"60186:201:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60401:15:16","parameters":{"id":14599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14592,"mutability":"mutable","name":"left","nameLocation":"60425:4:16","nodeType":"VariableDeclaration","scope":14601,"src":"60417:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14591,"name":"uint256","nodeType":"ElementaryTypeName","src":"60417:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14594,"mutability":"mutable","name":"right","nameLocation":"60439:5:16","nodeType":"VariableDeclaration","scope":14601,"src":"60431:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14593,"name":"uint256","nodeType":"ElementaryTypeName","src":"60431:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14596,"mutability":"mutable","name":"decimals","nameLocation":"60454:8:16","nodeType":"VariableDeclaration","scope":14601,"src":"60446:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14595,"name":"uint256","nodeType":"ElementaryTypeName","src":"60446:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14598,"mutability":"mutable","name":"error","nameLocation":"60480:5:16","nodeType":"VariableDeclaration","scope":14601,"src":"60464:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14597,"name":"string","nodeType":"ElementaryTypeName","src":"60464:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60416:70:16"},"returnParameters":{"id":14600,"nodeType":"ParameterList","parameters":[],"src":"60500:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14611,"nodeType":"FunctionDefinition","src":"60658:84:16","nodes":[],"documentation":{"id":14602,"nodeType":"StructuredDocumentation","src":"60507:146:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60667:15:16","parameters":{"id":14609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14604,"mutability":"mutable","name":"left","nameLocation":"60690:4:16","nodeType":"VariableDeclaration","scope":14611,"src":"60683:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14603,"name":"int256","nodeType":"ElementaryTypeName","src":"60683:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14606,"mutability":"mutable","name":"right","nameLocation":"60703:5:16","nodeType":"VariableDeclaration","scope":14611,"src":"60696:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14605,"name":"int256","nodeType":"ElementaryTypeName","src":"60696:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14608,"mutability":"mutable","name":"decimals","nameLocation":"60718:8:16","nodeType":"VariableDeclaration","scope":14611,"src":"60710:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14607,"name":"uint256","nodeType":"ElementaryTypeName","src":"60710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60682:45:16"},"returnParameters":{"id":14610,"nodeType":"ParameterList","parameters":[],"src":"60741:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14623,"nodeType":"FunctionDefinition","src":"60953:107:16","nodes":[],"documentation":{"id":14612,"nodeType":"StructuredDocumentation","src":"60748:200:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60962:15:16","parameters":{"id":14621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14614,"mutability":"mutable","name":"left","nameLocation":"60985:4:16","nodeType":"VariableDeclaration","scope":14623,"src":"60978:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14613,"name":"int256","nodeType":"ElementaryTypeName","src":"60978:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14616,"mutability":"mutable","name":"right","nameLocation":"60998:5:16","nodeType":"VariableDeclaration","scope":14623,"src":"60991:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14615,"name":"int256","nodeType":"ElementaryTypeName","src":"60991:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14618,"mutability":"mutable","name":"decimals","nameLocation":"61013:8:16","nodeType":"VariableDeclaration","scope":14623,"src":"61005:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14617,"name":"uint256","nodeType":"ElementaryTypeName","src":"61005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14620,"mutability":"mutable","name":"error","nameLocation":"61039:5:16","nodeType":"VariableDeclaration","scope":14623,"src":"61023:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14619,"name":"string","nodeType":"ElementaryTypeName","src":"61023:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60977:68:16"},"returnParameters":{"id":14622,"nodeType":"ParameterList","parameters":[],"src":"61059:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14631,"nodeType":"FunctionDefinition","src":"61161:61:16","nodes":[],"documentation":{"id":14624,"nodeType":"StructuredDocumentation","src":"61066:90:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61170:8:16","parameters":{"id":14629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14626,"mutability":"mutable","name":"left","nameLocation":"61187:4:16","nodeType":"VariableDeclaration","scope":14631,"src":"61179:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14625,"name":"uint256","nodeType":"ElementaryTypeName","src":"61179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14628,"mutability":"mutable","name":"right","nameLocation":"61201:5:16","nodeType":"VariableDeclaration","scope":14631,"src":"61193:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14627,"name":"uint256","nodeType":"ElementaryTypeName","src":"61193:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61178:29:16"},"returnParameters":{"id":14630,"nodeType":"ParameterList","parameters":[],"src":"61221:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14641,"nodeType":"FunctionDefinition","src":"61385:84:16","nodes":[],"documentation":{"id":14632,"nodeType":"StructuredDocumentation","src":"61228:152:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61394:8:16","parameters":{"id":14639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14634,"mutability":"mutable","name":"left","nameLocation":"61411:4:16","nodeType":"VariableDeclaration","scope":14641,"src":"61403:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14633,"name":"uint256","nodeType":"ElementaryTypeName","src":"61403:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14636,"mutability":"mutable","name":"right","nameLocation":"61425:5:16","nodeType":"VariableDeclaration","scope":14641,"src":"61417:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14635,"name":"uint256","nodeType":"ElementaryTypeName","src":"61417:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14638,"mutability":"mutable","name":"error","nameLocation":"61448:5:16","nodeType":"VariableDeclaration","scope":14641,"src":"61432:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14637,"name":"string","nodeType":"ElementaryTypeName","src":"61432:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61402:52:16"},"returnParameters":{"id":14640,"nodeType":"ParameterList","parameters":[],"src":"61468:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14649,"nodeType":"FunctionDefinition","src":"61569:59:16","nodes":[],"documentation":{"id":14642,"nodeType":"StructuredDocumentation","src":"61475:89:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61578:8:16","parameters":{"id":14647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14644,"mutability":"mutable","name":"left","nameLocation":"61594:4:16","nodeType":"VariableDeclaration","scope":14649,"src":"61587:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14643,"name":"int256","nodeType":"ElementaryTypeName","src":"61587:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14646,"mutability":"mutable","name":"right","nameLocation":"61607:5:16","nodeType":"VariableDeclaration","scope":14649,"src":"61600:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14645,"name":"int256","nodeType":"ElementaryTypeName","src":"61600:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61586:27:16"},"returnParameters":{"id":14648,"nodeType":"ParameterList","parameters":[],"src":"61627:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14659,"nodeType":"FunctionDefinition","src":"61790:82:16","nodes":[],"documentation":{"id":14650,"nodeType":"StructuredDocumentation","src":"61634:151:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61799:8:16","parameters":{"id":14657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14652,"mutability":"mutable","name":"left","nameLocation":"61815:4:16","nodeType":"VariableDeclaration","scope":14659,"src":"61808:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14651,"name":"int256","nodeType":"ElementaryTypeName","src":"61808:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14654,"mutability":"mutable","name":"right","nameLocation":"61828:5:16","nodeType":"VariableDeclaration","scope":14659,"src":"61821:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14653,"name":"int256","nodeType":"ElementaryTypeName","src":"61821:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14656,"mutability":"mutable","name":"error","nameLocation":"61851:5:16","nodeType":"VariableDeclaration","scope":14659,"src":"61835:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14655,"name":"string","nodeType":"ElementaryTypeName","src":"61835:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61807:50:16"},"returnParameters":{"id":14658,"nodeType":"ParameterList","parameters":[],"src":"61871:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14669,"nodeType":"FunctionDefinition","src":"62018:86:16","nodes":[],"documentation":{"id":14660,"nodeType":"StructuredDocumentation","src":"61878:135:16","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62027:15:16","parameters":{"id":14667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14662,"mutability":"mutable","name":"left","nameLocation":"62051:4:16","nodeType":"VariableDeclaration","scope":14669,"src":"62043:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14661,"name":"uint256","nodeType":"ElementaryTypeName","src":"62043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14664,"mutability":"mutable","name":"right","nameLocation":"62065:5:16","nodeType":"VariableDeclaration","scope":14669,"src":"62057:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14663,"name":"uint256","nodeType":"ElementaryTypeName","src":"62057:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14666,"mutability":"mutable","name":"decimals","nameLocation":"62080:8:16","nodeType":"VariableDeclaration","scope":14669,"src":"62072:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14665,"name":"uint256","nodeType":"ElementaryTypeName","src":"62072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62042:47:16"},"returnParameters":{"id":14668,"nodeType":"ParameterList","parameters":[],"src":"62103:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14681,"nodeType":"FunctionDefinition","src":"62304:109:16","nodes":[],"documentation":{"id":14670,"nodeType":"StructuredDocumentation","src":"62110:189:16","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62313:15:16","parameters":{"id":14679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14672,"mutability":"mutable","name":"left","nameLocation":"62337:4:16","nodeType":"VariableDeclaration","scope":14681,"src":"62329:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14671,"name":"uint256","nodeType":"ElementaryTypeName","src":"62329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14674,"mutability":"mutable","name":"right","nameLocation":"62351:5:16","nodeType":"VariableDeclaration","scope":14681,"src":"62343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14673,"name":"uint256","nodeType":"ElementaryTypeName","src":"62343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14676,"mutability":"mutable","name":"decimals","nameLocation":"62366:8:16","nodeType":"VariableDeclaration","scope":14681,"src":"62358:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14675,"name":"uint256","nodeType":"ElementaryTypeName","src":"62358:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14678,"mutability":"mutable","name":"error","nameLocation":"62392:5:16","nodeType":"VariableDeclaration","scope":14681,"src":"62376:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14677,"name":"string","nodeType":"ElementaryTypeName","src":"62376:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62328:70:16"},"returnParameters":{"id":14680,"nodeType":"ParameterList","parameters":[],"src":"62412:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14691,"nodeType":"FunctionDefinition","src":"62558:84:16","nodes":[],"documentation":{"id":14682,"nodeType":"StructuredDocumentation","src":"62419:134:16","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62567:15:16","parameters":{"id":14689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14684,"mutability":"mutable","name":"left","nameLocation":"62590:4:16","nodeType":"VariableDeclaration","scope":14691,"src":"62583:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14683,"name":"int256","nodeType":"ElementaryTypeName","src":"62583:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14686,"mutability":"mutable","name":"right","nameLocation":"62603:5:16","nodeType":"VariableDeclaration","scope":14691,"src":"62596:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14685,"name":"int256","nodeType":"ElementaryTypeName","src":"62596:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14688,"mutability":"mutable","name":"decimals","nameLocation":"62618:8:16","nodeType":"VariableDeclaration","scope":14691,"src":"62610:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14687,"name":"uint256","nodeType":"ElementaryTypeName","src":"62610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62582:45:16"},"returnParameters":{"id":14690,"nodeType":"ParameterList","parameters":[],"src":"62641:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14703,"nodeType":"FunctionDefinition","src":"62841:107:16","nodes":[],"documentation":{"id":14692,"nodeType":"StructuredDocumentation","src":"62648:188:16","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62850:15:16","parameters":{"id":14701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14694,"mutability":"mutable","name":"left","nameLocation":"62873:4:16","nodeType":"VariableDeclaration","scope":14703,"src":"62866:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14693,"name":"int256","nodeType":"ElementaryTypeName","src":"62866:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14696,"mutability":"mutable","name":"right","nameLocation":"62886:5:16","nodeType":"VariableDeclaration","scope":14703,"src":"62879:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14695,"name":"int256","nodeType":"ElementaryTypeName","src":"62879:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14698,"mutability":"mutable","name":"decimals","nameLocation":"62901:8:16","nodeType":"VariableDeclaration","scope":14703,"src":"62893:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14697,"name":"uint256","nodeType":"ElementaryTypeName","src":"62893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14700,"mutability":"mutable","name":"error","nameLocation":"62927:5:16","nodeType":"VariableDeclaration","scope":14703,"src":"62911:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14699,"name":"string","nodeType":"ElementaryTypeName","src":"62911:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62865:68:16"},"returnParameters":{"id":14702,"nodeType":"ParameterList","parameters":[],"src":"62947:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14711,"nodeType":"FunctionDefinition","src":"63037:61:16","nodes":[],"documentation":{"id":14704,"nodeType":"StructuredDocumentation","src":"62954:78:16","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63046:8:16","parameters":{"id":14709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14706,"mutability":"mutable","name":"left","nameLocation":"63063:4:16","nodeType":"VariableDeclaration","scope":14711,"src":"63055:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14705,"name":"uint256","nodeType":"ElementaryTypeName","src":"63055:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14708,"mutability":"mutable","name":"right","nameLocation":"63077:5:16","nodeType":"VariableDeclaration","scope":14711,"src":"63069:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14707,"name":"uint256","nodeType":"ElementaryTypeName","src":"63069:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63054:29:16"},"returnParameters":{"id":14710,"nodeType":"ParameterList","parameters":[],"src":"63097:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14721,"nodeType":"FunctionDefinition","src":"63249:84:16","nodes":[],"documentation":{"id":14712,"nodeType":"StructuredDocumentation","src":"63104:140:16","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63258:8:16","parameters":{"id":14719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14714,"mutability":"mutable","name":"left","nameLocation":"63275:4:16","nodeType":"VariableDeclaration","scope":14721,"src":"63267:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14713,"name":"uint256","nodeType":"ElementaryTypeName","src":"63267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14716,"mutability":"mutable","name":"right","nameLocation":"63289:5:16","nodeType":"VariableDeclaration","scope":14721,"src":"63281:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14715,"name":"uint256","nodeType":"ElementaryTypeName","src":"63281:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14718,"mutability":"mutable","name":"error","nameLocation":"63312:5:16","nodeType":"VariableDeclaration","scope":14721,"src":"63296:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14717,"name":"string","nodeType":"ElementaryTypeName","src":"63296:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63266:52:16"},"returnParameters":{"id":14720,"nodeType":"ParameterList","parameters":[],"src":"63332:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14729,"nodeType":"FunctionDefinition","src":"63421:59:16","nodes":[],"documentation":{"id":14722,"nodeType":"StructuredDocumentation","src":"63339:77:16","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63430:8:16","parameters":{"id":14727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14724,"mutability":"mutable","name":"left","nameLocation":"63446:4:16","nodeType":"VariableDeclaration","scope":14729,"src":"63439:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14723,"name":"int256","nodeType":"ElementaryTypeName","src":"63439:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14726,"mutability":"mutable","name":"right","nameLocation":"63459:5:16","nodeType":"VariableDeclaration","scope":14729,"src":"63452:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14725,"name":"int256","nodeType":"ElementaryTypeName","src":"63452:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"63438:27:16"},"returnParameters":{"id":14728,"nodeType":"ParameterList","parameters":[],"src":"63479:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14739,"nodeType":"FunctionDefinition","src":"63630:82:16","nodes":[],"documentation":{"id":14730,"nodeType":"StructuredDocumentation","src":"63486:139:16","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63639:8:16","parameters":{"id":14737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14732,"mutability":"mutable","name":"left","nameLocation":"63655:4:16","nodeType":"VariableDeclaration","scope":14739,"src":"63648:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14731,"name":"int256","nodeType":"ElementaryTypeName","src":"63648:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14734,"mutability":"mutable","name":"right","nameLocation":"63668:5:16","nodeType":"VariableDeclaration","scope":14739,"src":"63661:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14733,"name":"int256","nodeType":"ElementaryTypeName","src":"63661:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14736,"mutability":"mutable","name":"error","nameLocation":"63691:5:16","nodeType":"VariableDeclaration","scope":14739,"src":"63675:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14735,"name":"string","nodeType":"ElementaryTypeName","src":"63675:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63647:50:16"},"returnParameters":{"id":14738,"nodeType":"ParameterList","parameters":[],"src":"63711:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14749,"nodeType":"FunctionDefinition","src":"63825:89:16","nodes":[],"documentation":{"id":14740,"nodeType":"StructuredDocumentation","src":"63718:102:16","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"63834:18:16","parameters":{"id":14747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14742,"mutability":"mutable","name":"left","nameLocation":"63861:4:16","nodeType":"VariableDeclaration","scope":14749,"src":"63853:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14741,"name":"uint256","nodeType":"ElementaryTypeName","src":"63853:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14744,"mutability":"mutable","name":"right","nameLocation":"63875:5:16","nodeType":"VariableDeclaration","scope":14749,"src":"63867:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14743,"name":"uint256","nodeType":"ElementaryTypeName","src":"63867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14746,"mutability":"mutable","name":"decimals","nameLocation":"63890:8:16","nodeType":"VariableDeclaration","scope":14749,"src":"63882:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14745,"name":"uint256","nodeType":"ElementaryTypeName","src":"63882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63852:47:16"},"returnParameters":{"id":14748,"nodeType":"ParameterList","parameters":[],"src":"63913:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14761,"nodeType":"FunctionDefinition","src":"64089:112:16","nodes":[],"documentation":{"id":14750,"nodeType":"StructuredDocumentation","src":"63920:164:16","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64098:18:16","parameters":{"id":14759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14752,"mutability":"mutable","name":"left","nameLocation":"64125:4:16","nodeType":"VariableDeclaration","scope":14761,"src":"64117:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14751,"name":"uint256","nodeType":"ElementaryTypeName","src":"64117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14754,"mutability":"mutable","name":"right","nameLocation":"64139:5:16","nodeType":"VariableDeclaration","scope":14761,"src":"64131:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14753,"name":"uint256","nodeType":"ElementaryTypeName","src":"64131:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14756,"mutability":"mutable","name":"decimals","nameLocation":"64154:8:16","nodeType":"VariableDeclaration","scope":14761,"src":"64146:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14755,"name":"uint256","nodeType":"ElementaryTypeName","src":"64146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14758,"mutability":"mutable","name":"error","nameLocation":"64180:5:16","nodeType":"VariableDeclaration","scope":14761,"src":"64164:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14757,"name":"string","nodeType":"ElementaryTypeName","src":"64164:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64116:70:16"},"returnParameters":{"id":14760,"nodeType":"ParameterList","parameters":[],"src":"64200:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14771,"nodeType":"FunctionDefinition","src":"64313:87:16","nodes":[],"documentation":{"id":14762,"nodeType":"StructuredDocumentation","src":"64207:101:16","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64322:18:16","parameters":{"id":14769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14764,"mutability":"mutable","name":"left","nameLocation":"64348:4:16","nodeType":"VariableDeclaration","scope":14771,"src":"64341:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14763,"name":"int256","nodeType":"ElementaryTypeName","src":"64341:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14766,"mutability":"mutable","name":"right","nameLocation":"64361:5:16","nodeType":"VariableDeclaration","scope":14771,"src":"64354:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14765,"name":"int256","nodeType":"ElementaryTypeName","src":"64354:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14768,"mutability":"mutable","name":"decimals","nameLocation":"64376:8:16","nodeType":"VariableDeclaration","scope":14771,"src":"64368:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14767,"name":"uint256","nodeType":"ElementaryTypeName","src":"64368:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64340:45:16"},"returnParameters":{"id":14770,"nodeType":"ParameterList","parameters":[],"src":"64399:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14783,"nodeType":"FunctionDefinition","src":"64574:110:16","nodes":[],"documentation":{"id":14772,"nodeType":"StructuredDocumentation","src":"64406:163:16","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64583:18:16","parameters":{"id":14781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14774,"mutability":"mutable","name":"left","nameLocation":"64609:4:16","nodeType":"VariableDeclaration","scope":14783,"src":"64602:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14773,"name":"int256","nodeType":"ElementaryTypeName","src":"64602:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14776,"mutability":"mutable","name":"right","nameLocation":"64622:5:16","nodeType":"VariableDeclaration","scope":14783,"src":"64615:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14775,"name":"int256","nodeType":"ElementaryTypeName","src":"64615:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14778,"mutability":"mutable","name":"decimals","nameLocation":"64637:8:16","nodeType":"VariableDeclaration","scope":14783,"src":"64629:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14777,"name":"uint256","nodeType":"ElementaryTypeName","src":"64629:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14780,"mutability":"mutable","name":"error","nameLocation":"64663:5:16","nodeType":"VariableDeclaration","scope":14783,"src":"64647:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14779,"name":"string","nodeType":"ElementaryTypeName","src":"64647:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64601:68:16"},"returnParameters":{"id":14782,"nodeType":"ParameterList","parameters":[],"src":"64683:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14791,"nodeType":"FunctionDefinition","src":"64744:58:16","nodes":[],"documentation":{"id":14784,"nodeType":"StructuredDocumentation","src":"64690:49:16","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64753:11:16","parameters":{"id":14789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14786,"mutability":"mutable","name":"left","nameLocation":"64770:4:16","nodeType":"VariableDeclaration","scope":14791,"src":"64765:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14785,"name":"bool","nodeType":"ElementaryTypeName","src":"64765:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14788,"mutability":"mutable","name":"right","nameLocation":"64781:5:16","nodeType":"VariableDeclaration","scope":14791,"src":"64776:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14787,"name":"bool","nodeType":"ElementaryTypeName","src":"64776:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"64764:23:16"},"returnParameters":{"id":14790,"nodeType":"ParameterList","parameters":[],"src":"64801:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14801,"nodeType":"FunctionDefinition","src":"64919:81:16","nodes":[],"documentation":{"id":14792,"nodeType":"StructuredDocumentation","src":"64808:106:16","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64928:11:16","parameters":{"id":14799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14794,"mutability":"mutable","name":"left","nameLocation":"64945:4:16","nodeType":"VariableDeclaration","scope":14801,"src":"64940:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14793,"name":"bool","nodeType":"ElementaryTypeName","src":"64940:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14796,"mutability":"mutable","name":"right","nameLocation":"64956:5:16","nodeType":"VariableDeclaration","scope":14801,"src":"64951:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14795,"name":"bool","nodeType":"ElementaryTypeName","src":"64951:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14798,"mutability":"mutable","name":"error","nameLocation":"64979:5:16","nodeType":"VariableDeclaration","scope":14801,"src":"64963:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14797,"name":"string","nodeType":"ElementaryTypeName","src":"64963:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64939:46:16"},"returnParameters":{"id":14800,"nodeType":"ParameterList","parameters":[],"src":"64999:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14809,"nodeType":"FunctionDefinition","src":"65062:80:16","nodes":[],"documentation":{"id":14802,"nodeType":"StructuredDocumentation","src":"65006:51:16","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65071:11:16","parameters":{"id":14807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14804,"mutability":"mutable","name":"left","nameLocation":"65099:4:16","nodeType":"VariableDeclaration","scope":14809,"src":"65083:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14803,"name":"string","nodeType":"ElementaryTypeName","src":"65083:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14806,"mutability":"mutable","name":"right","nameLocation":"65121:5:16","nodeType":"VariableDeclaration","scope":14809,"src":"65105:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14805,"name":"string","nodeType":"ElementaryTypeName","src":"65105:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65082:45:16"},"returnParameters":{"id":14808,"nodeType":"ParameterList","parameters":[],"src":"65141:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14819,"nodeType":"FunctionDefinition","src":"65261:103:16","nodes":[],"documentation":{"id":14810,"nodeType":"StructuredDocumentation","src":"65148:108:16","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65270:11:16","parameters":{"id":14817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14812,"mutability":"mutable","name":"left","nameLocation":"65298:4:16","nodeType":"VariableDeclaration","scope":14819,"src":"65282:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14811,"name":"string","nodeType":"ElementaryTypeName","src":"65282:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14814,"mutability":"mutable","name":"right","nameLocation":"65320:5:16","nodeType":"VariableDeclaration","scope":14819,"src":"65304:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14813,"name":"string","nodeType":"ElementaryTypeName","src":"65304:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14816,"mutability":"mutable","name":"error","nameLocation":"65343:5:16","nodeType":"VariableDeclaration","scope":14819,"src":"65327:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14815,"name":"string","nodeType":"ElementaryTypeName","src":"65327:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65281:68:16"},"returnParameters":{"id":14818,"nodeType":"ParameterList","parameters":[],"src":"65363:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14827,"nodeType":"FunctionDefinition","src":"65425:78:16","nodes":[],"documentation":{"id":14820,"nodeType":"StructuredDocumentation","src":"65370:50:16","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65434:11:16","parameters":{"id":14825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14822,"mutability":"mutable","name":"left","nameLocation":"65461:4:16","nodeType":"VariableDeclaration","scope":14827,"src":"65446:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14821,"name":"bytes","nodeType":"ElementaryTypeName","src":"65446:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14824,"mutability":"mutable","name":"right","nameLocation":"65482:5:16","nodeType":"VariableDeclaration","scope":14827,"src":"65467:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14823,"name":"bytes","nodeType":"ElementaryTypeName","src":"65467:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"65445:43:16"},"returnParameters":{"id":14826,"nodeType":"ParameterList","parameters":[],"src":"65502:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14837,"nodeType":"FunctionDefinition","src":"65621:101:16","nodes":[],"documentation":{"id":14828,"nodeType":"StructuredDocumentation","src":"65509:107:16","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65630:11:16","parameters":{"id":14835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14830,"mutability":"mutable","name":"left","nameLocation":"65657:4:16","nodeType":"VariableDeclaration","scope":14837,"src":"65642:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14829,"name":"bytes","nodeType":"ElementaryTypeName","src":"65642:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14832,"mutability":"mutable","name":"right","nameLocation":"65678:5:16","nodeType":"VariableDeclaration","scope":14837,"src":"65663:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14831,"name":"bytes","nodeType":"ElementaryTypeName","src":"65663:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14834,"mutability":"mutable","name":"error","nameLocation":"65701:5:16","nodeType":"VariableDeclaration","scope":14837,"src":"65685:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14833,"name":"string","nodeType":"ElementaryTypeName","src":"65685:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65641:66:16"},"returnParameters":{"id":14836,"nodeType":"ParameterList","parameters":[],"src":"65721:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14847,"nodeType":"FunctionDefinition","src":"65792:80:16","nodes":[],"documentation":{"id":14838,"nodeType":"StructuredDocumentation","src":"65728:59:16","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65801:11:16","parameters":{"id":14845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14841,"mutability":"mutable","name":"left","nameLocation":"65829:4:16","nodeType":"VariableDeclaration","scope":14847,"src":"65813:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14839,"name":"bool","nodeType":"ElementaryTypeName","src":"65813:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14840,"nodeType":"ArrayTypeName","src":"65813:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14844,"mutability":"mutable","name":"right","nameLocation":"65851:5:16","nodeType":"VariableDeclaration","scope":14847,"src":"65835:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14842,"name":"bool","nodeType":"ElementaryTypeName","src":"65835:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14843,"nodeType":"ArrayTypeName","src":"65835:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"65812:45:16"},"returnParameters":{"id":14846,"nodeType":"ParameterList","parameters":[],"src":"65871:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14859,"nodeType":"FunctionDefinition","src":"65999:103:16","nodes":[],"documentation":{"id":14848,"nodeType":"StructuredDocumentation","src":"65878:116:16","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66008:11:16","parameters":{"id":14857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14851,"mutability":"mutable","name":"left","nameLocation":"66036:4:16","nodeType":"VariableDeclaration","scope":14859,"src":"66020:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14849,"name":"bool","nodeType":"ElementaryTypeName","src":"66020:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14850,"nodeType":"ArrayTypeName","src":"66020:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14854,"mutability":"mutable","name":"right","nameLocation":"66058:5:16","nodeType":"VariableDeclaration","scope":14859,"src":"66042:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14852,"name":"bool","nodeType":"ElementaryTypeName","src":"66042:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14853,"nodeType":"ArrayTypeName","src":"66042:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14856,"mutability":"mutable","name":"error","nameLocation":"66081:5:16","nodeType":"VariableDeclaration","scope":14859,"src":"66065:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14855,"name":"string","nodeType":"ElementaryTypeName","src":"66065:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66019:68:16"},"returnParameters":{"id":14858,"nodeType":"ParameterList","parameters":[],"src":"66101:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14869,"nodeType":"FunctionDefinition","src":"66175:86:16","nodes":[],"documentation":{"id":14860,"nodeType":"StructuredDocumentation","src":"66108:62:16","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66184:11:16","parameters":{"id":14867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14863,"mutability":"mutable","name":"left","nameLocation":"66215:4:16","nodeType":"VariableDeclaration","scope":14869,"src":"66196:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14861,"name":"uint256","nodeType":"ElementaryTypeName","src":"66196:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14862,"nodeType":"ArrayTypeName","src":"66196:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14866,"mutability":"mutable","name":"right","nameLocation":"66240:5:16","nodeType":"VariableDeclaration","scope":14869,"src":"66221:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14864,"name":"uint256","nodeType":"ElementaryTypeName","src":"66221:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14865,"nodeType":"ArrayTypeName","src":"66221:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"66195:51:16"},"returnParameters":{"id":14868,"nodeType":"ParameterList","parameters":[],"src":"66260:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14881,"nodeType":"FunctionDefinition","src":"66391:109:16","nodes":[],"documentation":{"id":14870,"nodeType":"StructuredDocumentation","src":"66267:119:16","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66400:11:16","parameters":{"id":14879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14873,"mutability":"mutable","name":"left","nameLocation":"66431:4:16","nodeType":"VariableDeclaration","scope":14881,"src":"66412:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14871,"name":"uint256","nodeType":"ElementaryTypeName","src":"66412:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14872,"nodeType":"ArrayTypeName","src":"66412:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14876,"mutability":"mutable","name":"right","nameLocation":"66456:5:16","nodeType":"VariableDeclaration","scope":14881,"src":"66437:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14874,"name":"uint256","nodeType":"ElementaryTypeName","src":"66437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14875,"nodeType":"ArrayTypeName","src":"66437:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14878,"mutability":"mutable","name":"error","nameLocation":"66479:5:16","nodeType":"VariableDeclaration","scope":14881,"src":"66463:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14877,"name":"string","nodeType":"ElementaryTypeName","src":"66463:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66411:74:16"},"returnParameters":{"id":14880,"nodeType":"ParameterList","parameters":[],"src":"66499:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14891,"nodeType":"FunctionDefinition","src":"66572:84:16","nodes":[],"documentation":{"id":14882,"nodeType":"StructuredDocumentation","src":"66506:61:16","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66581:11:16","parameters":{"id":14889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14885,"mutability":"mutable","name":"left","nameLocation":"66611:4:16","nodeType":"VariableDeclaration","scope":14891,"src":"66593:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14883,"name":"int256","nodeType":"ElementaryTypeName","src":"66593:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14884,"nodeType":"ArrayTypeName","src":"66593:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14888,"mutability":"mutable","name":"right","nameLocation":"66635:5:16","nodeType":"VariableDeclaration","scope":14891,"src":"66617:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14886,"name":"int256","nodeType":"ElementaryTypeName","src":"66617:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14887,"nodeType":"ArrayTypeName","src":"66617:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"66592:49:16"},"returnParameters":{"id":14890,"nodeType":"ParameterList","parameters":[],"src":"66655:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14903,"nodeType":"FunctionDefinition","src":"66785:107:16","nodes":[],"documentation":{"id":14892,"nodeType":"StructuredDocumentation","src":"66662:118:16","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66794:11:16","parameters":{"id":14901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14895,"mutability":"mutable","name":"left","nameLocation":"66824:4:16","nodeType":"VariableDeclaration","scope":14903,"src":"66806:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14893,"name":"int256","nodeType":"ElementaryTypeName","src":"66806:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14894,"nodeType":"ArrayTypeName","src":"66806:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14898,"mutability":"mutable","name":"right","nameLocation":"66848:5:16","nodeType":"VariableDeclaration","scope":14903,"src":"66830:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14896,"name":"int256","nodeType":"ElementaryTypeName","src":"66830:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14897,"nodeType":"ArrayTypeName","src":"66830:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14900,"mutability":"mutable","name":"error","nameLocation":"66871:5:16","nodeType":"VariableDeclaration","scope":14903,"src":"66855:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14899,"name":"string","nodeType":"ElementaryTypeName","src":"66855:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66805:72:16"},"returnParameters":{"id":14902,"nodeType":"ParameterList","parameters":[],"src":"66891:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14911,"nodeType":"FunctionDefinition","src":"66955:64:16","nodes":[],"documentation":{"id":14904,"nodeType":"StructuredDocumentation","src":"66898:52:16","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66964:11:16","parameters":{"id":14909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14906,"mutability":"mutable","name":"left","nameLocation":"66984:4:16","nodeType":"VariableDeclaration","scope":14911,"src":"66976:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14905,"name":"uint256","nodeType":"ElementaryTypeName","src":"66976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14908,"mutability":"mutable","name":"right","nameLocation":"66998:5:16","nodeType":"VariableDeclaration","scope":14911,"src":"66990:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14907,"name":"uint256","nodeType":"ElementaryTypeName","src":"66990:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66975:29:16"},"returnParameters":{"id":14910,"nodeType":"ParameterList","parameters":[],"src":"67018:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14921,"nodeType":"FunctionDefinition","src":"67092:86:16","nodes":[],"documentation":{"id":14912,"nodeType":"StructuredDocumentation","src":"67025:62:16","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67101:11:16","parameters":{"id":14919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14915,"mutability":"mutable","name":"left","nameLocation":"67132:4:16","nodeType":"VariableDeclaration","scope":14921,"src":"67113:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14913,"name":"address","nodeType":"ElementaryTypeName","src":"67113:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14914,"nodeType":"ArrayTypeName","src":"67113:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14918,"mutability":"mutable","name":"right","nameLocation":"67157:5:16","nodeType":"VariableDeclaration","scope":14921,"src":"67138:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14916,"name":"address","nodeType":"ElementaryTypeName","src":"67138:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14917,"nodeType":"ArrayTypeName","src":"67138:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"67112:51:16"},"returnParameters":{"id":14920,"nodeType":"ParameterList","parameters":[],"src":"67177:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14933,"nodeType":"FunctionDefinition","src":"67308:109:16","nodes":[],"documentation":{"id":14922,"nodeType":"StructuredDocumentation","src":"67184:119:16","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67317:11:16","parameters":{"id":14931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14925,"mutability":"mutable","name":"left","nameLocation":"67348:4:16","nodeType":"VariableDeclaration","scope":14933,"src":"67329:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14923,"name":"address","nodeType":"ElementaryTypeName","src":"67329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14924,"nodeType":"ArrayTypeName","src":"67329:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14928,"mutability":"mutable","name":"right","nameLocation":"67373:5:16","nodeType":"VariableDeclaration","scope":14933,"src":"67354:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14926,"name":"address","nodeType":"ElementaryTypeName","src":"67354:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14927,"nodeType":"ArrayTypeName","src":"67354:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14930,"mutability":"mutable","name":"error","nameLocation":"67396:5:16","nodeType":"VariableDeclaration","scope":14933,"src":"67380:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14929,"name":"string","nodeType":"ElementaryTypeName","src":"67380:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67328:74:16"},"returnParameters":{"id":14932,"nodeType":"ParameterList","parameters":[],"src":"67416:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14943,"nodeType":"FunctionDefinition","src":"67490:86:16","nodes":[],"documentation":{"id":14934,"nodeType":"StructuredDocumentation","src":"67423:62:16","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67499:11:16","parameters":{"id":14941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14937,"mutability":"mutable","name":"left","nameLocation":"67530:4:16","nodeType":"VariableDeclaration","scope":14943,"src":"67511:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67511:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14936,"nodeType":"ArrayTypeName","src":"67511:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14940,"mutability":"mutable","name":"right","nameLocation":"67555:5:16","nodeType":"VariableDeclaration","scope":14943,"src":"67536:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67536:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14939,"nodeType":"ArrayTypeName","src":"67536:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"67510:51:16"},"returnParameters":{"id":14942,"nodeType":"ParameterList","parameters":[],"src":"67575:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14955,"nodeType":"FunctionDefinition","src":"67706:109:16","nodes":[],"documentation":{"id":14944,"nodeType":"StructuredDocumentation","src":"67582:119:16","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67715:11:16","parameters":{"id":14953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14947,"mutability":"mutable","name":"left","nameLocation":"67746:4:16","nodeType":"VariableDeclaration","scope":14955,"src":"67727:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67727:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14946,"nodeType":"ArrayTypeName","src":"67727:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14950,"mutability":"mutable","name":"right","nameLocation":"67771:5:16","nodeType":"VariableDeclaration","scope":14955,"src":"67752:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67752:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14949,"nodeType":"ArrayTypeName","src":"67752:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14952,"mutability":"mutable","name":"error","nameLocation":"67794:5:16","nodeType":"VariableDeclaration","scope":14955,"src":"67778:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14951,"name":"string","nodeType":"ElementaryTypeName","src":"67778:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67726:74:16"},"returnParameters":{"id":14954,"nodeType":"ParameterList","parameters":[],"src":"67814:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14965,"nodeType":"FunctionDefinition","src":"67887:84:16","nodes":[],"documentation":{"id":14956,"nodeType":"StructuredDocumentation","src":"67821:61:16","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67896:11:16","parameters":{"id":14963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14959,"mutability":"mutable","name":"left","nameLocation":"67926:4:16","nodeType":"VariableDeclaration","scope":14965,"src":"67908:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14957,"name":"string","nodeType":"ElementaryTypeName","src":"67908:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14958,"nodeType":"ArrayTypeName","src":"67908:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14962,"mutability":"mutable","name":"right","nameLocation":"67950:5:16","nodeType":"VariableDeclaration","scope":14965,"src":"67932:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14960,"name":"string","nodeType":"ElementaryTypeName","src":"67932:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14961,"nodeType":"ArrayTypeName","src":"67932:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"67907:49:16"},"returnParameters":{"id":14964,"nodeType":"ParameterList","parameters":[],"src":"67970:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14977,"nodeType":"FunctionDefinition","src":"68100:107:16","nodes":[],"documentation":{"id":14966,"nodeType":"StructuredDocumentation","src":"67977:118:16","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68109:11:16","parameters":{"id":14975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14969,"mutability":"mutable","name":"left","nameLocation":"68139:4:16","nodeType":"VariableDeclaration","scope":14977,"src":"68121:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14967,"name":"string","nodeType":"ElementaryTypeName","src":"68121:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14968,"nodeType":"ArrayTypeName","src":"68121:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14972,"mutability":"mutable","name":"right","nameLocation":"68163:5:16","nodeType":"VariableDeclaration","scope":14977,"src":"68145:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14970,"name":"string","nodeType":"ElementaryTypeName","src":"68145:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14971,"nodeType":"ArrayTypeName","src":"68145:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14974,"mutability":"mutable","name":"error","nameLocation":"68186:5:16","nodeType":"VariableDeclaration","scope":14977,"src":"68170:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14973,"name":"string","nodeType":"ElementaryTypeName","src":"68170:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68120:72:16"},"returnParameters":{"id":14976,"nodeType":"ParameterList","parameters":[],"src":"68206:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14987,"nodeType":"FunctionDefinition","src":"68278:82:16","nodes":[],"documentation":{"id":14978,"nodeType":"StructuredDocumentation","src":"68213:60:16","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68287:11:16","parameters":{"id":14985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14981,"mutability":"mutable","name":"left","nameLocation":"68316:4:16","nodeType":"VariableDeclaration","scope":14987,"src":"68299:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14979,"name":"bytes","nodeType":"ElementaryTypeName","src":"68299:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14980,"nodeType":"ArrayTypeName","src":"68299:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14984,"mutability":"mutable","name":"right","nameLocation":"68339:5:16","nodeType":"VariableDeclaration","scope":14987,"src":"68322:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14982,"name":"bytes","nodeType":"ElementaryTypeName","src":"68322:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14983,"nodeType":"ArrayTypeName","src":"68322:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"68298:47:16"},"returnParameters":{"id":14986,"nodeType":"ParameterList","parameters":[],"src":"68359:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14999,"nodeType":"FunctionDefinition","src":"68488:105:16","nodes":[],"documentation":{"id":14988,"nodeType":"StructuredDocumentation","src":"68366:117:16","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68497:11:16","parameters":{"id":14997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14991,"mutability":"mutable","name":"left","nameLocation":"68526:4:16","nodeType":"VariableDeclaration","scope":14999,"src":"68509:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14989,"name":"bytes","nodeType":"ElementaryTypeName","src":"68509:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14990,"nodeType":"ArrayTypeName","src":"68509:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14994,"mutability":"mutable","name":"right","nameLocation":"68549:5:16","nodeType":"VariableDeclaration","scope":14999,"src":"68532:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14992,"name":"bytes","nodeType":"ElementaryTypeName","src":"68532:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14993,"nodeType":"ArrayTypeName","src":"68532:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14996,"mutability":"mutable","name":"error","nameLocation":"68572:5:16","nodeType":"VariableDeclaration","scope":14999,"src":"68556:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14995,"name":"string","nodeType":"ElementaryTypeName","src":"68556:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68508:70:16"},"returnParameters":{"id":14998,"nodeType":"ParameterList","parameters":[],"src":"68592:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15009,"nodeType":"FunctionDefinition","src":"68713:87:16","nodes":[],"documentation":{"id":15000,"nodeType":"StructuredDocumentation","src":"68599:109:16","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68722:11:16","parameters":{"id":15007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15002,"mutability":"mutable","name":"left","nameLocation":"68742:4:16","nodeType":"VariableDeclaration","scope":15009,"src":"68734:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15001,"name":"uint256","nodeType":"ElementaryTypeName","src":"68734:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15004,"mutability":"mutable","name":"right","nameLocation":"68756:5:16","nodeType":"VariableDeclaration","scope":15009,"src":"68748:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15003,"name":"uint256","nodeType":"ElementaryTypeName","src":"68748:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15006,"mutability":"mutable","name":"error","nameLocation":"68779:5:16","nodeType":"VariableDeclaration","scope":15009,"src":"68763:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15005,"name":"string","nodeType":"ElementaryTypeName","src":"68763:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68733:52:16"},"returnParameters":{"id":15008,"nodeType":"ParameterList","parameters":[],"src":"68799:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15017,"nodeType":"FunctionDefinition","src":"68862:62:16","nodes":[],"documentation":{"id":15010,"nodeType":"StructuredDocumentation","src":"68806:51:16","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68871:11:16","parameters":{"id":15015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15012,"mutability":"mutable","name":"left","nameLocation":"68890:4:16","nodeType":"VariableDeclaration","scope":15017,"src":"68883:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15011,"name":"int256","nodeType":"ElementaryTypeName","src":"68883:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15014,"mutability":"mutable","name":"right","nameLocation":"68903:5:16","nodeType":"VariableDeclaration","scope":15017,"src":"68896:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15013,"name":"int256","nodeType":"ElementaryTypeName","src":"68896:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68882:27:16"},"returnParameters":{"id":15016,"nodeType":"ParameterList","parameters":[],"src":"68923:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15027,"nodeType":"FunctionDefinition","src":"69043:85:16","nodes":[],"documentation":{"id":15018,"nodeType":"StructuredDocumentation","src":"68930:108:16","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69052:11:16","parameters":{"id":15025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15020,"mutability":"mutable","name":"left","nameLocation":"69071:4:16","nodeType":"VariableDeclaration","scope":15027,"src":"69064:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15019,"name":"int256","nodeType":"ElementaryTypeName","src":"69064:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15022,"mutability":"mutable","name":"right","nameLocation":"69084:5:16","nodeType":"VariableDeclaration","scope":15027,"src":"69077:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15021,"name":"int256","nodeType":"ElementaryTypeName","src":"69077:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15024,"mutability":"mutable","name":"error","nameLocation":"69107:5:16","nodeType":"VariableDeclaration","scope":15027,"src":"69091:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15023,"name":"string","nodeType":"ElementaryTypeName","src":"69091:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69063:50:16"},"returnParameters":{"id":15026,"nodeType":"ParameterList","parameters":[],"src":"69127:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15035,"nodeType":"FunctionDefinition","src":"69191:64:16","nodes":[],"documentation":{"id":15028,"nodeType":"StructuredDocumentation","src":"69134:52:16","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69200:11:16","parameters":{"id":15033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15030,"mutability":"mutable","name":"left","nameLocation":"69220:4:16","nodeType":"VariableDeclaration","scope":15035,"src":"69212:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15029,"name":"address","nodeType":"ElementaryTypeName","src":"69212:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15032,"mutability":"mutable","name":"right","nameLocation":"69234:5:16","nodeType":"VariableDeclaration","scope":15035,"src":"69226:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15031,"name":"address","nodeType":"ElementaryTypeName","src":"69226:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"69211:29:16"},"returnParameters":{"id":15034,"nodeType":"ParameterList","parameters":[],"src":"69254:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15045,"nodeType":"FunctionDefinition","src":"69375:87:16","nodes":[],"documentation":{"id":15036,"nodeType":"StructuredDocumentation","src":"69261:109:16","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69384:11:16","parameters":{"id":15043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15038,"mutability":"mutable","name":"left","nameLocation":"69404:4:16","nodeType":"VariableDeclaration","scope":15045,"src":"69396:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15037,"name":"address","nodeType":"ElementaryTypeName","src":"69396:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15040,"mutability":"mutable","name":"right","nameLocation":"69418:5:16","nodeType":"VariableDeclaration","scope":15045,"src":"69410:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15039,"name":"address","nodeType":"ElementaryTypeName","src":"69410:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15042,"mutability":"mutable","name":"error","nameLocation":"69441:5:16","nodeType":"VariableDeclaration","scope":15045,"src":"69425:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15041,"name":"string","nodeType":"ElementaryTypeName","src":"69425:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69395:52:16"},"returnParameters":{"id":15044,"nodeType":"ParameterList","parameters":[],"src":"69461:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15053,"nodeType":"FunctionDefinition","src":"69525:64:16","nodes":[],"documentation":{"id":15046,"nodeType":"StructuredDocumentation","src":"69468:52:16","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69534:11:16","parameters":{"id":15051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15048,"mutability":"mutable","name":"left","nameLocation":"69554:4:16","nodeType":"VariableDeclaration","scope":15053,"src":"69546:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69546:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15050,"mutability":"mutable","name":"right","nameLocation":"69568:5:16","nodeType":"VariableDeclaration","scope":15053,"src":"69560:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69560:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69545:29:16"},"returnParameters":{"id":15052,"nodeType":"ParameterList","parameters":[],"src":"69588:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15063,"nodeType":"FunctionDefinition","src":"69709:87:16","nodes":[],"documentation":{"id":15054,"nodeType":"StructuredDocumentation","src":"69595:109:16","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69718:11:16","parameters":{"id":15061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15056,"mutability":"mutable","name":"left","nameLocation":"69738:4:16","nodeType":"VariableDeclaration","scope":15063,"src":"69730:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69730:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15058,"mutability":"mutable","name":"right","nameLocation":"69752:5:16","nodeType":"VariableDeclaration","scope":15063,"src":"69744:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69744:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15060,"mutability":"mutable","name":"error","nameLocation":"69775:5:16","nodeType":"VariableDeclaration","scope":15063,"src":"69759:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15059,"name":"string","nodeType":"ElementaryTypeName","src":"69759:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69729:52:16"},"returnParameters":{"id":15062,"nodeType":"ParameterList","parameters":[],"src":"69795:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15069,"nodeType":"FunctionDefinition","src":"69852:50:16","nodes":[],"documentation":{"id":15064,"nodeType":"StructuredDocumentation","src":"69802:45:16","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"69861:10:16","parameters":{"id":15067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15066,"mutability":"mutable","name":"condition","nameLocation":"69877:9:16","nodeType":"VariableDeclaration","scope":15069,"src":"69872:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15065,"name":"bool","nodeType":"ElementaryTypeName","src":"69872:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69871:16:16"},"returnParameters":{"id":15068,"nodeType":"ParameterList","parameters":[],"src":"69901:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15077,"nodeType":"FunctionDefinition","src":"70015:73:16","nodes":[],"documentation":{"id":15070,"nodeType":"StructuredDocumentation","src":"69908:102:16","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"70024:10:16","parameters":{"id":15075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15072,"mutability":"mutable","name":"condition","nameLocation":"70040:9:16","nodeType":"VariableDeclaration","scope":15077,"src":"70035:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15071,"name":"bool","nodeType":"ElementaryTypeName","src":"70035:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15074,"mutability":"mutable","name":"error","nameLocation":"70067:5:16","nodeType":"VariableDeclaration","scope":15077,"src":"70051:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15073,"name":"string","nodeType":"ElementaryTypeName","src":"70051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70034:39:16"},"returnParameters":{"id":15076,"nodeType":"ParameterList","parameters":[],"src":"70087:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15083,"nodeType":"FunctionDefinition","src":"70183:46:16","nodes":[],"documentation":{"id":15078,"nodeType":"StructuredDocumentation","src":"70094:84:16","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"70192:6:16","parameters":{"id":15081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15080,"mutability":"mutable","name":"condition","nameLocation":"70204:9:16","nodeType":"VariableDeclaration","scope":15083,"src":"70199:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15079,"name":"bool","nodeType":"ElementaryTypeName","src":"70199:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70198:16:16"},"returnParameters":{"id":15082,"nodeType":"ParameterList","parameters":[],"src":"70228:0:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15089,"nodeType":"FunctionDefinition","src":"70291:51:16","nodes":[],"documentation":{"id":15084,"nodeType":"StructuredDocumentation","src":"70235:51:16","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"70300:10:16","parameters":{"id":15087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15086,"mutability":"mutable","name":"char","nameLocation":"70327:4:16","nodeType":"VariableDeclaration","scope":15089,"src":"70311:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15085,"name":"string","nodeType":"ElementaryTypeName","src":"70311:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70310:22:16"},"returnParameters":{"id":15088,"nodeType":"ParameterList","parameters":[],"src":"70341:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15097,"nodeType":"FunctionDefinition","src":"70416:63:16","nodes":[],"documentation":{"id":15090,"nodeType":"StructuredDocumentation","src":"70348:63:16","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"70425:10:16","parameters":{"id":15095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15092,"mutability":"mutable","name":"char","nameLocation":"70452:4:16","nodeType":"VariableDeclaration","scope":15097,"src":"70436:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15091,"name":"string","nodeType":"ElementaryTypeName","src":"70436:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15094,"mutability":"mutable","name":"value","nameLocation":"70463:5:16","nodeType":"VariableDeclaration","scope":15097,"src":"70458:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15093,"name":"bool","nodeType":"ElementaryTypeName","src":"70458:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70435:34:16"},"returnParameters":{"id":15096,"nodeType":"ParameterList","parameters":[],"src":"70478:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15105,"nodeType":"FunctionDefinition","src":"70534:85:16","nodes":[],"documentation":{"id":15098,"nodeType":"StructuredDocumentation","src":"70485:44:16","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"70543:6:16","parameters":{"id":15101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15100,"mutability":"mutable","name":"rpcAlias","nameLocation":"70566:8:16","nodeType":"VariableDeclaration","scope":15105,"src":"70550:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15099,"name":"string","nodeType":"ElementaryTypeName","src":"70550:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70549:26:16"},"returnParameters":{"id":15104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15103,"mutability":"mutable","name":"json","nameLocation":"70613:4:16","nodeType":"VariableDeclaration","scope":15105,"src":"70599:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15102,"name":"string","nodeType":"ElementaryTypeName","src":"70599:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70598:20:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15113,"nodeType":"FunctionDefinition","src":"70684:67:16","nodes":[],"documentation":{"id":15106,"nodeType":"StructuredDocumentation","src":"70625:54:16","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"70693:13:16","parameters":{"id":15107,"nodeType":"ParameterList","parameters":[],"src":"70706:2:16"},"returnParameters":{"id":15112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15111,"mutability":"mutable","name":"urls","nameLocation":"70745:4:16","nodeType":"VariableDeclaration","scope":15113,"src":"70732:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12281_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":15109,"nodeType":"UserDefinedTypeName","pathNode":{"id":15108,"name":"Rpc","nameLocations":["70732:3:16"],"nodeType":"IdentifierPath","referencedDeclaration":12281,"src":"70732:3:16"},"referencedDeclaration":12281,"src":"70732:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12281_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":15110,"nodeType":"ArrayTypeName","src":"70732:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12281_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"70731:19:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15122,"nodeType":"FunctionDefinition","src":"70822:67:16","nodes":[],"documentation":{"id":15114,"nodeType":"StructuredDocumentation","src":"70757:60:16","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"70831:7:16","parameters":{"id":15115,"nodeType":"ParameterList","parameters":[],"src":"70838:2:16"},"returnParameters":{"id":15121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15120,"mutability":"mutable","name":"urls","nameLocation":"70883:4:16","nodeType":"VariableDeclaration","scope":15122,"src":"70864:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":15116,"name":"string","nodeType":"ElementaryTypeName","src":"70864:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15118,"length":{"hexValue":"32","id":15117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"70871:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"70864:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":15119,"nodeType":"ArrayTypeName","src":"70864:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"70863:25:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15128,"nodeType":"FunctionDefinition","src":"70970:42:16","nodes":[],"documentation":{"id":15123,"nodeType":"StructuredDocumentation","src":"70895:70:16","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"70979:5:16","parameters":{"id":15126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15125,"mutability":"mutable","name":"duration","nameLocation":"70993:8:16","nodeType":"VariableDeclaration","scope":15128,"src":"70985:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15124,"name":"uint256","nodeType":"ElementaryTypeName","src":"70985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70984:18:16"},"returnParameters":{"id":15127,"nodeType":"ParameterList","parameters":[],"src":"71011:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15138,"nodeType":"FunctionDefinition","src":"71097:95:16","nodes":[],"documentation":{"id":15129,"nodeType":"StructuredDocumentation","src":"71049:43:16","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"71106:13:16","parameters":{"id":15134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15131,"mutability":"mutable","name":"toml","nameLocation":"71136:4:16","nodeType":"VariableDeclaration","scope":15138,"src":"71120:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15130,"name":"string","nodeType":"ElementaryTypeName","src":"71120:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15133,"mutability":"mutable","name":"key","nameLocation":"71158:3:16","nodeType":"VariableDeclaration","scope":15138,"src":"71142:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15132,"name":"string","nodeType":"ElementaryTypeName","src":"71142:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71119:43:16"},"returnParameters":{"id":15137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15138,"src":"71186:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15135,"name":"bool","nodeType":"ElementaryTypeName","src":"71186:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"71185:6:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15148,"nodeType":"FunctionDefinition","src":"71273:101:16","nodes":[],"documentation":{"id":15139,"nodeType":"StructuredDocumentation","src":"71198:70:16","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"71282:16:16","parameters":{"id":15144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15141,"mutability":"mutable","name":"toml","nameLocation":"71315:4:16","nodeType":"VariableDeclaration","scope":15148,"src":"71299:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15140,"name":"string","nodeType":"ElementaryTypeName","src":"71299:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15143,"mutability":"mutable","name":"key","nameLocation":"71337:3:16","nodeType":"VariableDeclaration","scope":15148,"src":"71321:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15142,"name":"string","nodeType":"ElementaryTypeName","src":"71321:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71298:43:16"},"returnParameters":{"id":15147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15148,"src":"71365:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15145,"name":"address","nodeType":"ElementaryTypeName","src":"71365:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"71364:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15159,"nodeType":"FunctionDefinition","src":"71457:139:16","nodes":[],"documentation":{"id":15149,"nodeType":"StructuredDocumentation","src":"71380:72:16","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"71466:21:16","parameters":{"id":15154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15151,"mutability":"mutable","name":"toml","nameLocation":"71504:4:16","nodeType":"VariableDeclaration","scope":15159,"src":"71488:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15150,"name":"string","nodeType":"ElementaryTypeName","src":"71488:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15153,"mutability":"mutable","name":"key","nameLocation":"71526:3:16","nodeType":"VariableDeclaration","scope":15159,"src":"71510:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15152,"name":"string","nodeType":"ElementaryTypeName","src":"71510:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71487:43:16"},"returnParameters":{"id":15158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15159,"src":"71578:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15155,"name":"address","nodeType":"ElementaryTypeName","src":"71578:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15156,"nodeType":"ArrayTypeName","src":"71578:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71577:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15169,"nodeType":"FunctionDefinition","src":"71674:95:16","nodes":[],"documentation":{"id":15160,"nodeType":"StructuredDocumentation","src":"71602:67:16","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"71683:13:16","parameters":{"id":15165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15162,"mutability":"mutable","name":"toml","nameLocation":"71713:4:16","nodeType":"VariableDeclaration","scope":15169,"src":"71697:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15161,"name":"string","nodeType":"ElementaryTypeName","src":"71697:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15164,"mutability":"mutable","name":"key","nameLocation":"71735:3:16","nodeType":"VariableDeclaration","scope":15169,"src":"71719:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15163,"name":"string","nodeType":"ElementaryTypeName","src":"71719:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71696:43:16"},"returnParameters":{"id":15168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15169,"src":"71763:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15166,"name":"bool","nodeType":"ElementaryTypeName","src":"71763:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"71762:6:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15180,"nodeType":"FunctionDefinition","src":"71849:109:16","nodes":[],"documentation":{"id":15170,"nodeType":"StructuredDocumentation","src":"71775:69:16","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"71858:18:16","parameters":{"id":15175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15172,"mutability":"mutable","name":"toml","nameLocation":"71893:4:16","nodeType":"VariableDeclaration","scope":15180,"src":"71877:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15171,"name":"string","nodeType":"ElementaryTypeName","src":"71877:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15174,"mutability":"mutable","name":"key","nameLocation":"71915:3:16","nodeType":"VariableDeclaration","scope":15180,"src":"71899:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15173,"name":"string","nodeType":"ElementaryTypeName","src":"71899:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71876:43:16"},"returnParameters":{"id":15179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15180,"src":"71943:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15176,"name":"bool","nodeType":"ElementaryTypeName","src":"71943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15177,"nodeType":"ArrayTypeName","src":"71943:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"71942:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15190,"nodeType":"FunctionDefinition","src":"72037:104:16","nodes":[],"documentation":{"id":15181,"nodeType":"StructuredDocumentation","src":"71964:68:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"72046:14:16","parameters":{"id":15186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15183,"mutability":"mutable","name":"toml","nameLocation":"72077:4:16","nodeType":"VariableDeclaration","scope":15190,"src":"72061:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15182,"name":"string","nodeType":"ElementaryTypeName","src":"72061:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15185,"mutability":"mutable","name":"key","nameLocation":"72099:3:16","nodeType":"VariableDeclaration","scope":15190,"src":"72083:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15184,"name":"string","nodeType":"ElementaryTypeName","src":"72083:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72060:43:16"},"returnParameters":{"id":15189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15190,"src":"72127:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15187,"name":"bytes","nodeType":"ElementaryTypeName","src":"72127:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"72126:14:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15200,"nodeType":"FunctionDefinition","src":"72222:101:16","nodes":[],"documentation":{"id":15191,"nodeType":"StructuredDocumentation","src":"72147:70:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"72231:16:16","parameters":{"id":15196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15193,"mutability":"mutable","name":"toml","nameLocation":"72264:4:16","nodeType":"VariableDeclaration","scope":15200,"src":"72248:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15192,"name":"string","nodeType":"ElementaryTypeName","src":"72248:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15195,"mutability":"mutable","name":"key","nameLocation":"72286:3:16","nodeType":"VariableDeclaration","scope":15200,"src":"72270:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15194,"name":"string","nodeType":"ElementaryTypeName","src":"72270:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72247:43:16"},"returnParameters":{"id":15199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15200,"src":"72314:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72314:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72313:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15211,"nodeType":"FunctionDefinition","src":"72406:139:16","nodes":[],"documentation":{"id":15201,"nodeType":"StructuredDocumentation","src":"72329:72:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"72415:21:16","parameters":{"id":15206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15203,"mutability":"mutable","name":"toml","nameLocation":"72453:4:16","nodeType":"VariableDeclaration","scope":15211,"src":"72437:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15202,"name":"string","nodeType":"ElementaryTypeName","src":"72437:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15205,"mutability":"mutable","name":"key","nameLocation":"72475:3:16","nodeType":"VariableDeclaration","scope":15211,"src":"72459:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15204,"name":"string","nodeType":"ElementaryTypeName","src":"72459:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72436:43:16"},"returnParameters":{"id":15210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15211,"src":"72527:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72527:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15208,"nodeType":"ArrayTypeName","src":"72527:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"72526:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15222,"nodeType":"FunctionDefinition","src":"72626:111:16","nodes":[],"documentation":{"id":15212,"nodeType":"StructuredDocumentation","src":"72551:70:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"72635:19:16","parameters":{"id":15217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15214,"mutability":"mutable","name":"toml","nameLocation":"72671:4:16","nodeType":"VariableDeclaration","scope":15222,"src":"72655:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15213,"name":"string","nodeType":"ElementaryTypeName","src":"72655:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15216,"mutability":"mutable","name":"key","nameLocation":"72693:3:16","nodeType":"VariableDeclaration","scope":15222,"src":"72677:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15215,"name":"string","nodeType":"ElementaryTypeName","src":"72677:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72654:43:16"},"returnParameters":{"id":15221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15222,"src":"72721:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15218,"name":"bytes","nodeType":"ElementaryTypeName","src":"72721:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15219,"nodeType":"ArrayTypeName","src":"72721:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"72720:16:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15232,"nodeType":"FunctionDefinition","src":"72817:96:16","nodes":[],"documentation":{"id":15223,"nodeType":"StructuredDocumentation","src":"72743:69:16","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"72826:12:16","parameters":{"id":15228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15225,"mutability":"mutable","name":"toml","nameLocation":"72855:4:16","nodeType":"VariableDeclaration","scope":15232,"src":"72839:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15224,"name":"string","nodeType":"ElementaryTypeName","src":"72839:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15227,"mutability":"mutable","name":"key","nameLocation":"72877:3:16","nodeType":"VariableDeclaration","scope":15232,"src":"72861:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15226,"name":"string","nodeType":"ElementaryTypeName","src":"72861:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72838:43:16"},"returnParameters":{"id":15231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15232,"src":"72905:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15229,"name":"int256","nodeType":"ElementaryTypeName","src":"72905:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"72904:8:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15243,"nodeType":"FunctionDefinition","src":"72995:110:16","nodes":[],"documentation":{"id":15233,"nodeType":"StructuredDocumentation","src":"72919:71:16","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"73004:17:16","parameters":{"id":15238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15235,"mutability":"mutable","name":"toml","nameLocation":"73038:4:16","nodeType":"VariableDeclaration","scope":15243,"src":"73022:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15234,"name":"string","nodeType":"ElementaryTypeName","src":"73022:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15237,"mutability":"mutable","name":"key","nameLocation":"73060:3:16","nodeType":"VariableDeclaration","scope":15243,"src":"73044:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15236,"name":"string","nodeType":"ElementaryTypeName","src":"73044:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73021:43:16"},"returnParameters":{"id":15242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15243,"src":"73088:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15239,"name":"int256","nodeType":"ElementaryTypeName","src":"73088:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15240,"nodeType":"ArrayTypeName","src":"73088:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"73087:17:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15254,"nodeType":"FunctionDefinition","src":"73169:111:16","nodes":[],"documentation":{"id":15244,"nodeType":"StructuredDocumentation","src":"73111:53:16","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"73178:13:16","parameters":{"id":15249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15246,"mutability":"mutable","name":"toml","nameLocation":"73208:4:16","nodeType":"VariableDeclaration","scope":15254,"src":"73192:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15245,"name":"string","nodeType":"ElementaryTypeName","src":"73192:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15248,"mutability":"mutable","name":"key","nameLocation":"73230:3:16","nodeType":"VariableDeclaration","scope":15254,"src":"73214:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15247,"name":"string","nodeType":"ElementaryTypeName","src":"73214:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73191:43:16"},"returnParameters":{"id":15253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15252,"mutability":"mutable","name":"keys","nameLocation":"73274:4:16","nodeType":"VariableDeclaration","scope":15254,"src":"73258:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15250,"name":"string","nodeType":"ElementaryTypeName","src":"73258:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15251,"nodeType":"ArrayTypeName","src":"73258:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73257:22:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15264,"nodeType":"FunctionDefinition","src":"73360:106:16","nodes":[],"documentation":{"id":15255,"nodeType":"StructuredDocumentation","src":"73286:69:16","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"73369:15:16","parameters":{"id":15260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15257,"mutability":"mutable","name":"toml","nameLocation":"73401:4:16","nodeType":"VariableDeclaration","scope":15264,"src":"73385:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15256,"name":"string","nodeType":"ElementaryTypeName","src":"73385:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15259,"mutability":"mutable","name":"key","nameLocation":"73423:3:16","nodeType":"VariableDeclaration","scope":15264,"src":"73407:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15258,"name":"string","nodeType":"ElementaryTypeName","src":"73407:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73384:43:16"},"returnParameters":{"id":15263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15264,"src":"73451:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15261,"name":"string","nodeType":"ElementaryTypeName","src":"73451:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73450:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15275,"nodeType":"FunctionDefinition","src":"73548:113:16","nodes":[],"documentation":{"id":15265,"nodeType":"StructuredDocumentation","src":"73472:71:16","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"73557:20:16","parameters":{"id":15270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15267,"mutability":"mutable","name":"toml","nameLocation":"73594:4:16","nodeType":"VariableDeclaration","scope":15275,"src":"73578:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15266,"name":"string","nodeType":"ElementaryTypeName","src":"73578:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15269,"mutability":"mutable","name":"key","nameLocation":"73616:3:16","nodeType":"VariableDeclaration","scope":15275,"src":"73600:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15268,"name":"string","nodeType":"ElementaryTypeName","src":"73600:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73577:43:16"},"returnParameters":{"id":15274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15275,"src":"73644:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15271,"name":"string","nodeType":"ElementaryTypeName","src":"73644:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15272,"nodeType":"ArrayTypeName","src":"73644:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73643:17:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15285,"nodeType":"FunctionDefinition","src":"73742:98:16","nodes":[],"documentation":{"id":15276,"nodeType":"StructuredDocumentation","src":"73667:70:16","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"73751:13:16","parameters":{"id":15281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15278,"mutability":"mutable","name":"toml","nameLocation":"73781:4:16","nodeType":"VariableDeclaration","scope":15285,"src":"73765:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15277,"name":"string","nodeType":"ElementaryTypeName","src":"73765:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15280,"mutability":"mutable","name":"key","nameLocation":"73803:3:16","nodeType":"VariableDeclaration","scope":15285,"src":"73787:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15279,"name":"string","nodeType":"ElementaryTypeName","src":"73787:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73764:43:16"},"returnParameters":{"id":15284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15285,"src":"73831:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15282,"name":"uint256","nodeType":"ElementaryTypeName","src":"73831:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73830:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15296,"nodeType":"FunctionDefinition","src":"73923:112:16","nodes":[],"documentation":{"id":15286,"nodeType":"StructuredDocumentation","src":"73846:72:16","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"73932:18:16","parameters":{"id":15291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15288,"mutability":"mutable","name":"toml","nameLocation":"73967:4:16","nodeType":"VariableDeclaration","scope":15296,"src":"73951:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15287,"name":"string","nodeType":"ElementaryTypeName","src":"73951:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15290,"mutability":"mutable","name":"key","nameLocation":"73989:3:16","nodeType":"VariableDeclaration","scope":15296,"src":"73973:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15289,"name":"string","nodeType":"ElementaryTypeName","src":"73973:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73950:43:16"},"returnParameters":{"id":15295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15296,"src":"74017:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15292,"name":"uint256","nodeType":"ElementaryTypeName","src":"74017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15293,"nodeType":"ArrayTypeName","src":"74017:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"74016:18:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15304,"nodeType":"FunctionDefinition","src":"74075:93:16","nodes":[],"documentation":{"id":15297,"nodeType":"StructuredDocumentation","src":"74041:29:16","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"74084:9:16","parameters":{"id":15300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15299,"mutability":"mutable","name":"toml","nameLocation":"74110:4:16","nodeType":"VariableDeclaration","scope":15304,"src":"74094:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15298,"name":"string","nodeType":"ElementaryTypeName","src":"74094:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74093:22:16"},"returnParameters":{"id":15303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15302,"mutability":"mutable","name":"abiEncodedData","nameLocation":"74152:14:16","nodeType":"VariableDeclaration","scope":15304,"src":"74139:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15301,"name":"bytes","nodeType":"ElementaryTypeName","src":"74139:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74138:29:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15314,"nodeType":"FunctionDefinition","src":"74217:114:16","nodes":[],"documentation":{"id":15305,"nodeType":"StructuredDocumentation","src":"74174:38:16","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"74226:9:16","parameters":{"id":15310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15307,"mutability":"mutable","name":"toml","nameLocation":"74252:4:16","nodeType":"VariableDeclaration","scope":15314,"src":"74236:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15306,"name":"string","nodeType":"ElementaryTypeName","src":"74236:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15309,"mutability":"mutable","name":"key","nameLocation":"74274:3:16","nodeType":"VariableDeclaration","scope":15314,"src":"74258:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15308,"name":"string","nodeType":"ElementaryTypeName","src":"74258:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74235:43:16"},"returnParameters":{"id":15313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15312,"mutability":"mutable","name":"abiEncodedData","nameLocation":"74315:14:16","nodeType":"VariableDeclaration","scope":15314,"src":"74302:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15311,"name":"bytes","nodeType":"ElementaryTypeName","src":"74302:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74301:29:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15322,"nodeType":"FunctionDefinition","src":"74424:72:16","nodes":[],"documentation":{"id":15315,"nodeType":"StructuredDocumentation","src":"74337:82:16","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"74433:9:16","parameters":{"id":15320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15317,"mutability":"mutable","name":"json","nameLocation":"74459:4:16","nodeType":"VariableDeclaration","scope":15322,"src":"74443:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15316,"name":"string","nodeType":"ElementaryTypeName","src":"74443:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15319,"mutability":"mutable","name":"path","nameLocation":"74481:4:16","nodeType":"VariableDeclaration","scope":15322,"src":"74465:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15318,"name":"string","nodeType":"ElementaryTypeName","src":"74465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74442:44:16"},"returnParameters":{"id":15321,"nodeType":"ParameterList","parameters":[],"src":"74495:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15332,"nodeType":"FunctionDefinition","src":"74765:98:16","nodes":[],"documentation":{"id":15323,"nodeType":"StructuredDocumentation","src":"74502:258:16","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"74774:9:16","parameters":{"id":15330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15325,"mutability":"mutable","name":"json","nameLocation":"74800:4:16","nodeType":"VariableDeclaration","scope":15332,"src":"74784:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15324,"name":"string","nodeType":"ElementaryTypeName","src":"74784:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15327,"mutability":"mutable","name":"path","nameLocation":"74822:4:16","nodeType":"VariableDeclaration","scope":15332,"src":"74806:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15326,"name":"string","nodeType":"ElementaryTypeName","src":"74806:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15329,"mutability":"mutable","name":"valueKey","nameLocation":"74844:8:16","nodeType":"VariableDeclaration","scope":15332,"src":"74828:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15328,"name":"string","nodeType":"ElementaryTypeName","src":"74828:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74783:70:16"},"returnParameters":{"id":15331,"nodeType":"ParameterList","parameters":[],"src":"74862:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15344,"nodeType":"FunctionDefinition","src":"75002:141:16","nodes":[],"documentation":{"id":15333,"nodeType":"StructuredDocumentation","src":"74905:92:16","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"75011:21:16","parameters":{"id":15340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15335,"mutability":"mutable","name":"salt","nameLocation":"75041:4:16","nodeType":"VariableDeclaration","scope":15344,"src":"75033:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75033:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15337,"mutability":"mutable","name":"initCodeHash","nameLocation":"75055:12:16","nodeType":"VariableDeclaration","scope":15344,"src":"75047:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75047:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15339,"mutability":"mutable","name":"deployer","nameLocation":"75077:8:16","nodeType":"VariableDeclaration","scope":15344,"src":"75069:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15338,"name":"address","nodeType":"ElementaryTypeName","src":"75069:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75032:54:16"},"returnParameters":{"id":15343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15344,"src":"75134:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15341,"name":"address","nodeType":"ElementaryTypeName","src":"75134:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75133:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15354,"nodeType":"FunctionDefinition","src":"75248:99:16","nodes":[],"documentation":{"id":15345,"nodeType":"StructuredDocumentation","src":"75149:94:16","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"75257:21:16","parameters":{"id":15350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15347,"mutability":"mutable","name":"salt","nameLocation":"75287:4:16","nodeType":"VariableDeclaration","scope":15354,"src":"75279:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75279:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15349,"mutability":"mutable","name":"initCodeHash","nameLocation":"75301:12:16","nodeType":"VariableDeclaration","scope":15354,"src":"75293:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75293:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75278:36:16"},"returnParameters":{"id":15353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15354,"src":"75338:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15351,"name":"address","nodeType":"ElementaryTypeName","src":"75338:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75337:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15364,"nodeType":"FunctionDefinition","src":"75452:95:16","nodes":[],"documentation":{"id":15355,"nodeType":"StructuredDocumentation","src":"75353:94:16","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"75461:20:16","parameters":{"id":15360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15357,"mutability":"mutable","name":"deployer","nameLocation":"75490:8:16","nodeType":"VariableDeclaration","scope":15364,"src":"75482:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15356,"name":"address","nodeType":"ElementaryTypeName","src":"75482:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15359,"mutability":"mutable","name":"nonce","nameLocation":"75508:5:16","nodeType":"VariableDeclaration","scope":15364,"src":"75500:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15358,"name":"uint256","nodeType":"ElementaryTypeName","src":"75500:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75481:33:16"},"returnParameters":{"id":15363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15364,"src":"75538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15361,"name":"address","nodeType":"ElementaryTypeName","src":"75538:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75537:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15373,"nodeType":"FunctionDefinition","src":"75657:91:16","nodes":[],"documentation":{"id":15365,"nodeType":"StructuredDocumentation","src":"75553:99:16","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"75666:12:16","parameters":{"id":15368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15367,"mutability":"mutable","name":"walletLabel","nameLocation":"75695:11:16","nodeType":"VariableDeclaration","scope":15373,"src":"75679:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15366,"name":"string","nodeType":"ElementaryTypeName","src":"75679:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75678:29:16"},"returnParameters":{"id":15372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15371,"mutability":"mutable","name":"wallet","nameLocation":"75740:6:16","nodeType":"VariableDeclaration","scope":15373,"src":"75726:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15370,"nodeType":"UserDefinedTypeName","pathNode":{"id":15369,"name":"Wallet","nameLocations":["75726:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":12336,"src":"75726:6:16"},"referencedDeclaration":12336,"src":"75726:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75725:22:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15382,"nodeType":"FunctionDefinition","src":"75826:82:16","nodes":[],"documentation":{"id":15374,"nodeType":"StructuredDocumentation","src":"75754:67:16","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"75835:12:16","parameters":{"id":15377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15376,"mutability":"mutable","name":"privateKey","nameLocation":"75856:10:16","nodeType":"VariableDeclaration","scope":15382,"src":"75848:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15375,"name":"uint256","nodeType":"ElementaryTypeName","src":"75848:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75847:20:16"},"returnParameters":{"id":15381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15380,"mutability":"mutable","name":"wallet","nameLocation":"75900:6:16","nodeType":"VariableDeclaration","scope":15382,"src":"75886:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15379,"nodeType":"UserDefinedTypeName","pathNode":{"id":15378,"name":"Wallet","nameLocations":["75886:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":12336,"src":"75886:6:16"},"referencedDeclaration":12336,"src":"75886:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75885:22:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15393,"nodeType":"FunctionDefinition","src":"76022:111:16","nodes":[],"documentation":{"id":15383,"nodeType":"StructuredDocumentation","src":"75914:103:16","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"76031:12:16","parameters":{"id":15388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15385,"mutability":"mutable","name":"privateKey","nameLocation":"76052:10:16","nodeType":"VariableDeclaration","scope":15393,"src":"76044:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15384,"name":"uint256","nodeType":"ElementaryTypeName","src":"76044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15387,"mutability":"mutable","name":"walletLabel","nameLocation":"76080:11:16","nodeType":"VariableDeclaration","scope":15393,"src":"76064:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15386,"name":"string","nodeType":"ElementaryTypeName","src":"76064:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76043:49:16"},"returnParameters":{"id":15392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15391,"mutability":"mutable","name":"wallet","nameLocation":"76125:6:16","nodeType":"VariableDeclaration","scope":15393,"src":"76111:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15390,"nodeType":"UserDefinedTypeName","pathNode":{"id":15389,"name":"Wallet","nameLocations":["76111:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":12336,"src":"76111:6:16"},"referencedDeclaration":12336,"src":"76111:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"76110:22:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15403,"nodeType":"FunctionDefinition","src":"76281:102:16","nodes":[],"documentation":{"id":15394,"nodeType":"StructuredDocumentation","src":"76139:137:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76290:9:16","parameters":{"id":15399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15396,"mutability":"mutable","name":"mnemonic","nameLocation":"76316:8:16","nodeType":"VariableDeclaration","scope":15403,"src":"76300:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15395,"name":"string","nodeType":"ElementaryTypeName","src":"76300:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15398,"mutability":"mutable","name":"index","nameLocation":"76333:5:16","nodeType":"VariableDeclaration","scope":15403,"src":"76326:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15397,"name":"uint32","nodeType":"ElementaryTypeName","src":"76326:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"76299:40:16"},"returnParameters":{"id":15402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15401,"mutability":"mutable","name":"privateKey","nameLocation":"76371:10:16","nodeType":"VariableDeclaration","scope":15403,"src":"76363:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15400,"name":"uint256","nodeType":"ElementaryTypeName","src":"76363:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76362:20:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15415,"nodeType":"FunctionDefinition","src":"76512:158:16","nodes":[],"documentation":{"id":15404,"nodeType":"StructuredDocumentation","src":"76389:118:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76521:9:16","parameters":{"id":15411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15406,"mutability":"mutable","name":"mnemonic","nameLocation":"76547:8:16","nodeType":"VariableDeclaration","scope":15415,"src":"76531:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15405,"name":"string","nodeType":"ElementaryTypeName","src":"76531:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15408,"mutability":"mutable","name":"derivationPath","nameLocation":"76573:14:16","nodeType":"VariableDeclaration","scope":15415,"src":"76557:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15407,"name":"string","nodeType":"ElementaryTypeName","src":"76557:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15410,"mutability":"mutable","name":"index","nameLocation":"76596:5:16","nodeType":"VariableDeclaration","scope":15415,"src":"76589:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15409,"name":"uint32","nodeType":"ElementaryTypeName","src":"76589:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"76530:72:16"},"returnParameters":{"id":15414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15413,"mutability":"mutable","name":"privateKey","nameLocation":"76658:10:16","nodeType":"VariableDeclaration","scope":15415,"src":"76650:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15412,"name":"uint256","nodeType":"ElementaryTypeName","src":"76650:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76649:20:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15427,"nodeType":"FunctionDefinition","src":"76844:152:16","nodes":[],"documentation":{"id":15416,"nodeType":"StructuredDocumentation","src":"76676:163:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76853:9:16","parameters":{"id":15423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15418,"mutability":"mutable","name":"mnemonic","nameLocation":"76879:8:16","nodeType":"VariableDeclaration","scope":15427,"src":"76863:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15417,"name":"string","nodeType":"ElementaryTypeName","src":"76863:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15420,"mutability":"mutable","name":"index","nameLocation":"76896:5:16","nodeType":"VariableDeclaration","scope":15427,"src":"76889:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15419,"name":"uint32","nodeType":"ElementaryTypeName","src":"76889:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15422,"mutability":"mutable","name":"language","nameLocation":"76919:8:16","nodeType":"VariableDeclaration","scope":15427,"src":"76903:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15421,"name":"string","nodeType":"ElementaryTypeName","src":"76903:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76862:66:16"},"returnParameters":{"id":15426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15425,"mutability":"mutable","name":"privateKey","nameLocation":"76984:10:16","nodeType":"VariableDeclaration","scope":15427,"src":"76976:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15424,"name":"uint256","nodeType":"ElementaryTypeName","src":"76976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76975:20:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15441,"nodeType":"FunctionDefinition","src":"77151:184:16","nodes":[],"documentation":{"id":15428,"nodeType":"StructuredDocumentation","src":"77002:144:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"77160:9:16","parameters":{"id":15437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15430,"mutability":"mutable","name":"mnemonic","nameLocation":"77186:8:16","nodeType":"VariableDeclaration","scope":15441,"src":"77170:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15429,"name":"string","nodeType":"ElementaryTypeName","src":"77170:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15432,"mutability":"mutable","name":"derivationPath","nameLocation":"77212:14:16","nodeType":"VariableDeclaration","scope":15441,"src":"77196:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15431,"name":"string","nodeType":"ElementaryTypeName","src":"77196:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15434,"mutability":"mutable","name":"index","nameLocation":"77235:5:16","nodeType":"VariableDeclaration","scope":15441,"src":"77228:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15433,"name":"uint32","nodeType":"ElementaryTypeName","src":"77228:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15436,"mutability":"mutable","name":"language","nameLocation":"77258:8:16","nodeType":"VariableDeclaration","scope":15441,"src":"77242:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15435,"name":"string","nodeType":"ElementaryTypeName","src":"77242:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77169:98:16"},"returnParameters":{"id":15440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15439,"mutability":"mutable","name":"privateKey","nameLocation":"77323:10:16","nodeType":"VariableDeclaration","scope":15441,"src":"77315:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15438,"name":"uint256","nodeType":"ElementaryTypeName","src":"77315:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77314:20:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15449,"nodeType":"FunctionDefinition","src":"77391:75:16","nodes":[],"documentation":{"id":15442,"nodeType":"StructuredDocumentation","src":"77341:45:16","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"77400:11:16","parameters":{"id":15445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15444,"mutability":"mutable","name":"name","nameLocation":"77428:4:16","nodeType":"VariableDeclaration","scope":15449,"src":"77412:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15443,"name":"string","nodeType":"ElementaryTypeName","src":"77412:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77411:22:16"},"returnParameters":{"id":15448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15449,"src":"77457:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77457:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77456:9:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15457,"nodeType":"FunctionDefinition","src":"77522:86:16","nodes":[],"documentation":{"id":15450,"nodeType":"StructuredDocumentation","src":"77472:45:16","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"77531:8:16","parameters":{"id":15453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15452,"mutability":"mutable","name":"account","nameLocation":"77548:7:16","nodeType":"VariableDeclaration","scope":15457,"src":"77540:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15451,"name":"address","nodeType":"ElementaryTypeName","src":"77540:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77539:17:16"},"returnParameters":{"id":15456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15455,"mutability":"mutable","name":"currentLabel","nameLocation":"77594:12:16","nodeType":"VariableDeclaration","scope":15457,"src":"77580:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15454,"name":"string","nodeType":"ElementaryTypeName","src":"77580:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77579:28:16"},"scope":15552,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15466,"nodeType":"FunctionDefinition","src":"77646:74:16","nodes":[],"documentation":{"id":15458,"nodeType":"StructuredDocumentation","src":"77614:27:16","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"77655:8:16","parameters":{"id":15462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15461,"mutability":"mutable","name":"wallet","nameLocation":"77680:6:16","nodeType":"VariableDeclaration","scope":15466,"src":"77664:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15460,"nodeType":"UserDefinedTypeName","pathNode":{"id":15459,"name":"Wallet","nameLocations":["77664:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":12336,"src":"77664:6:16"},"referencedDeclaration":12336,"src":"77664:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"77663:24:16"},"returnParameters":{"id":15465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15464,"mutability":"mutable","name":"nonce","nameLocation":"77713:5:16","nodeType":"VariableDeclaration","scope":15466,"src":"77706:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15463,"name":"uint64","nodeType":"ElementaryTypeName","src":"77706:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"77705:14:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15474,"nodeType":"FunctionDefinition","src":"77768:67:16","nodes":[],"documentation":{"id":15467,"nodeType":"StructuredDocumentation","src":"77726:37:16","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"77777:5:16","parameters":{"id":15472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15469,"mutability":"mutable","name":"account","nameLocation":"77791:7:16","nodeType":"VariableDeclaration","scope":15474,"src":"77783:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15468,"name":"address","nodeType":"ElementaryTypeName","src":"77783:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15471,"mutability":"mutable","name":"newLabel","nameLocation":"77816:8:16","nodeType":"VariableDeclaration","scope":15474,"src":"77800:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15470,"name":"string","nodeType":"ElementaryTypeName","src":"77800:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77782:43:16"},"returnParameters":{"id":15473,"nodeType":"ParameterList","parameters":[],"src":"77834:0:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15480,"nodeType":"FunctionDefinition","src":"77877:52:16","nodes":[],"documentation":{"id":15475,"nodeType":"StructuredDocumentation","src":"77841:31:16","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"77886:13:16","parameters":{"id":15476,"nodeType":"ParameterList","parameters":[],"src":"77899:2:16"},"returnParameters":{"id":15479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15480,"src":"77920:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15477,"name":"address","nodeType":"ElementaryTypeName","src":"77920:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77919:9:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15486,"nodeType":"FunctionDefinition","src":"77975:49:16","nodes":[],"documentation":{"id":15481,"nodeType":"StructuredDocumentation","src":"77935:35:16","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"77984:10:16","parameters":{"id":15482,"nodeType":"ParameterList","parameters":[],"src":"77994:2:16"},"returnParameters":{"id":15485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15486,"src":"78015:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15483,"name":"uint256","nodeType":"ElementaryTypeName","src":"78015:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78014:9:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15496,"nodeType":"FunctionDefinition","src":"78107:73:16","nodes":[],"documentation":{"id":15487,"nodeType":"StructuredDocumentation","src":"78030:72:16","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"78116:10:16","parameters":{"id":15492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15489,"mutability":"mutable","name":"min","nameLocation":"78135:3:16","nodeType":"VariableDeclaration","scope":15496,"src":"78127:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15488,"name":"uint256","nodeType":"ElementaryTypeName","src":"78127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15491,"mutability":"mutable","name":"max","nameLocation":"78148:3:16","nodeType":"VariableDeclaration","scope":15496,"src":"78140:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15490,"name":"uint256","nodeType":"ElementaryTypeName","src":"78140:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78126:26:16"},"returnParameters":{"id":15495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15496,"src":"78171:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15493,"name":"uint256","nodeType":"ElementaryTypeName","src":"78171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78170:9:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15504,"nodeType":"FunctionDefinition","src":"78264:76:16","nodes":[],"documentation":{"id":15497,"nodeType":"StructuredDocumentation","src":"78186:73:16","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"78273:11:16","parameters":{"id":15500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15499,"mutability":"mutable","name":"privateKey","nameLocation":"78293:10:16","nodeType":"VariableDeclaration","scope":15504,"src":"78285:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15498,"name":"uint256","nodeType":"ElementaryTypeName","src":"78285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78284:20:16"},"returnParameters":{"id":15503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15502,"mutability":"mutable","name":"keyAddr","nameLocation":"78331:7:16","nodeType":"VariableDeclaration","scope":15504,"src":"78323:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15501,"name":"address","nodeType":"ElementaryTypeName","src":"78323:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78322:17:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15519,"nodeType":"FunctionDefinition","src":"78382:103:16","nodes":[],"documentation":{"id":15505,"nodeType":"StructuredDocumentation","src":"78346:31:16","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"78391:4:16","parameters":{"id":15511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15508,"mutability":"mutable","name":"wallet","nameLocation":"78412:6:16","nodeType":"VariableDeclaration","scope":15519,"src":"78396:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15507,"nodeType":"UserDefinedTypeName","pathNode":{"id":15506,"name":"Wallet","nameLocations":["78396:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":12336,"src":"78396:6:16"},"referencedDeclaration":12336,"src":"78396:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12336_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15510,"mutability":"mutable","name":"digest","nameLocation":"78428:6:16","nodeType":"VariableDeclaration","scope":15519,"src":"78420:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78420:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78395:40:16"},"returnParameters":{"id":15518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15513,"mutability":"mutable","name":"v","nameLocation":"78460:1:16","nodeType":"VariableDeclaration","scope":15519,"src":"78454:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15512,"name":"uint8","nodeType":"ElementaryTypeName","src":"78454:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15515,"mutability":"mutable","name":"r","nameLocation":"78471:1:16","nodeType":"VariableDeclaration","scope":15519,"src":"78463:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78463:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15517,"mutability":"mutable","name":"s","nameLocation":"78482:1:16","nodeType":"VariableDeclaration","scope":15519,"src":"78474:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78474:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78453:31:16"},"scope":15552,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15527,"nodeType":"FunctionDefinition","src":"78546:80:16","nodes":[],"documentation":{"id":15520,"nodeType":"StructuredDocumentation","src":"78491:50:16","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"78555:11:16","parameters":{"id":15523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15522,"mutability":"mutable","name":"data","nameLocation":"78582:4:16","nodeType":"VariableDeclaration","scope":15527,"src":"78567:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15521,"name":"bytes","nodeType":"ElementaryTypeName","src":"78567:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78566:21:16"},"returnParameters":{"id":15526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15527,"src":"78611:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15524,"name":"string","nodeType":"ElementaryTypeName","src":"78611:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78610:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15535,"nodeType":"FunctionDefinition","src":"78688:81:16","nodes":[],"documentation":{"id":15528,"nodeType":"StructuredDocumentation","src":"78632:51:16","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"78697:11:16","parameters":{"id":15531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15530,"mutability":"mutable","name":"data","nameLocation":"78725:4:16","nodeType":"VariableDeclaration","scope":15535,"src":"78709:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15529,"name":"string","nodeType":"ElementaryTypeName","src":"78709:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78708:22:16"},"returnParameters":{"id":15534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15535,"src":"78754:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15532,"name":"string","nodeType":"ElementaryTypeName","src":"78754:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78753:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15543,"nodeType":"FunctionDefinition","src":"78827:77:16","nodes":[],"documentation":{"id":15536,"nodeType":"StructuredDocumentation","src":"78775:47:16","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"78836:8:16","parameters":{"id":15539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15538,"mutability":"mutable","name":"data","nameLocation":"78860:4:16","nodeType":"VariableDeclaration","scope":15543,"src":"78845:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15537,"name":"bytes","nodeType":"ElementaryTypeName","src":"78845:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78844:21:16"},"returnParameters":{"id":15542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15543,"src":"78889:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15540,"name":"string","nodeType":"ElementaryTypeName","src":"78889:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78888:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15551,"nodeType":"FunctionDefinition","src":"78963:78:16","nodes":[],"documentation":{"id":15544,"nodeType":"StructuredDocumentation","src":"78910:48:16","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"78972:8:16","parameters":{"id":15547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15546,"mutability":"mutable","name":"data","nameLocation":"78997:4:16","nodeType":"VariableDeclaration","scope":15551,"src":"78981:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15545,"name":"string","nodeType":"ElementaryTypeName","src":"78981:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78980:22:16"},"returnParameters":{"id":15550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15551,"src":"79026:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15548,"name":"string","nodeType":"ElementaryTypeName","src":"79026:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79025:15:16"},"scope":15552,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12240,"nodeType":"StructuredDocumentation","src":"184:225:16","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15552],"name":"VmSafe","nameLocation":"419:6:16","scope":16202,"usedErrors":[]},{"id":16201,"nodeType":"ContractDefinition","src":"79216:15888:16","nodes":[{"id":15561,"nodeType":"FunctionDefinition","src":"79376:61:16","nodes":[],"documentation":{"id":15556,"nodeType":"StructuredDocumentation","src":"79275:96:16","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"79385:10:16","parameters":{"id":15557,"nodeType":"ParameterList","parameters":[],"src":"79395:2:16"},"returnParameters":{"id":15560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15559,"mutability":"mutable","name":"forkId","nameLocation":"79429:6:16","nodeType":"VariableDeclaration","scope":15561,"src":"79421:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15558,"name":"uint256","nodeType":"ElementaryTypeName","src":"79421:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79420:16:16"},"scope":16201,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15567,"nodeType":"FunctionDefinition","src":"79521:51:16","nodes":[],"documentation":{"id":15562,"nodeType":"StructuredDocumentation","src":"79443:73:16","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"79530:15:16","parameters":{"id":15565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15564,"mutability":"mutable","name":"account","nameLocation":"79554:7:16","nodeType":"VariableDeclaration","scope":15567,"src":"79546:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15563,"name":"address","nodeType":"ElementaryTypeName","src":"79546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79545:17:16"},"returnParameters":{"id":15566,"nodeType":"ParameterList","parameters":[],"src":"79571:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15573,"nodeType":"FunctionDefinition","src":"79611:54:16","nodes":[],"documentation":{"id":15568,"nodeType":"StructuredDocumentation","src":"79578:28:16","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"79620:11:16","parameters":{"id":15571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15570,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"79640:14:16","nodeType":"VariableDeclaration","scope":15573,"src":"79632:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15569,"name":"uint256","nodeType":"ElementaryTypeName","src":"79632:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79631:24:16"},"returnParameters":{"id":15572,"nodeType":"ParameterList","parameters":[],"src":"79664:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15580,"nodeType":"FunctionDefinition","src":"79832:56:16","nodes":[],"documentation":{"id":15574,"nodeType":"StructuredDocumentation","src":"79671:156:16","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"79841:10:16","parameters":{"id":15578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15577,"mutability":"mutable","name":"hashes","nameLocation":"79871:6:16","nodeType":"VariableDeclaration","scope":15580,"src":"79852:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79852:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15576,"nodeType":"ArrayTypeName","src":"79852:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"79851:27:16"},"returnParameters":{"id":15579,"nodeType":"ParameterList","parameters":[],"src":"79887:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15586,"nodeType":"FunctionDefinition","src":"79924:46:16","nodes":[],"documentation":{"id":15581,"nodeType":"StructuredDocumentation","src":"79894:25:16","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"79933:7:16","parameters":{"id":15584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15583,"mutability":"mutable","name":"newChainId","nameLocation":"79949:10:16","nodeType":"VariableDeclaration","scope":15586,"src":"79941:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15582,"name":"uint256","nodeType":"ElementaryTypeName","src":"79941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79940:20:16"},"returnParameters":{"id":15585,"nodeType":"ParameterList","parameters":[],"src":"79969:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15590,"nodeType":"FunctionDefinition","src":"80009:37:16","nodes":[],"documentation":{"id":15587,"nodeType":"StructuredDocumentation","src":"79976:28:16","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"80018:16:16","parameters":{"id":15588,"nodeType":"ParameterList","parameters":[],"src":"80034:2:16"},"returnParameters":{"id":15589,"nodeType":"ParameterList","parameters":[],"src":"80045:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15596,"nodeType":"FunctionDefinition","src":"80083:48:16","nodes":[],"documentation":{"id":15591,"nodeType":"StructuredDocumentation","src":"80052:26:16","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"80092:8:16","parameters":{"id":15594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15593,"mutability":"mutable","name":"newCoinbase","nameLocation":"80109:11:16","nodeType":"VariableDeclaration","scope":15596,"src":"80101:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15592,"name":"address","nodeType":"ElementaryTypeName","src":"80101:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80100:21:16"},"returnParameters":{"id":15595,"nodeType":"ParameterList","parameters":[],"src":"80130:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15604,"nodeType":"FunctionDefinition","src":"80251:82:16","nodes":[],"documentation":{"id":15597,"nodeType":"StructuredDocumentation","src":"80137:109:16","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80260:10:16","parameters":{"id":15600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15599,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80287:10:16","nodeType":"VariableDeclaration","scope":15604,"src":"80271:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15598,"name":"string","nodeType":"ElementaryTypeName","src":"80271:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80270:28:16"},"returnParameters":{"id":15603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15602,"mutability":"mutable","name":"forkId","nameLocation":"80325:6:16","nodeType":"VariableDeclaration","scope":15604,"src":"80317:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15601,"name":"uint256","nodeType":"ElementaryTypeName","src":"80317:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80316:16:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15614,"nodeType":"FunctionDefinition","src":"80440:103:16","nodes":[],"documentation":{"id":15605,"nodeType":"StructuredDocumentation","src":"80339:96:16","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80449:10:16","parameters":{"id":15610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15607,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80476:10:16","nodeType":"VariableDeclaration","scope":15614,"src":"80460:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15606,"name":"string","nodeType":"ElementaryTypeName","src":"80460:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15609,"mutability":"mutable","name":"blockNumber","nameLocation":"80496:11:16","nodeType":"VariableDeclaration","scope":15614,"src":"80488:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15608,"name":"uint256","nodeType":"ElementaryTypeName","src":"80488:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80459:49:16"},"returnParameters":{"id":15613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15612,"mutability":"mutable","name":"forkId","nameLocation":"80535:6:16","nodeType":"VariableDeclaration","scope":15614,"src":"80527:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15611,"name":"uint256","nodeType":"ElementaryTypeName","src":"80527:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80526:16:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15624,"nodeType":"FunctionDefinition","src":"80768:98:16","nodes":[],"documentation":{"id":15615,"nodeType":"StructuredDocumentation","src":"80549:214:16","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80777:10:16","parameters":{"id":15620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15617,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80804:10:16","nodeType":"VariableDeclaration","scope":15624,"src":"80788:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15616,"name":"string","nodeType":"ElementaryTypeName","src":"80788:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15619,"mutability":"mutable","name":"txHash","nameLocation":"80824:6:16","nodeType":"VariableDeclaration","scope":15624,"src":"80816:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80816:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80787:44:16"},"returnParameters":{"id":15623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15622,"mutability":"mutable","name":"forkId","nameLocation":"80858:6:16","nodeType":"VariableDeclaration","scope":15624,"src":"80850:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15621,"name":"uint256","nodeType":"ElementaryTypeName","src":"80850:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80849:16:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15632,"nodeType":"FunctionDefinition","src":"81001:88:16","nodes":[],"documentation":{"id":15625,"nodeType":"StructuredDocumentation","src":"80872:124:16","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81010:16:16","parameters":{"id":15628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15627,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81043:10:16","nodeType":"VariableDeclaration","scope":15632,"src":"81027:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15626,"name":"string","nodeType":"ElementaryTypeName","src":"81027:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81026:28:16"},"returnParameters":{"id":15631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15630,"mutability":"mutable","name":"forkId","nameLocation":"81081:6:16","nodeType":"VariableDeclaration","scope":15632,"src":"81073:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15629,"name":"uint256","nodeType":"ElementaryTypeName","src":"81073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81072:16:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15642,"nodeType":"FunctionDefinition","src":"81213:109:16","nodes":[],"documentation":{"id":15633,"nodeType":"StructuredDocumentation","src":"81095:113:16","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81222:16:16","parameters":{"id":15638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15635,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81255:10:16","nodeType":"VariableDeclaration","scope":15642,"src":"81239:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15634,"name":"string","nodeType":"ElementaryTypeName","src":"81239:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15637,"mutability":"mutable","name":"blockNumber","nameLocation":"81275:11:16","nodeType":"VariableDeclaration","scope":15642,"src":"81267:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15636,"name":"uint256","nodeType":"ElementaryTypeName","src":"81267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81238:49:16"},"returnParameters":{"id":15641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15640,"mutability":"mutable","name":"forkId","nameLocation":"81314:6:16","nodeType":"VariableDeclaration","scope":15642,"src":"81306:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15639,"name":"uint256","nodeType":"ElementaryTypeName","src":"81306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81305:16:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15652,"nodeType":"FunctionDefinition","src":"81558:104:16","nodes":[],"documentation":{"id":15643,"nodeType":"StructuredDocumentation","src":"81328:225:16","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81567:16:16","parameters":{"id":15648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15645,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81600:10:16","nodeType":"VariableDeclaration","scope":15652,"src":"81584:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15644,"name":"string","nodeType":"ElementaryTypeName","src":"81584:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15647,"mutability":"mutable","name":"txHash","nameLocation":"81620:6:16","nodeType":"VariableDeclaration","scope":15652,"src":"81612:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81612:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81583:44:16"},"returnParameters":{"id":15651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15650,"mutability":"mutable","name":"forkId","nameLocation":"81654:6:16","nodeType":"VariableDeclaration","scope":15652,"src":"81646:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15649,"name":"uint256","nodeType":"ElementaryTypeName","src":"81646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81645:16:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15660,"nodeType":"FunctionDefinition","src":"81702:60:16","nodes":[],"documentation":{"id":15653,"nodeType":"StructuredDocumentation","src":"81668:29:16","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"81711:4:16","parameters":{"id":15658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15655,"mutability":"mutable","name":"account","nameLocation":"81724:7:16","nodeType":"VariableDeclaration","scope":15660,"src":"81716:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15654,"name":"address","nodeType":"ElementaryTypeName","src":"81716:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15657,"mutability":"mutable","name":"newBalance","nameLocation":"81741:10:16","nodeType":"VariableDeclaration","scope":15660,"src":"81733:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15656,"name":"uint256","nodeType":"ElementaryTypeName","src":"81733:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81715:37:16"},"returnParameters":{"id":15659,"nodeType":"ParameterList","parameters":[],"src":"81761:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15668,"nodeType":"FunctionDefinition","src":"82000:76:16","nodes":[],"documentation":{"id":15661,"nodeType":"StructuredDocumentation","src":"81768:227:16","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"82009:14:16","parameters":{"id":15664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15663,"mutability":"mutable","name":"snapshotId","nameLocation":"82032:10:16","nodeType":"VariableDeclaration","scope":15668,"src":"82024:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15662,"name":"uint256","nodeType":"ElementaryTypeName","src":"82024:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82023:20:16"},"returnParameters":{"id":15667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15666,"mutability":"mutable","name":"success","nameLocation":"82067:7:16","nodeType":"VariableDeclaration","scope":15668,"src":"82062:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15665,"name":"bool","nodeType":"ElementaryTypeName","src":"82062:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82061:14:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15672,"nodeType":"FunctionDefinition","src":"82148:36:16","nodes":[],"documentation":{"id":15669,"nodeType":"StructuredDocumentation","src":"82082:61:16","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"82157:15:16","parameters":{"id":15670,"nodeType":"ParameterList","parameters":[],"src":"82172:2:16"},"returnParameters":{"id":15671,"nodeType":"ParameterList","parameters":[],"src":"82183:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15678,"nodeType":"FunctionDefinition","src":"82360:52:16","nodes":[],"documentation":{"id":15673,"nodeType":"StructuredDocumentation","src":"82190:165:16","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"82369:10:16","parameters":{"id":15676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15675,"mutability":"mutable","name":"newDifficulty","nameLocation":"82388:13:16","nodeType":"VariableDeclaration","scope":15678,"src":"82380:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15674,"name":"uint256","nodeType":"ElementaryTypeName","src":"82380:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82379:23:16"},"returnParameters":{"id":15677,"nodeType":"ParameterList","parameters":[],"src":"82411:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15684,"nodeType":"FunctionDefinition","src":"82471:61:16","nodes":[],"documentation":{"id":15679,"nodeType":"StructuredDocumentation","src":"82418:48:16","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"82480:9:16","parameters":{"id":15682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15681,"mutability":"mutable","name":"pathToStateJson","nameLocation":"82506:15:16","nodeType":"VariableDeclaration","scope":15684,"src":"82490:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15680,"name":"string","nodeType":"ElementaryTypeName","src":"82490:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82489:33:16"},"returnParameters":{"id":15683,"nodeType":"ParameterList","parameters":[],"src":"82531:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15692,"nodeType":"FunctionDefinition","src":"82569:74:16","nodes":[],"documentation":{"id":15685,"nodeType":"StructuredDocumentation","src":"82538:26:16","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"82578:4:16","parameters":{"id":15690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15687,"mutability":"mutable","name":"target","nameLocation":"82591:6:16","nodeType":"VariableDeclaration","scope":15692,"src":"82583:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15686,"name":"address","nodeType":"ElementaryTypeName","src":"82583:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15689,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"82614:18:16","nodeType":"VariableDeclaration","scope":15692,"src":"82599:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15688,"name":"bytes","nodeType":"ElementaryTypeName","src":"82599:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82582:51:16"},"returnParameters":{"id":15691,"nodeType":"ParameterList","parameters":[],"src":"82642:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15698,"nodeType":"FunctionDefinition","src":"82679:42:16","nodes":[],"documentation":{"id":15693,"nodeType":"StructuredDocumentation","src":"82649:25:16","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"82688:3:16","parameters":{"id":15696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15695,"mutability":"mutable","name":"newBasefee","nameLocation":"82700:10:16","nodeType":"VariableDeclaration","scope":15698,"src":"82692:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15694,"name":"uint256","nodeType":"ElementaryTypeName","src":"82692:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82691:20:16"},"returnParameters":{"id":15697,"nodeType":"ParameterList","parameters":[],"src":"82720:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15705,"nodeType":"FunctionDefinition","src":"82899:73:16","nodes":[],"documentation":{"id":15699,"nodeType":"StructuredDocumentation","src":"82727:167:16","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"82908:13:16","parameters":{"id":15700,"nodeType":"ParameterList","parameters":[],"src":"82921:2:16"},"returnParameters":{"id":15704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15703,"mutability":"mutable","name":"hashes","nameLocation":"82964:6:16","nodeType":"VariableDeclaration","scope":15705,"src":"82947:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82947:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15702,"nodeType":"ArrayTypeName","src":"82947:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82946:25:16"},"scope":16201,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15713,"nodeType":"FunctionDefinition","src":"83039:79:16","nodes":[],"documentation":{"id":15706,"nodeType":"StructuredDocumentation","src":"82978:56:16","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"83048:12:16","parameters":{"id":15709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15708,"mutability":"mutable","name":"account","nameLocation":"83069:7:16","nodeType":"VariableDeclaration","scope":15713,"src":"83061:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15707,"name":"address","nodeType":"ElementaryTypeName","src":"83061:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83060:17:16"},"returnParameters":{"id":15712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15711,"mutability":"mutable","name":"persistent","nameLocation":"83106:10:16","nodeType":"VariableDeclaration","scope":15713,"src":"83101:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15710,"name":"bool","nodeType":"ElementaryTypeName","src":"83101:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83100:17:16"},"scope":16201,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15719,"nodeType":"FunctionDefinition","src":"83199:63:16","nodes":[],"documentation":{"id":15714,"nodeType":"StructuredDocumentation","src":"83124:70:16","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"83208:10:16","parameters":{"id":15717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15716,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"83235:16:16","nodeType":"VariableDeclaration","scope":15719,"src":"83219:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15715,"name":"string","nodeType":"ElementaryTypeName","src":"83219:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83218:34:16"},"returnParameters":{"id":15718,"nodeType":"ParameterList","parameters":[],"src":"83261:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15725,"nodeType":"FunctionDefinition","src":"83465:50:16","nodes":[],"documentation":{"id":15720,"nodeType":"StructuredDocumentation","src":"83268:192:16","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83474:14:16","parameters":{"id":15723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15722,"mutability":"mutable","name":"account","nameLocation":"83497:7:16","nodeType":"VariableDeclaration","scope":15725,"src":"83489:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15721,"name":"address","nodeType":"ElementaryTypeName","src":"83489:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83488:17:16"},"returnParameters":{"id":15724,"nodeType":"ParameterList","parameters":[],"src":"83514:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15733,"nodeType":"FunctionDefinition","src":"83560:69:16","nodes":[],"documentation":{"id":15726,"nodeType":"StructuredDocumentation","src":"83521:34:16","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83569:14:16","parameters":{"id":15731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15728,"mutability":"mutable","name":"account0","nameLocation":"83592:8:16","nodeType":"VariableDeclaration","scope":15733,"src":"83584:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15727,"name":"address","nodeType":"ElementaryTypeName","src":"83584:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15730,"mutability":"mutable","name":"account1","nameLocation":"83610:8:16","nodeType":"VariableDeclaration","scope":15733,"src":"83602:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15729,"name":"address","nodeType":"ElementaryTypeName","src":"83602:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83583:36:16"},"returnParameters":{"id":15732,"nodeType":"ParameterList","parameters":[],"src":"83628:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15743,"nodeType":"FunctionDefinition","src":"83674:87:16","nodes":[],"documentation":{"id":15734,"nodeType":"StructuredDocumentation","src":"83635:34:16","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83683:14:16","parameters":{"id":15741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15736,"mutability":"mutable","name":"account0","nameLocation":"83706:8:16","nodeType":"VariableDeclaration","scope":15743,"src":"83698:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15735,"name":"address","nodeType":"ElementaryTypeName","src":"83698:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15738,"mutability":"mutable","name":"account1","nameLocation":"83724:8:16","nodeType":"VariableDeclaration","scope":15743,"src":"83716:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15737,"name":"address","nodeType":"ElementaryTypeName","src":"83716:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15740,"mutability":"mutable","name":"account2","nameLocation":"83742:8:16","nodeType":"VariableDeclaration","scope":15743,"src":"83734:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15739,"name":"address","nodeType":"ElementaryTypeName","src":"83734:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83697:54:16"},"returnParameters":{"id":15742,"nodeType":"ParameterList","parameters":[],"src":"83760:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15750,"nodeType":"FunctionDefinition","src":"83806:62:16","nodes":[],"documentation":{"id":15744,"nodeType":"StructuredDocumentation","src":"83767:34:16","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83815:14:16","parameters":{"id":15748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15747,"mutability":"mutable","name":"accounts","nameLocation":"83849:8:16","nodeType":"VariableDeclaration","scope":15750,"src":"83830:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15745,"name":"address","nodeType":"ElementaryTypeName","src":"83830:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15746,"nodeType":"ArrayTypeName","src":"83830:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"83829:29:16"},"returnParameters":{"id":15749,"nodeType":"ParameterList","parameters":[],"src":"83867:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15760,"nodeType":"FunctionDefinition","src":"83939:97:16","nodes":[],"documentation":{"id":15751,"nodeType":"StructuredDocumentation","src":"83874:60:16","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"83948:14:16","parameters":{"id":15758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15753,"mutability":"mutable","name":"callee","nameLocation":"83971:6:16","nodeType":"VariableDeclaration","scope":15760,"src":"83963:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15752,"name":"address","nodeType":"ElementaryTypeName","src":"83963:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15755,"mutability":"mutable","name":"data","nameLocation":"83994:4:16","nodeType":"VariableDeclaration","scope":15760,"src":"83979:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15754,"name":"bytes","nodeType":"ElementaryTypeName","src":"83979:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15757,"mutability":"mutable","name":"revertData","nameLocation":"84015:10:16","nodeType":"VariableDeclaration","scope":15760,"src":"84000:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15756,"name":"bytes","nodeType":"ElementaryTypeName","src":"84000:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83962:64:16"},"returnParameters":{"id":15759,"nodeType":"ParameterList","parameters":[],"src":"84035:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15772,"nodeType":"FunctionDefinition","src":"84136:123:16","nodes":[],"documentation":{"id":15761,"nodeType":"StructuredDocumentation","src":"84042:89:16","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"84145:14:16","parameters":{"id":15770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15763,"mutability":"mutable","name":"callee","nameLocation":"84168:6:16","nodeType":"VariableDeclaration","scope":15772,"src":"84160:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15762,"name":"address","nodeType":"ElementaryTypeName","src":"84160:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15765,"mutability":"mutable","name":"msgValue","nameLocation":"84184:8:16","nodeType":"VariableDeclaration","scope":15772,"src":"84176:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15764,"name":"uint256","nodeType":"ElementaryTypeName","src":"84176:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15767,"mutability":"mutable","name":"data","nameLocation":"84209:4:16","nodeType":"VariableDeclaration","scope":15772,"src":"84194:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15766,"name":"bytes","nodeType":"ElementaryTypeName","src":"84194:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15769,"mutability":"mutable","name":"revertData","nameLocation":"84230:10:16","nodeType":"VariableDeclaration","scope":15772,"src":"84215:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15768,"name":"bytes","nodeType":"ElementaryTypeName","src":"84215:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84159:82:16"},"returnParameters":{"id":15771,"nodeType":"ParameterList","parameters":[],"src":"84258:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15782,"nodeType":"FunctionDefinition","src":"84519:91:16","nodes":[],"documentation":{"id":15773,"nodeType":"StructuredDocumentation","src":"84265:249:16","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"84528:8:16","parameters":{"id":15780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15775,"mutability":"mutable","name":"callee","nameLocation":"84545:6:16","nodeType":"VariableDeclaration","scope":15782,"src":"84537:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15774,"name":"address","nodeType":"ElementaryTypeName","src":"84537:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15777,"mutability":"mutable","name":"data","nameLocation":"84568:4:16","nodeType":"VariableDeclaration","scope":15782,"src":"84553:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15776,"name":"bytes","nodeType":"ElementaryTypeName","src":"84553:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15779,"mutability":"mutable","name":"returnData","nameLocation":"84589:10:16","nodeType":"VariableDeclaration","scope":15782,"src":"84574:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15778,"name":"bytes","nodeType":"ElementaryTypeName","src":"84574:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84536:64:16"},"returnParameters":{"id":15781,"nodeType":"ParameterList","parameters":[],"src":"84609:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15794,"nodeType":"FunctionDefinition","src":"84785:109:16","nodes":[],"documentation":{"id":15783,"nodeType":"StructuredDocumentation","src":"84616:164:16","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"84794:8:16","parameters":{"id":15792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15785,"mutability":"mutable","name":"callee","nameLocation":"84811:6:16","nodeType":"VariableDeclaration","scope":15794,"src":"84803:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15784,"name":"address","nodeType":"ElementaryTypeName","src":"84803:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15787,"mutability":"mutable","name":"msgValue","nameLocation":"84827:8:16","nodeType":"VariableDeclaration","scope":15794,"src":"84819:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15786,"name":"uint256","nodeType":"ElementaryTypeName","src":"84819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15789,"mutability":"mutable","name":"data","nameLocation":"84852:4:16","nodeType":"VariableDeclaration","scope":15794,"src":"84837:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15788,"name":"bytes","nodeType":"ElementaryTypeName","src":"84837:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15791,"mutability":"mutable","name":"returnData","nameLocation":"84873:10:16","nodeType":"VariableDeclaration","scope":15794,"src":"84858:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15790,"name":"bytes","nodeType":"ElementaryTypeName","src":"84858:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84802:82:16"},"returnParameters":{"id":15793,"nodeType":"ParameterList","parameters":[],"src":"84893:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15800,"nodeType":"FunctionDefinition","src":"84969:43:16","nodes":[],"documentation":{"id":15795,"nodeType":"StructuredDocumentation","src":"84900:64:16","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"84978:5:16","parameters":{"id":15798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15797,"mutability":"mutable","name":"msgSender","nameLocation":"84992:9:16","nodeType":"VariableDeclaration","scope":15800,"src":"84984:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15796,"name":"address","nodeType":"ElementaryTypeName","src":"84984:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84983:19:16"},"returnParameters":{"id":15799,"nodeType":"ParameterList","parameters":[],"src":"85011:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15808,"nodeType":"FunctionDefinition","src":"85131:61:16","nodes":[],"documentation":{"id":15801,"nodeType":"StructuredDocumentation","src":"85018:108:16","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"85140:5:16","parameters":{"id":15806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15803,"mutability":"mutable","name":"msgSender","nameLocation":"85154:9:16","nodeType":"VariableDeclaration","scope":15808,"src":"85146:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15802,"name":"address","nodeType":"ElementaryTypeName","src":"85146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15805,"mutability":"mutable","name":"txOrigin","nameLocation":"85173:8:16","nodeType":"VariableDeclaration","scope":15808,"src":"85165:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15804,"name":"address","nodeType":"ElementaryTypeName","src":"85165:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85145:37:16"},"returnParameters":{"id":15807,"nodeType":"ParameterList","parameters":[],"src":"85191:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15814,"nodeType":"FunctionDefinition","src":"85369:52:16","nodes":[],"documentation":{"id":15809,"nodeType":"StructuredDocumentation","src":"85198:166:16","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"85378:10:16","parameters":{"id":15812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15811,"mutability":"mutable","name":"newPrevrandao","nameLocation":"85397:13:16","nodeType":"VariableDeclaration","scope":15814,"src":"85389:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85389:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85388:23:16"},"returnParameters":{"id":15813,"nodeType":"ParameterList","parameters":[],"src":"85420:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15820,"nodeType":"FunctionDefinition","src":"85598:52:16","nodes":[],"documentation":{"id":15815,"nodeType":"StructuredDocumentation","src":"85427:166:16","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"85607:10:16","parameters":{"id":15818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15817,"mutability":"mutable","name":"newPrevrandao","nameLocation":"85626:13:16","nodeType":"VariableDeclaration","scope":15820,"src":"85618:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15816,"name":"uint256","nodeType":"ElementaryTypeName","src":"85618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85617:23:16"},"returnParameters":{"id":15819,"nodeType":"ParameterList","parameters":[],"src":"85649:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15831,"nodeType":"FunctionDefinition","src":"85778:101:16","nodes":[],"documentation":{"id":15821,"nodeType":"StructuredDocumentation","src":"85656:117:16","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"85787:11:16","parameters":{"id":15822,"nodeType":"ParameterList","parameters":[],"src":"85798:2:16"},"returnParameters":{"id":15830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15825,"mutability":"mutable","name":"callerMode","nameLocation":"85830:10:16","nodeType":"VariableDeclaration","scope":15831,"src":"85819:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12246","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":15824,"nodeType":"UserDefinedTypeName","pathNode":{"id":15823,"name":"CallerMode","nameLocations":["85819:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":12246,"src":"85819:10:16"},"referencedDeclaration":12246,"src":"85819:10:16","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12246","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":15827,"mutability":"mutable","name":"msgSender","nameLocation":"85850:9:16","nodeType":"VariableDeclaration","scope":15831,"src":"85842:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15826,"name":"address","nodeType":"ElementaryTypeName","src":"85842:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15829,"mutability":"mutable","name":"txOrigin","nameLocation":"85869:8:16","nodeType":"VariableDeclaration","scope":15831,"src":"85861:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15828,"name":"address","nodeType":"ElementaryTypeName","src":"85861:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85818:60:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15837,"nodeType":"FunctionDefinition","src":"85967:46:16","nodes":[],"documentation":{"id":15832,"nodeType":"StructuredDocumentation","src":"85885:77:16","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"85976:10:16","parameters":{"id":15835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15834,"mutability":"mutable","name":"account","nameLocation":"85995:7:16","nodeType":"VariableDeclaration","scope":15837,"src":"85987:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15833,"name":"address","nodeType":"ElementaryTypeName","src":"85987:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85986:17:16"},"returnParameters":{"id":15836,"nodeType":"ParameterList","parameters":[],"src":"86012:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15845,"nodeType":"FunctionDefinition","src":"86356:70:16","nodes":[],"documentation":{"id":15838,"nodeType":"StructuredDocumentation","src":"86019:332:16","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"86365:8:16","parameters":{"id":15841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15840,"mutability":"mutable","name":"snapshotId","nameLocation":"86382:10:16","nodeType":"VariableDeclaration","scope":15845,"src":"86374:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15839,"name":"uint256","nodeType":"ElementaryTypeName","src":"86374:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86373:20:16"},"returnParameters":{"id":15844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15843,"mutability":"mutable","name":"success","nameLocation":"86417:7:16","nodeType":"VariableDeclaration","scope":15845,"src":"86412:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15842,"name":"bool","nodeType":"ElementaryTypeName","src":"86412:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86411:14:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15853,"nodeType":"FunctionDefinition","src":"86709:79:16","nodes":[],"documentation":{"id":15846,"nodeType":"StructuredDocumentation","src":"86432:272:16","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"86718:17:16","parameters":{"id":15849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15848,"mutability":"mutable","name":"snapshotId","nameLocation":"86744:10:16","nodeType":"VariableDeclaration","scope":15853,"src":"86736:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15847,"name":"uint256","nodeType":"ElementaryTypeName","src":"86736:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86735:20:16"},"returnParameters":{"id":15852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15851,"mutability":"mutable","name":"success","nameLocation":"86779:7:16","nodeType":"VariableDeclaration","scope":15853,"src":"86774:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15850,"name":"bool","nodeType":"ElementaryTypeName","src":"86774:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86773:14:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15859,"nodeType":"FunctionDefinition","src":"86885:52:16","nodes":[],"documentation":{"id":15854,"nodeType":"StructuredDocumentation","src":"86794:86:16","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"86894:16:16","parameters":{"id":15857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15856,"mutability":"mutable","name":"account","nameLocation":"86919:7:16","nodeType":"VariableDeclaration","scope":15859,"src":"86911:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15855,"name":"address","nodeType":"ElementaryTypeName","src":"86911:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86910:17:16"},"returnParameters":{"id":15858,"nodeType":"ParameterList","parameters":[],"src":"86936:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15866,"nodeType":"FunctionDefinition","src":"86984:64:16","nodes":[],"documentation":{"id":15860,"nodeType":"StructuredDocumentation","src":"86943:36:16","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"86993:16:16","parameters":{"id":15864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15863,"mutability":"mutable","name":"accounts","nameLocation":"87029:8:16","nodeType":"VariableDeclaration","scope":15866,"src":"87010:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15861,"name":"address","nodeType":"ElementaryTypeName","src":"87010:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15862,"nodeType":"ArrayTypeName","src":"87010:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"87009:29:16"},"returnParameters":{"id":15865,"nodeType":"ParameterList","parameters":[],"src":"87047:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15872,"nodeType":"FunctionDefinition","src":"87083:42:16","nodes":[],"documentation":{"id":15867,"nodeType":"StructuredDocumentation","src":"87054:24:16","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"87092:4:16","parameters":{"id":15870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15869,"mutability":"mutable","name":"newHeight","nameLocation":"87105:9:16","nodeType":"VariableDeclaration","scope":15872,"src":"87097:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15868,"name":"uint256","nodeType":"ElementaryTypeName","src":"87097:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87096:19:16"},"returnParameters":{"id":15871,"nodeType":"ParameterList","parameters":[],"src":"87124:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15878,"nodeType":"FunctionDefinition","src":"87264:48:16","nodes":[],"documentation":{"id":15873,"nodeType":"StructuredDocumentation","src":"87131:128:16","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87273:8:16","parameters":{"id":15876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15875,"mutability":"mutable","name":"blockNumber","nameLocation":"87290:11:16","nodeType":"VariableDeclaration","scope":15878,"src":"87282:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15874,"name":"uint256","nodeType":"ElementaryTypeName","src":"87282:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87281:21:16"},"returnParameters":{"id":15877,"nodeType":"ParameterList","parameters":[],"src":"87311:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15884,"nodeType":"FunctionDefinition","src":"87527:43:16","nodes":[],"documentation":{"id":15879,"nodeType":"StructuredDocumentation","src":"87318:204:16","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87536:8:16","parameters":{"id":15882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15881,"mutability":"mutable","name":"txHash","nameLocation":"87553:6:16","nodeType":"VariableDeclaration","scope":15884,"src":"87545:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87545:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87544:16:16"},"returnParameters":{"id":15883,"nodeType":"ParameterList","parameters":[],"src":"87569:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15892,"nodeType":"FunctionDefinition","src":"87630:64:16","nodes":[],"documentation":{"id":15885,"nodeType":"StructuredDocumentation","src":"87576:49:16","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87639:8:16","parameters":{"id":15890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15887,"mutability":"mutable","name":"forkId","nameLocation":"87656:6:16","nodeType":"VariableDeclaration","scope":15892,"src":"87648:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15886,"name":"uint256","nodeType":"ElementaryTypeName","src":"87648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15889,"mutability":"mutable","name":"blockNumber","nameLocation":"87672:11:16","nodeType":"VariableDeclaration","scope":15892,"src":"87664:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15888,"name":"uint256","nodeType":"ElementaryTypeName","src":"87664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87647:37:16"},"returnParameters":{"id":15891,"nodeType":"ParameterList","parameters":[],"src":"87693:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15900,"nodeType":"FunctionDefinition","src":"87830:59:16","nodes":[],"documentation":{"id":15893,"nodeType":"StructuredDocumentation","src":"87700:125:16","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87839:8:16","parameters":{"id":15898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15895,"mutability":"mutable","name":"forkId","nameLocation":"87856:6:16","nodeType":"VariableDeclaration","scope":15900,"src":"87848:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15894,"name":"uint256","nodeType":"ElementaryTypeName","src":"87848:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15897,"mutability":"mutable","name":"txHash","nameLocation":"87872:6:16","nodeType":"VariableDeclaration","scope":15900,"src":"87864:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87864:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87847:32:16"},"returnParameters":{"id":15899,"nodeType":"ParameterList","parameters":[],"src":"87888:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15906,"nodeType":"FunctionDefinition","src":"88002:45:16","nodes":[],"documentation":{"id":15901,"nodeType":"StructuredDocumentation","src":"87895:102:16","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"88011:10:16","parameters":{"id":15904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15903,"mutability":"mutable","name":"forkId","nameLocation":"88030:6:16","nodeType":"VariableDeclaration","scope":15906,"src":"88022:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15902,"name":"uint256","nodeType":"ElementaryTypeName","src":"88022:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88021:16:16"},"returnParameters":{"id":15905,"nodeType":"ParameterList","parameters":[],"src":"88046:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15914,"nodeType":"FunctionDefinition","src":"88197:71:16","nodes":[],"documentation":{"id":15907,"nodeType":"StructuredDocumentation","src":"88053:139:16","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"88206:12:16","parameters":{"id":15912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15909,"mutability":"mutable","name":"blockNumber","nameLocation":"88227:11:16","nodeType":"VariableDeclaration","scope":15914,"src":"88219:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15908,"name":"uint256","nodeType":"ElementaryTypeName","src":"88219:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15911,"mutability":"mutable","name":"blockHash","nameLocation":"88248:9:16","nodeType":"VariableDeclaration","scope":15914,"src":"88240:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88240:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88218:40:16"},"returnParameters":{"id":15913,"nodeType":"ParameterList","parameters":[],"src":"88267:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15922,"nodeType":"FunctionDefinition","src":"88366:61:16","nodes":[],"documentation":{"id":15915,"nodeType":"StructuredDocumentation","src":"88274:87:16","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"88375:8:16","parameters":{"id":15920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15917,"mutability":"mutable","name":"account","nameLocation":"88392:7:16","nodeType":"VariableDeclaration","scope":15922,"src":"88384:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15916,"name":"address","nodeType":"ElementaryTypeName","src":"88384:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15919,"mutability":"mutable","name":"newNonce","nameLocation":"88408:8:16","nodeType":"VariableDeclaration","scope":15922,"src":"88401:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15918,"name":"uint64","nodeType":"ElementaryTypeName","src":"88401:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88383:34:16"},"returnParameters":{"id":15921,"nodeType":"ParameterList","parameters":[],"src":"88426:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15930,"nodeType":"FunctionDefinition","src":"88493:67:16","nodes":[],"documentation":{"id":15923,"nodeType":"StructuredDocumentation","src":"88433:55:16","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"88502:14:16","parameters":{"id":15928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15925,"mutability":"mutable","name":"account","nameLocation":"88525:7:16","nodeType":"VariableDeclaration","scope":15930,"src":"88517:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15924,"name":"address","nodeType":"ElementaryTypeName","src":"88517:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15927,"mutability":"mutable","name":"newNonce","nameLocation":"88541:8:16","nodeType":"VariableDeclaration","scope":15930,"src":"88534:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15926,"name":"uint64","nodeType":"ElementaryTypeName","src":"88534:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88516:34:16"},"returnParameters":{"id":15929,"nodeType":"ParameterList","parameters":[],"src":"88559:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15936,"nodeType":"FunctionDefinition","src":"88715:58:16","nodes":[],"documentation":{"id":15931,"nodeType":"StructuredDocumentation","src":"88566:144:16","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"88724:8:16","parameters":{"id":15932,"nodeType":"ParameterList","parameters":[],"src":"88732:2:16"},"returnParameters":{"id":15935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15934,"mutability":"mutable","name":"snapshotId","nameLocation":"88761:10:16","nodeType":"VariableDeclaration","scope":15936,"src":"88753:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15933,"name":"uint256","nodeType":"ElementaryTypeName","src":"88753:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88752:20:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15942,"nodeType":"FunctionDefinition","src":"88880:48:16","nodes":[],"documentation":{"id":15937,"nodeType":"StructuredDocumentation","src":"88779:96:16","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"88889:10:16","parameters":{"id":15940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15939,"mutability":"mutable","name":"msgSender","nameLocation":"88908:9:16","nodeType":"VariableDeclaration","scope":15942,"src":"88900:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15938,"name":"address","nodeType":"ElementaryTypeName","src":"88900:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88899:19:16"},"returnParameters":{"id":15941,"nodeType":"ParameterList","parameters":[],"src":"88927:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15950,"nodeType":"FunctionDefinition","src":"89079:66:16","nodes":[],"documentation":{"id":15943,"nodeType":"StructuredDocumentation","src":"88934:140:16","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"89088:10:16","parameters":{"id":15948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15945,"mutability":"mutable","name":"msgSender","nameLocation":"89107:9:16","nodeType":"VariableDeclaration","scope":15950,"src":"89099:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15944,"name":"address","nodeType":"ElementaryTypeName","src":"89099:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15947,"mutability":"mutable","name":"txOrigin","nameLocation":"89126:8:16","nodeType":"VariableDeclaration","scope":15950,"src":"89118:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15946,"name":"address","nodeType":"ElementaryTypeName","src":"89118:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89098:37:16"},"returnParameters":{"id":15949,"nodeType":"ParameterList","parameters":[],"src":"89144:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15954,"nodeType":"FunctionDefinition","src":"89220:30:16","nodes":[],"documentation":{"id":15951,"nodeType":"StructuredDocumentation","src":"89151:64:16","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"89229:9:16","parameters":{"id":15952,"nodeType":"ParameterList","parameters":[],"src":"89238:2:16"},"returnParameters":{"id":15953,"nodeType":"ParameterList","parameters":[],"src":"89249:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15964,"nodeType":"FunctionDefinition","src":"89308:69:16","nodes":[],"documentation":{"id":15955,"nodeType":"StructuredDocumentation","src":"89256:47:16","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"89317:5:16","parameters":{"id":15962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15957,"mutability":"mutable","name":"target","nameLocation":"89331:6:16","nodeType":"VariableDeclaration","scope":15964,"src":"89323:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15956,"name":"address","nodeType":"ElementaryTypeName","src":"89323:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15959,"mutability":"mutable","name":"slot","nameLocation":"89347:4:16","nodeType":"VariableDeclaration","scope":15964,"src":"89339:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89339:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15961,"mutability":"mutable","name":"value","nameLocation":"89361:5:16","nodeType":"VariableDeclaration","scope":15964,"src":"89353:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89353:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89322:45:16"},"returnParameters":{"id":15963,"nodeType":"ParameterList","parameters":[],"src":"89376:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15970,"nodeType":"FunctionDefinition","src":"89480:43:16","nodes":[],"documentation":{"id":15965,"nodeType":"StructuredDocumentation","src":"89383:92:16","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"89489:8:16","parameters":{"id":15968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15967,"mutability":"mutable","name":"txHash","nameLocation":"89506:6:16","nodeType":"VariableDeclaration","scope":15970,"src":"89498:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89497:16:16"},"returnParameters":{"id":15969,"nodeType":"ParameterList","parameters":[],"src":"89522:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15978,"nodeType":"FunctionDefinition","src":"89625:59:16","nodes":[],"documentation":{"id":15971,"nodeType":"StructuredDocumentation","src":"89529:91:16","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"89634:8:16","parameters":{"id":15976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15973,"mutability":"mutable","name":"forkId","nameLocation":"89651:6:16","nodeType":"VariableDeclaration","scope":15978,"src":"89643:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15972,"name":"uint256","nodeType":"ElementaryTypeName","src":"89643:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15975,"mutability":"mutable","name":"txHash","nameLocation":"89667:6:16","nodeType":"VariableDeclaration","scope":15978,"src":"89659:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89659:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89642:32:16"},"returnParameters":{"id":15977,"nodeType":"ParameterList","parameters":[],"src":"89683:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15984,"nodeType":"FunctionDefinition","src":"89718:50:16","nodes":[],"documentation":{"id":15979,"nodeType":"StructuredDocumentation","src":"89690:23:16","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"89727:10:16","parameters":{"id":15982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15981,"mutability":"mutable","name":"newGasPrice","nameLocation":"89746:11:16","nodeType":"VariableDeclaration","scope":15984,"src":"89738:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15980,"name":"uint256","nodeType":"ElementaryTypeName","src":"89738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89737:21:16"},"returnParameters":{"id":15983,"nodeType":"ParameterList","parameters":[],"src":"89767:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15990,"nodeType":"FunctionDefinition","src":"89806:45:16","nodes":[],"documentation":{"id":15985,"nodeType":"StructuredDocumentation","src":"89774:27:16","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"89815:4:16","parameters":{"id":15988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15987,"mutability":"mutable","name":"newTimestamp","nameLocation":"89828:12:16","nodeType":"VariableDeclaration","scope":15990,"src":"89820:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15986,"name":"uint256","nodeType":"ElementaryTypeName","src":"89820:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89819:22:16"},"returnParameters":{"id":15989,"nodeType":"ParameterList","parameters":[],"src":"89850:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16002,"nodeType":"FunctionDefinition","src":"90003:105:16","nodes":[],"documentation":{"id":15991,"nodeType":"StructuredDocumentation","src":"89891:107:16","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"90012:16:16","parameters":{"id":16000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15993,"mutability":"mutable","name":"callee","nameLocation":"90037:6:16","nodeType":"VariableDeclaration","scope":16002,"src":"90029:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15992,"name":"address","nodeType":"ElementaryTypeName","src":"90029:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15995,"mutability":"mutable","name":"msgValue","nameLocation":"90053:8:16","nodeType":"VariableDeclaration","scope":16002,"src":"90045:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15994,"name":"uint256","nodeType":"ElementaryTypeName","src":"90045:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15997,"mutability":"mutable","name":"minGas","nameLocation":"90070:6:16","nodeType":"VariableDeclaration","scope":16002,"src":"90063:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15996,"name":"uint64","nodeType":"ElementaryTypeName","src":"90063:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15999,"mutability":"mutable","name":"data","nameLocation":"90093:4:16","nodeType":"VariableDeclaration","scope":16002,"src":"90078:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15998,"name":"bytes","nodeType":"ElementaryTypeName","src":"90078:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90028:70:16"},"returnParameters":{"id":16001,"nodeType":"ParameterList","parameters":[],"src":"90107:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16016,"nodeType":"FunctionDefinition","src":"90241:127:16","nodes":[],"documentation":{"id":16003,"nodeType":"StructuredDocumentation","src":"90114:122:16","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"90250:16:16","parameters":{"id":16014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16005,"mutability":"mutable","name":"callee","nameLocation":"90275:6:16","nodeType":"VariableDeclaration","scope":16016,"src":"90267:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16004,"name":"address","nodeType":"ElementaryTypeName","src":"90267:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16007,"mutability":"mutable","name":"msgValue","nameLocation":"90291:8:16","nodeType":"VariableDeclaration","scope":16016,"src":"90283:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16006,"name":"uint256","nodeType":"ElementaryTypeName","src":"90283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16009,"mutability":"mutable","name":"minGas","nameLocation":"90308:6:16","nodeType":"VariableDeclaration","scope":16016,"src":"90301:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16008,"name":"uint64","nodeType":"ElementaryTypeName","src":"90301:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16011,"mutability":"mutable","name":"data","nameLocation":"90331:4:16","nodeType":"VariableDeclaration","scope":16016,"src":"90316:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16010,"name":"bytes","nodeType":"ElementaryTypeName","src":"90316:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16013,"mutability":"mutable","name":"count","nameLocation":"90344:5:16","nodeType":"VariableDeclaration","scope":16016,"src":"90337:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16012,"name":"uint64","nodeType":"ElementaryTypeName","src":"90337:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90266:84:16"},"returnParameters":{"id":16015,"nodeType":"ParameterList","parameters":[],"src":"90367:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16024,"nodeType":"FunctionDefinition","src":"90500:66:16","nodes":[],"documentation":{"id":16017,"nodeType":"StructuredDocumentation","src":"90374:121:16","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90509:10:16","parameters":{"id":16022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16019,"mutability":"mutable","name":"callee","nameLocation":"90528:6:16","nodeType":"VariableDeclaration","scope":16024,"src":"90520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16018,"name":"address","nodeType":"ElementaryTypeName","src":"90520:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16021,"mutability":"mutable","name":"data","nameLocation":"90551:4:16","nodeType":"VariableDeclaration","scope":16024,"src":"90536:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16020,"name":"bytes","nodeType":"ElementaryTypeName","src":"90536:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90519:37:16"},"returnParameters":{"id":16023,"nodeType":"ParameterList","parameters":[],"src":"90565:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16034,"nodeType":"FunctionDefinition","src":"90653:80:16","nodes":[],"documentation":{"id":16025,"nodeType":"StructuredDocumentation","src":"90572:76:16","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90662:10:16","parameters":{"id":16032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16027,"mutability":"mutable","name":"callee","nameLocation":"90681:6:16","nodeType":"VariableDeclaration","scope":16034,"src":"90673:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16026,"name":"address","nodeType":"ElementaryTypeName","src":"90673:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16029,"mutability":"mutable","name":"data","nameLocation":"90704:4:16","nodeType":"VariableDeclaration","scope":16034,"src":"90689:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16028,"name":"bytes","nodeType":"ElementaryTypeName","src":"90689:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16031,"mutability":"mutable","name":"count","nameLocation":"90717:5:16","nodeType":"VariableDeclaration","scope":16034,"src":"90710:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16030,"name":"uint64","nodeType":"ElementaryTypeName","src":"90710:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90672:51:16"},"returnParameters":{"id":16033,"nodeType":"ParameterList","parameters":[],"src":"90732:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16044,"nodeType":"FunctionDefinition","src":"90821:84:16","nodes":[],"documentation":{"id":16035,"nodeType":"StructuredDocumentation","src":"90739:77:16","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90830:10:16","parameters":{"id":16042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16037,"mutability":"mutable","name":"callee","nameLocation":"90849:6:16","nodeType":"VariableDeclaration","scope":16044,"src":"90841:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16036,"name":"address","nodeType":"ElementaryTypeName","src":"90841:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16039,"mutability":"mutable","name":"msgValue","nameLocation":"90865:8:16","nodeType":"VariableDeclaration","scope":16044,"src":"90857:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16038,"name":"uint256","nodeType":"ElementaryTypeName","src":"90857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16041,"mutability":"mutable","name":"data","nameLocation":"90890:4:16","nodeType":"VariableDeclaration","scope":16044,"src":"90875:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16040,"name":"bytes","nodeType":"ElementaryTypeName","src":"90875:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90840:55:16"},"returnParameters":{"id":16043,"nodeType":"ParameterList","parameters":[],"src":"90904:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16056,"nodeType":"FunctionDefinition","src":"91008:98:16","nodes":[],"documentation":{"id":16045,"nodeType":"StructuredDocumentation","src":"90911:92:16","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91017:10:16","parameters":{"id":16054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16047,"mutability":"mutable","name":"callee","nameLocation":"91036:6:16","nodeType":"VariableDeclaration","scope":16056,"src":"91028:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16046,"name":"address","nodeType":"ElementaryTypeName","src":"91028:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16049,"mutability":"mutable","name":"msgValue","nameLocation":"91052:8:16","nodeType":"VariableDeclaration","scope":16056,"src":"91044:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16048,"name":"uint256","nodeType":"ElementaryTypeName","src":"91044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16051,"mutability":"mutable","name":"data","nameLocation":"91077:4:16","nodeType":"VariableDeclaration","scope":16056,"src":"91062:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16050,"name":"bytes","nodeType":"ElementaryTypeName","src":"91062:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16053,"mutability":"mutable","name":"count","nameLocation":"91090:5:16","nodeType":"VariableDeclaration","scope":16056,"src":"91083:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16052,"name":"uint64","nodeType":"ElementaryTypeName","src":"91083:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91027:69:16"},"returnParameters":{"id":16055,"nodeType":"ParameterList","parameters":[],"src":"91105:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16068,"nodeType":"FunctionDefinition","src":"91199:96:16","nodes":[],"documentation":{"id":16057,"nodeType":"StructuredDocumentation","src":"91112:82:16","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91208:10:16","parameters":{"id":16066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16059,"mutability":"mutable","name":"callee","nameLocation":"91227:6:16","nodeType":"VariableDeclaration","scope":16068,"src":"91219:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16058,"name":"address","nodeType":"ElementaryTypeName","src":"91219:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16061,"mutability":"mutable","name":"msgValue","nameLocation":"91243:8:16","nodeType":"VariableDeclaration","scope":16068,"src":"91235:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16060,"name":"uint256","nodeType":"ElementaryTypeName","src":"91235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16063,"mutability":"mutable","name":"gas","nameLocation":"91260:3:16","nodeType":"VariableDeclaration","scope":16068,"src":"91253:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16062,"name":"uint64","nodeType":"ElementaryTypeName","src":"91253:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16065,"mutability":"mutable","name":"data","nameLocation":"91280:4:16","nodeType":"VariableDeclaration","scope":16068,"src":"91265:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16064,"name":"bytes","nodeType":"ElementaryTypeName","src":"91265:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91218:67:16"},"returnParameters":{"id":16067,"nodeType":"ParameterList","parameters":[],"src":"91294:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16082,"nodeType":"FunctionDefinition","src":"91404:110:16","nodes":[],"documentation":{"id":16069,"nodeType":"StructuredDocumentation","src":"91301:98:16","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91413:10:16","parameters":{"id":16080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16071,"mutability":"mutable","name":"callee","nameLocation":"91432:6:16","nodeType":"VariableDeclaration","scope":16082,"src":"91424:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16070,"name":"address","nodeType":"ElementaryTypeName","src":"91424:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16073,"mutability":"mutable","name":"msgValue","nameLocation":"91448:8:16","nodeType":"VariableDeclaration","scope":16082,"src":"91440:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16072,"name":"uint256","nodeType":"ElementaryTypeName","src":"91440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16075,"mutability":"mutable","name":"gas","nameLocation":"91465:3:16","nodeType":"VariableDeclaration","scope":16082,"src":"91458:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16074,"name":"uint64","nodeType":"ElementaryTypeName","src":"91458:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16077,"mutability":"mutable","name":"data","nameLocation":"91485:4:16","nodeType":"VariableDeclaration","scope":16082,"src":"91470:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16076,"name":"bytes","nodeType":"ElementaryTypeName","src":"91470:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16079,"mutability":"mutable","name":"count","nameLocation":"91498:5:16","nodeType":"VariableDeclaration","scope":16082,"src":"91491:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16078,"name":"uint64","nodeType":"ElementaryTypeName","src":"91491:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91423:81:16"},"returnParameters":{"id":16081,"nodeType":"ParameterList","parameters":[],"src":"91513:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16096,"nodeType":"FunctionDefinition","src":"91873:134:16","nodes":[],"documentation":{"id":16083,"nodeType":"StructuredDocumentation","src":"91520:348:16","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"91882:19:16","parameters":{"id":16094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16085,"mutability":"mutable","name":"checkTopic0","nameLocation":"91907:11:16","nodeType":"VariableDeclaration","scope":16096,"src":"91902:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16084,"name":"bool","nodeType":"ElementaryTypeName","src":"91902:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16087,"mutability":"mutable","name":"checkTopic1","nameLocation":"91925:11:16","nodeType":"VariableDeclaration","scope":16096,"src":"91920:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16086,"name":"bool","nodeType":"ElementaryTypeName","src":"91920:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16089,"mutability":"mutable","name":"checkTopic2","nameLocation":"91943:11:16","nodeType":"VariableDeclaration","scope":16096,"src":"91938:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16088,"name":"bool","nodeType":"ElementaryTypeName","src":"91938:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16091,"mutability":"mutable","name":"checkTopic3","nameLocation":"91961:11:16","nodeType":"VariableDeclaration","scope":16096,"src":"91956:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16090,"name":"bool","nodeType":"ElementaryTypeName","src":"91956:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16093,"mutability":"mutable","name":"checkData","nameLocation":"91979:9:16","nodeType":"VariableDeclaration","scope":16096,"src":"91974:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16092,"name":"bool","nodeType":"ElementaryTypeName","src":"91974:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91901:88:16"},"returnParameters":{"id":16095,"nodeType":"ParameterList","parameters":[],"src":"92006:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16112,"nodeType":"FunctionDefinition","src":"92110:197:16","nodes":[],"documentation":{"id":16097,"nodeType":"StructuredDocumentation","src":"92013:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92119:19:16","parameters":{"id":16110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16099,"mutability":"mutable","name":"checkTopic0","nameLocation":"92153:11:16","nodeType":"VariableDeclaration","scope":16112,"src":"92148:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16098,"name":"bool","nodeType":"ElementaryTypeName","src":"92148:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16101,"mutability":"mutable","name":"checkTopic1","nameLocation":"92179:11:16","nodeType":"VariableDeclaration","scope":16112,"src":"92174:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16100,"name":"bool","nodeType":"ElementaryTypeName","src":"92174:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16103,"mutability":"mutable","name":"checkTopic2","nameLocation":"92205:11:16","nodeType":"VariableDeclaration","scope":16112,"src":"92200:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16102,"name":"bool","nodeType":"ElementaryTypeName","src":"92200:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16105,"mutability":"mutable","name":"checkTopic3","nameLocation":"92231:11:16","nodeType":"VariableDeclaration","scope":16112,"src":"92226:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16104,"name":"bool","nodeType":"ElementaryTypeName","src":"92226:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16107,"mutability":"mutable","name":"checkData","nameLocation":"92257:9:16","nodeType":"VariableDeclaration","scope":16112,"src":"92252:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16106,"name":"bool","nodeType":"ElementaryTypeName","src":"92252:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16109,"mutability":"mutable","name":"emitter","nameLocation":"92284:7:16","nodeType":"VariableDeclaration","scope":16112,"src":"92276:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16108,"name":"address","nodeType":"ElementaryTypeName","src":"92276:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92138:159:16"},"returnParameters":{"id":16111,"nodeType":"ParameterList","parameters":[],"src":"92306:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16116,"nodeType":"FunctionDefinition","src":"92597:40:16","nodes":[],"documentation":{"id":16113,"nodeType":"StructuredDocumentation","src":"92313:279:16","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92606:19:16","parameters":{"id":16114,"nodeType":"ParameterList","parameters":[],"src":"92625:2:16"},"returnParameters":{"id":16115,"nodeType":"ParameterList","parameters":[],"src":"92636:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16122,"nodeType":"FunctionDefinition","src":"92740:55:16","nodes":[],"documentation":{"id":16117,"nodeType":"StructuredDocumentation","src":"92643:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92749:19:16","parameters":{"id":16120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16119,"mutability":"mutable","name":"emitter","nameLocation":"92777:7:16","nodeType":"VariableDeclaration","scope":16122,"src":"92769:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16118,"name":"address","nodeType":"ElementaryTypeName","src":"92769:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92768:17:16"},"returnParameters":{"id":16121,"nodeType":"ParameterList","parameters":[],"src":"92794:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16134,"nodeType":"FunctionDefinition","src":"93134:99:16","nodes":[],"documentation":{"id":16123,"nodeType":"StructuredDocumentation","src":"92801:328:16","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93143:10:16","parameters":{"id":16132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16125,"mutability":"mutable","name":"checkTopic1","nameLocation":"93159:11:16","nodeType":"VariableDeclaration","scope":16134,"src":"93154:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16124,"name":"bool","nodeType":"ElementaryTypeName","src":"93154:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16127,"mutability":"mutable","name":"checkTopic2","nameLocation":"93177:11:16","nodeType":"VariableDeclaration","scope":16134,"src":"93172:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16126,"name":"bool","nodeType":"ElementaryTypeName","src":"93172:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16129,"mutability":"mutable","name":"checkTopic3","nameLocation":"93195:11:16","nodeType":"VariableDeclaration","scope":16134,"src":"93190:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16128,"name":"bool","nodeType":"ElementaryTypeName","src":"93190:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16131,"mutability":"mutable","name":"checkData","nameLocation":"93213:9:16","nodeType":"VariableDeclaration","scope":16134,"src":"93208:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16130,"name":"bool","nodeType":"ElementaryTypeName","src":"93208:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"93153:70:16"},"returnParameters":{"id":16133,"nodeType":"ParameterList","parameters":[],"src":"93232:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16148,"nodeType":"FunctionDefinition","src":"93336:124:16","nodes":[],"documentation":{"id":16135,"nodeType":"StructuredDocumentation","src":"93239:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93345:10:16","parameters":{"id":16146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16137,"mutability":"mutable","name":"checkTopic1","nameLocation":"93361:11:16","nodeType":"VariableDeclaration","scope":16148,"src":"93356:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16136,"name":"bool","nodeType":"ElementaryTypeName","src":"93356:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16139,"mutability":"mutable","name":"checkTopic2","nameLocation":"93379:11:16","nodeType":"VariableDeclaration","scope":16148,"src":"93374:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16138,"name":"bool","nodeType":"ElementaryTypeName","src":"93374:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16141,"mutability":"mutable","name":"checkTopic3","nameLocation":"93397:11:16","nodeType":"VariableDeclaration","scope":16148,"src":"93392:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16140,"name":"bool","nodeType":"ElementaryTypeName","src":"93392:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16143,"mutability":"mutable","name":"checkData","nameLocation":"93415:9:16","nodeType":"VariableDeclaration","scope":16148,"src":"93410:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16142,"name":"bool","nodeType":"ElementaryTypeName","src":"93410:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16145,"mutability":"mutable","name":"emitter","nameLocation":"93434:7:16","nodeType":"VariableDeclaration","scope":16148,"src":"93426:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16144,"name":"address","nodeType":"ElementaryTypeName","src":"93426:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93355:87:16"},"returnParameters":{"id":16147,"nodeType":"ParameterList","parameters":[],"src":"93459:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16152,"nodeType":"FunctionDefinition","src":"93730:31:16","nodes":[],"documentation":{"id":16149,"nodeType":"StructuredDocumentation","src":"93466:259:16","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93739:10:16","parameters":{"id":16150,"nodeType":"ParameterList","parameters":[],"src":"93749:2:16"},"returnParameters":{"id":16151,"nodeType":"ParameterList","parameters":[],"src":"93760:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16158,"nodeType":"FunctionDefinition","src":"93864:46:16","nodes":[],"documentation":{"id":16153,"nodeType":"StructuredDocumentation","src":"93767:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93873:10:16","parameters":{"id":16156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16155,"mutability":"mutable","name":"emitter","nameLocation":"93892:7:16","nodeType":"VariableDeclaration","scope":16158,"src":"93884:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16154,"name":"address","nodeType":"ElementaryTypeName","src":"93884:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93883:17:16"},"returnParameters":{"id":16157,"nodeType":"ParameterList","parameters":[],"src":"93909:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16162,"nodeType":"FunctionDefinition","src":"93976:33:16","nodes":[],"documentation":{"id":16159,"nodeType":"StructuredDocumentation","src":"93916:55:16","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"93985:12:16","parameters":{"id":16160,"nodeType":"ParameterList","parameters":[],"src":"93997:2:16"},"returnParameters":{"id":16161,"nodeType":"ParameterList","parameters":[],"src":"94008:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16168,"nodeType":"FunctionDefinition","src":"94087:50:16","nodes":[],"documentation":{"id":16163,"nodeType":"StructuredDocumentation","src":"94015:67:16","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94096:12:16","parameters":{"id":16166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16165,"mutability":"mutable","name":"revertData","nameLocation":"94116:10:16","nodeType":"VariableDeclaration","scope":16168,"src":"94109:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16164,"name":"bytes4","nodeType":"ElementaryTypeName","src":"94109:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"94108:19:16"},"returnParameters":{"id":16167,"nodeType":"ParameterList","parameters":[],"src":"94136:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16174,"nodeType":"FunctionDefinition","src":"94219:58:16","nodes":[],"documentation":{"id":16169,"nodeType":"StructuredDocumentation","src":"94143:71:16","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94228:12:16","parameters":{"id":16172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16171,"mutability":"mutable","name":"revertData","nameLocation":"94256:10:16","nodeType":"VariableDeclaration","scope":16174,"src":"94241:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16170,"name":"bytes","nodeType":"ElementaryTypeName","src":"94241:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94240:27:16"},"returnParameters":{"id":16173,"nodeType":"ParameterList","parameters":[],"src":"94276:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16182,"nodeType":"FunctionDefinition","src":"94506:59:16","nodes":[],"documentation":{"id":16175,"nodeType":"StructuredDocumentation","src":"94283:218:16","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"94515:16:16","parameters":{"id":16180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16177,"mutability":"mutable","name":"min","nameLocation":"94539:3:16","nodeType":"VariableDeclaration","scope":16182,"src":"94532:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16176,"name":"uint64","nodeType":"ElementaryTypeName","src":"94532:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16179,"mutability":"mutable","name":"max","nameLocation":"94551:3:16","nodeType":"VariableDeclaration","scope":16182,"src":"94544:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16178,"name":"uint64","nodeType":"ElementaryTypeName","src":"94544:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94531:24:16"},"returnParameters":{"id":16181,"nodeType":"ParameterList","parameters":[],"src":"94564:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16190,"nodeType":"FunctionDefinition","src":"94807:63:16","nodes":[],"documentation":{"id":16183,"nodeType":"StructuredDocumentation","src":"94571:231:16","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"94816:20:16","parameters":{"id":16188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16185,"mutability":"mutable","name":"min","nameLocation":"94844:3:16","nodeType":"VariableDeclaration","scope":16190,"src":"94837:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16184,"name":"uint64","nodeType":"ElementaryTypeName","src":"94837:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16187,"mutability":"mutable","name":"max","nameLocation":"94856:3:16","nodeType":"VariableDeclaration","scope":16190,"src":"94849:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16186,"name":"uint64","nodeType":"ElementaryTypeName","src":"94849:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94836:24:16"},"returnParameters":{"id":16189,"nodeType":"ParameterList","parameters":[],"src":"94869:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16196,"nodeType":"FunctionDefinition","src":"94948:38:16","nodes":[],"documentation":{"id":16191,"nodeType":"StructuredDocumentation","src":"94876:67:16","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"94957:4:16","parameters":{"id":16194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16193,"mutability":"mutable","name":"skipTest","nameLocation":"94967:8:16","nodeType":"VariableDeclaration","scope":16196,"src":"94962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16192,"name":"bool","nodeType":"ElementaryTypeName","src":"94962:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94961:15:16"},"returnParameters":{"id":16195,"nodeType":"ParameterList","parameters":[],"src":"94985:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16200,"nodeType":"FunctionDefinition","src":"95061:41:16","nodes":[],"documentation":{"id":16197,"nodeType":"StructuredDocumentation","src":"94992:64:16","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"95070:20:16","parameters":{"id":16198,"nodeType":"ParameterList","parameters":[],"src":"95090:2:16"},"returnParameters":{"id":16199,"nodeType":"ParameterList","parameters":[],"src":"95101:0:16"},"scope":16201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":15554,"name":"VmSafe","nameLocations":["79232:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15552,"src":"79232:6:16"},"id":15555,"nodeType":"InheritanceSpecifier","src":"79232:6:16"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":15553,"nodeType":"StructuredDocumentation","src":"79045:171:16","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16201,15552],"name":"Vm","nameLocation":"79226:2:16","scope":16202,"usedErrors":[]}],"license":"MIT OR Apache-2.0"},"id":16}